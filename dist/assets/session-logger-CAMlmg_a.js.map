{"version":3,"file":"session-logger-CAMlmg_a.js","sources":["../../node_modules/@wearesage/vue/src/stores/session-logger.ts"],"sourcesContent":["import { defineStore, acceptHMRUpdate } from \"pinia\";\nimport { ref, computed, watch, onBeforeUnmount } from \"vue\";\nimport { useSocketCore } from \"./socket-core\";\nimport { useAuth } from \"./auth\";\n\n// Session Event Types\nexport enum SessionEventType {\n  // Session Lifecycle\n  SESSION_START = 0,\n  SESSION_END = 1,\n  PAGE_VIEW = 2,\n  \n  // Authentication Events\n  AUTH_LOGIN_ATTEMPT = 10,\n  AUTH_LOGIN_SUCCESS = 11,\n  AUTH_LOGIN_FAILURE = 12,\n  AUTH_LOGOUT = 13,\n  AUTH_TOKEN_REFRESH = 14,\n  AUTH_IMPERSONATION_START = 15,\n  AUTH_IMPERSONATION_STOP = 16,\n  \n  // Audio Events\n  AUDIO_SOURCE_CHANGE = 20,\n  AUDIO_TRACK_START = 21,\n  AUDIO_TRACK_END = 22,\n  AUDIO_TRACK_SKIP = 23,\n  AUDIO_VOLUME_CHANGE = 24,\n  AUDIO_SEEK = 25,\n  AUDIO_PAUSE = 26,\n  AUDIO_RESUME = 27,\n  \n  // Creative Events\n  SHADER_CHANGE = 30,\n  VARIANT_TWEEN = 31,\n  PROJECT_CREATE = 32,\n  PROJECT_EDIT = 33,\n  PROJECT_SHARE = 34,\n  \n  // User Interaction Events\n  UI_CLICK = 40,\n  UI_MODAL_OPEN = 41,\n  UI_MODAL_CLOSE = 42,\n  UI_SETTING_CHANGE = 43,\n  UI_KEYBOARD_SHORTCUT = 44,\n  \n  // Performance Events\n  COMPONENT_LOAD = 50,\n  API_REQUEST = 51,\n  API_RESPONSE = 52,\n  ERROR_OCCURRED = 53,\n  PERFORMANCE_METRIC = 54,\n  \n  // Collaboration Events\n  SOCKET_CONNECT = 60,\n  SOCKET_DISCONNECT = 61,\n  REAL_TIME_MESSAGE = 62,\n  ACTIVE_SPACE_JOIN = 63,\n  ACTIVE_SPACE_LEAVE = 64,\n}\n\n// Core event structure\nexport interface SessionEvent {\n  // Core identifiers\n  timestamp: number;\n  sessionId: string;\n  userId: string | null; // walletAddress for authenticated users, null for anonymous\n  anonymousId?: string; // For anonymous users\n  \n  // Event classification\n  eventType: SessionEventType;\n  eventCategory: string; // 'auth', 'audio', 'ui', 'performance', etc.\n  \n  // Event data\n  eventData: Record<string, any>;\n  \n  // Context information\n  context: {\n    page: string;\n    route: string;\n    userAgent: string;\n    deviceType: 'desktop' | 'mobile' | 'tablet';\n    clientPlatform: 'web' | 'electron' | 'mobile';\n    viewport: { width: number; height: number };\n    location?: { lat: number; lng: number };\n    // Previous event type for sequence analysis\n    previousEventType?: SessionEventType;\n    // Time since session start\n    sessionDuration: number;\n  };\n}\n\n// Event priority levels for buffering strategy\nexport enum EventPriority {\n  LOW = 0,     // Batch every 10 seconds\n  MEDIUM = 1,  // Batch every 5 seconds\n  HIGH = 2,    // Batch every 2 seconds\n  CRITICAL = 3 // Send immediately\n}\n\n// Event buffer configuration\ninterface EventBuffer {\n  events: SessionEvent[];\n  lastFlush: number;\n  flushInterval: number;\n}\n\nexport const useSessionLogger = defineStore(\"sessionLogger\", () => {\n  const socket = useSocketCore();\n  const auth = useAuth();\n  \n  // Session tracking\n  const sessionId = ref<string>(generateSessionId());\n  const sessionStartTime = ref<number>(Date.now());\n  const isLoggingEnabled = ref<boolean>(true);\n  const isVerboseLogging = ref<boolean>(false);\n  \n  // Event buffering by priority\n  const eventBuffers = ref<Record<EventPriority, EventBuffer>>({\n    [EventPriority.LOW]: { events: [], lastFlush: Date.now(), flushInterval: 10000 },\n    [EventPriority.MEDIUM]: { events: [], lastFlush: Date.now(), flushInterval: 5000 },\n    [EventPriority.HIGH]: { events: [], lastFlush: Date.now(), flushInterval: 2000 },\n    [EventPriority.CRITICAL]: { events: [], lastFlush: Date.now(), flushInterval: 0 }\n  });\n  \n  // Last event tracking for sequence analysis\n  const lastEventType = ref<SessionEventType | null>(null);\n  \n  // Statistics\n  const totalEventsLogged = ref<number>(0);\n  const totalEventsSent = ref<number>(0);\n  const totalEventsBuffered = computed(() => {\n    return Object.values(eventBuffers.value).reduce((total, buffer) => total + buffer.events.length, 0);\n  });\n  \n  // Flush intervals for each priority level\n  const flushIntervals = ref<Record<EventPriority, number | null>>({\n    [EventPriority.LOW]: null,\n    [EventPriority.MEDIUM]: null,\n    [EventPriority.HIGH]: null,\n    [EventPriority.CRITICAL]: null\n  });\n  \n  /**\n   * Generate a unique session ID\n   */\n  function generateSessionId(): string {\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n  \n  /**\n   * Generate anonymous user ID for non-authenticated users\n   */\n  function generateAnonymousId(): string {\n    const existing = localStorage.getItem('anonymousSessionId');\n    if (existing) return existing;\n    \n    const anonymousId = `anon_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    localStorage.setItem('anonymousSessionId', anonymousId);\n    return anonymousId;\n  }\n  \n  /**\n   * Get current user identifier\n   */\n  function getCurrentUserId(): string | null {\n    return auth.walletAddress || null;\n  }\n  \n  /**\n   * Get current context information\n   */\n  function getCurrentContext(): SessionEvent['context'] {\n    const now = Date.now();\n    return {\n      page: window.location.pathname,\n      route: window.location.pathname,\n      userAgent: navigator.userAgent,\n      deviceType: /Mobile|Android|iPhone|iPad/.test(navigator.userAgent) \n        ? (/iPad|tablet/.test(navigator.userAgent) ? \"tablet\" : \"mobile\")\n        : \"desktop\",\n      clientPlatform: \"web\", // Could be enhanced to detect electron\n      viewport: {\n        width: window.innerWidth,\n        height: window.innerHeight\n      },\n      previousEventType: lastEventType.value || undefined,\n      sessionDuration: now - sessionStartTime.value\n    };\n  }\n  \n  /**\n   * Determine event priority based on type\n   */\n  function getEventPriority(eventType: SessionEventType): EventPriority {\n    switch (eventType) {\n      // Critical events - send immediately\n      case SessionEventType.SESSION_START:\n      case SessionEventType.SESSION_END:\n      case SessionEventType.AUTH_LOGIN_SUCCESS:\n      case SessionEventType.AUTH_LOGIN_FAILURE:\n      case SessionEventType.ERROR_OCCURRED:\n        return EventPriority.CRITICAL;\n      \n      // High priority - send within 2 seconds\n      case SessionEventType.AUTH_LOGIN_ATTEMPT:\n      case SessionEventType.AUTH_LOGOUT:\n      case SessionEventType.AUDIO_TRACK_START:\n      case SessionEventType.PAGE_VIEW:\n      case SessionEventType.PROJECT_CREATE:\n        return EventPriority.HIGH;\n      \n      // Medium priority - send within 5 seconds\n      case SessionEventType.AUDIO_SOURCE_CHANGE:\n      case SessionEventType.AUDIO_TRACK_END:\n      case SessionEventType.SHADER_CHANGE:\n      case SessionEventType.API_REQUEST:\n      case SessionEventType.UI_MODAL_OPEN:\n        return EventPriority.MEDIUM;\n      \n      // Low priority - batch and send every 10 seconds\n      case SessionEventType.AUDIO_VOLUME_CHANGE:\n      case SessionEventType.UI_CLICK:\n      case SessionEventType.PERFORMANCE_METRIC:\n      case SessionEventType.VARIANT_TWEEN:\n        return EventPriority.LOW;\n      \n      default:\n        return EventPriority.LOW;\n    }\n  }\n  \n  /**\n   * Get event category from event type\n   */\n  function getEventCategory(eventType: SessionEventType): string {\n    if (eventType >= 10 && eventType < 20) return 'auth';\n    if (eventType >= 20 && eventType < 30) return 'audio';\n    if (eventType >= 30 && eventType < 40) return 'creative';\n    if (eventType >= 40 && eventType < 50) return 'ui';\n    if (eventType >= 50 && eventType < 60) return 'performance';\n    if (eventType >= 60 && eventType < 70) return 'collaboration';\n    return 'session';\n  }\n  \n  /**\n   * Log a session event\n   */\n  function logEvent(\n    eventType: SessionEventType,\n    eventData: Record<string, any> = {},\n    customContext?: Partial<SessionEvent['context']>\n  ): void {\n    if (!isLoggingEnabled.value) return;\n    \n    const event: SessionEvent = {\n      timestamp: Date.now(),\n      sessionId: sessionId.value,\n      userId: getCurrentUserId(),\n      anonymousId: getCurrentUserId() ? undefined : generateAnonymousId(),\n      eventType,\n      eventCategory: getEventCategory(eventType),\n      eventData,\n      context: {\n        ...getCurrentContext(),\n        ...customContext\n      }\n    };\n    \n    // Update last event type for sequence analysis\n    lastEventType.value = eventType;\n    totalEventsLogged.value++;\n    \n    if (isVerboseLogging.value) {\n      console.log(\"ðŸ“Š Session Event:\", {\n        type: SessionEventType[eventType],\n        category: event.eventCategory,\n        data: eventData,\n        sessionDuration: `${(event.context.sessionDuration / 1000).toFixed(1)}s`\n      });\n    }\n    \n    // Add to appropriate buffer based on priority\n    const priority = getEventPriority(eventType);\n    eventBuffers.value[priority].events.push(event);\n    \n    // Immediately flush critical events\n    if (priority === EventPriority.CRITICAL) {\n      flushBuffer(priority);\n    }\n  }\n  \n  /**\n   * Flush event buffer for a specific priority\n   */\n  async function flushBuffer(priority: EventPriority): Promise<void> {\n    const buffer = eventBuffers.value[priority];\n    if (buffer.events.length === 0) return;\n    \n    const eventsToSend = [...buffer.events];\n    buffer.events = [];\n    buffer.lastFlush = Date.now();\n    \n    try {\n      await sendEvents(eventsToSend);\n      totalEventsSent.value += eventsToSend.length;\n      \n      if (isVerboseLogging.value && eventsToSend.length > 1) {\n        console.log(`ðŸ“Š Flushed ${eventsToSend.length} events (priority: ${EventPriority[priority]})`);\n      }\n    } catch (error) {\n      console.error(\"ðŸ“Š Failed to send events:\", error);\n      // Re-add events to buffer to retry later\n      buffer.events.unshift(...eventsToSend);\n    }\n  }\n  \n  /**\n   * Send events to server\n   */\n  async function sendEvents(events: SessionEvent[]): Promise<void> {\n    if (events.length === 0) return;\n    \n    // Try socket first, fall back to HTTP\n    if (socket.connected) {\n      socket.emit(\"session:log-events\", { events });\n    } else {\n      // HTTP fallback\n      const response = await fetch(\"/api/log\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...(auth.authToken && { Authorization: `Bearer ${auth.authToken}` })\n        },\n        body: JSON.stringify({ events })\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n    }\n  }\n  \n  /**\n   * Start flush intervals for each priority level\n   */\n  function startFlushIntervals(): void {\n    Object.entries(eventBuffers.value).forEach(([priorityStr, buffer]) => {\n      const priority = parseInt(priorityStr) as EventPriority;\n      \n      if (priority === EventPriority.CRITICAL) return; // Critical events flush immediately\n      \n      if (flushIntervals.value[priority]) {\n        clearInterval(flushIntervals.value[priority]!);\n      }\n      \n      flushIntervals.value[priority] = window.setInterval(() => {\n        if (buffer.events.length > 0) {\n          flushBuffer(priority);\n        }\n      }, buffer.flushInterval);\n    });\n  }\n  \n  /**\n   * Stop all flush intervals\n   */\n  function stopFlushIntervals(): void {\n    Object.entries(flushIntervals.value).forEach(([priority, interval]) => {\n      if (interval) {\n        clearInterval(interval);\n        flushIntervals.value[parseInt(priority) as EventPriority] = null;\n      }\n    });\n  }\n  \n  /**\n   * Flush all buffers immediately\n   */\n  async function flushAllBuffers(): Promise<void> {\n    const promises = Object.keys(eventBuffers.value).map(priorityStr => {\n      const priority = parseInt(priorityStr) as EventPriority;\n      return flushBuffer(priority);\n    });\n    \n    await Promise.all(promises);\n  }\n  \n  /**\n   * Start a new session\n   */\n  function startSession(): void {\n    sessionId.value = generateSessionId();\n    sessionStartTime.value = Date.now();\n    lastEventType.value = null;\n    \n    logEvent(SessionEventType.SESSION_START, {\n      userAgent: navigator.userAgent,\n      referrer: document.referrer,\n      initialPage: window.location.pathname\n    });\n    \n    startFlushIntervals();\n    \n    if (isVerboseLogging.value) {\n      console.log(\"ðŸ“Š Session started:\", sessionId.value);\n    }\n  }\n  \n  /**\n   * End the current session\n   */\n  async function endSession(): Promise<void> {\n    logEvent(SessionEventType.SESSION_END, {\n      duration: Date.now() - sessionStartTime.value,\n      totalEvents: totalEventsLogged.value\n    });\n    \n    // Flush all remaining events\n    await flushAllBuffers();\n    stopFlushIntervals();\n    \n    if (isVerboseLogging.value) {\n      console.log(\"ðŸ“Š Session ended:\", sessionId.value);\n    }\n  }\n  \n  /**\n   * Enable/disable logging\n   */\n  function setLoggingEnabled(enabled: boolean): void {\n    isLoggingEnabled.value = enabled;\n    \n    if (enabled && !flushIntervals.value[EventPriority.LOW]) {\n      startFlushIntervals();\n    } else if (!enabled) {\n      stopFlushIntervals();\n    }\n  }\n  \n  /**\n   * Enable/disable verbose logging\n   */\n  function setVerboseLogging(enabled: boolean): void {\n    isVerboseLogging.value = enabled;\n  }\n  \n  /**\n   * Get session statistics\n   */\n  const sessionStats = computed(() => ({\n    sessionId: sessionId.value,\n    duration: Date.now() - sessionStartTime.value,\n    eventsLogged: totalEventsLogged.value,\n    eventsSent: totalEventsSent.value,\n    eventsBuffered: totalEventsBuffered.value,\n    lastEventType: lastEventType.value ? SessionEventType[lastEventType.value] : null\n  }));\n  \n  // Auto-start session on store initialization\n  startSession();\n  \n  // Handle page unload\n  onBeforeUnmount(async () => {\n    await endSession();\n  });\n  \n  // Handle browser close/refresh\n  if (typeof window !== 'undefined') {\n    window.addEventListener('beforeunload', () => {\n      // Use navigator.sendBeacon for reliable delivery during page unload\n      if (navigator.sendBeacon && totalEventsBuffered.value > 0) {\n        const allEvents: SessionEvent[] = [];\n        Object.values(eventBuffers.value).forEach(buffer => {\n          allEvents.push(...buffer.events);\n        });\n        \n        if (allEvents.length > 0) {\n          const data = JSON.stringify({ events: allEvents });\n          navigator.sendBeacon('/api/session/log', data);\n        }\n      }\n    });\n  }\n  \n  return {\n    // State\n    sessionId: computed(() => sessionId.value),\n    sessionStartTime: computed(() => sessionStartTime.value),\n    isLoggingEnabled: computed(() => isLoggingEnabled.value),\n    isVerboseLogging: computed(() => isVerboseLogging.value),\n    sessionStats,\n    \n    // Core functions\n    logEvent,\n    \n    // Session management\n    startSession,\n    endSession,\n    \n    // Configuration\n    setLoggingEnabled,\n    setVerboseLogging,\n    \n    // Buffer management\n    flushAllBuffers,\n    \n    // Event types export for external use\n    SessionEventType,\n    EventPriority\n  };\n});\n\nif (import.meta.hot) {\n  import.meta.hot.accept(acceptHMRUpdate(useSessionLogger, import.meta.hot));\n}"],"names":["SessionEventType","EventPriority","useSessionLogger","defineStore","socket","useSocketCore","auth","useAuth","sessionId","ref","generateSessionId","sessionStartTime","isLoggingEnabled","isVerboseLogging","eventBuffers","lastEventType","totalEventsLogged","totalEventsSent","totalEventsBuffered","computed","total","buffer","flushIntervals","generateAnonymousId","existing","anonymousId","getCurrentUserId","getCurrentContext","now","getEventPriority","eventType","getEventCategory","logEvent","eventData","customContext","event","priority","flushBuffer","eventsToSend","sendEvents","error","events","response","startFlushIntervals","priorityStr","stopFlushIntervals","interval","flushAllBuffers","promises","startSession","endSession","setLoggingEnabled","enabled","setVerboseLogging","sessionStats","onBeforeUnmount","allEvents","data"],"mappings":"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","x_google_ignoreList":[0]}