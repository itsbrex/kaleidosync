{"version":3,"file":"AsfParser-C_U1wLn9.js","sources":["../../node_modules/music-metadata/lib/asf/GUID.js","../../node_modules/music-metadata/lib/asf/AsfUtil.js","../../node_modules/music-metadata/lib/asf/AsfObject.js","../../node_modules/music-metadata/lib/asf/AsfParser.js"],"sourcesContent":["import { hexToUint8Array, uint8ArrayToHex } from 'uint8array-extras';\n/**\n * Ref:\n * - https://tools.ietf.org/html/draft-fleischman-asf-01, Appendix A: ASF GUIDs\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n *\n * ASF File Structure:\n * - https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\n *\n * ASF GUIDs:\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/10_asf_guids.html\n * - https://github.com/dji-sdk/FFmpeg/blob/master/libavformat/asf.c\n */\nclass GUID {\n    static fromBin(bin, offset = 0) {\n        return new GUID(GUID.decode(bin, offset));\n    }\n    /**\n     * Decode GUID in format like \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\n     * @param objectId Binary GUID\n     * @param offset Read offset in bytes, default 0\n     * @returns GUID as dashed hexadecimal representation\n     */\n    static decode(objectId, offset = 0) {\n        const view = new DataView(objectId.buffer, offset);\n        const guid = `${view.getUint32(0, true).toString(16)}-${view.getUint16(4, true).toString(16)}-${view.getUint16(6, true).toString(16)}-${view.getUint16(8).toString(16)}-${uint8ArrayToHex(objectId.slice(offset + 10, offset + 16))}`;\n        return guid.toUpperCase();\n    }\n    /**\n     * Decode stream type\n     * @param mediaType Media type GUID\n     * @returns Media type\n     */\n    static decodeMediaType(mediaType) {\n        switch (mediaType.str) {\n            case GUID.AudioMedia.str: return 'audio';\n            case GUID.VideoMedia.str: return 'video';\n            case GUID.CommandMedia.str: return 'command';\n            case GUID.Degradable_JPEG_Media.str: return 'degradable-jpeg';\n            case GUID.FileTransferMedia.str: return 'file-transfer';\n            case GUID.BinaryMedia.str: return 'binary';\n        }\n    }\n    /**\n     * Encode GUID\n     * @param guid GUID like: \"B503BF5F-2EA9-CF11-8EE3-00C00C205365\"\n     * @returns Encoded Binary GUID\n     */\n    static encode(str) {\n        const bin = new Uint8Array(16);\n        const view = new DataView(bin.buffer);\n        view.setUint32(0, Number.parseInt(str.slice(0, 8), 16), true);\n        view.setUint16(4, Number.parseInt(str.slice(9, 13), 16), true);\n        view.setUint16(6, Number.parseInt(str.slice(14, 18), 16), true);\n        bin.set(hexToUint8Array(str.slice(19, 23)), 8);\n        bin.set(hexToUint8Array(str.slice(24)), 10);\n        return bin;\n    }\n    constructor(str) {\n        this.str = str;\n    }\n    equals(guid) {\n        return this.str === guid.str;\n    }\n    toBin() {\n        return GUID.encode(this.str);\n    }\n}\n// 10.1 Top-level ASF object GUIDs\nGUID.HeaderObject = new GUID(\"75B22630-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.DataObject = new GUID(\"75B22636-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.SimpleIndexObject = new GUID(\"33000890-E5B1-11CF-89F4-00A0C90349CB\");\nGUID.IndexObject = new GUID(\"D6E229D3-35DA-11D1-9034-00A0C90349BE\");\nGUID.MediaObjectIndexObject = new GUID(\"FEB103F8-12AD-4C64-840F-2A1D2F7AD48C\");\nGUID.TimecodeIndexObject = new GUID(\"3CB73FD0-0C4A-4803-953D-EDF7B6228F0C\");\n// 10.2 Header Object GUIDs\nGUID.FilePropertiesObject = new GUID(\"8CABDCA1-A947-11CF-8EE4-00C00C205365\");\nGUID.StreamPropertiesObject = new GUID(\"B7DC0791-A9B7-11CF-8EE6-00C00C205365\");\nGUID.HeaderExtensionObject = new GUID(\"5FBF03B5-A92E-11CF-8EE3-00C00C205365\");\nGUID.CodecListObject = new GUID(\"86D15240-311D-11D0-A3A4-00A0C90348F6\");\nGUID.ScriptCommandObject = new GUID(\"1EFB1A30-0B62-11D0-A39B-00A0C90348F6\");\nGUID.MarkerObject = new GUID(\"F487CD01-A951-11CF-8EE6-00C00C205365\");\nGUID.BitrateMutualExclusionObject = new GUID(\"D6E229DC-35DA-11D1-9034-00A0C90349BE\");\nGUID.ErrorCorrectionObject = new GUID(\"75B22635-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.ContentDescriptionObject = new GUID(\"75B22633-668E-11CF-A6D9-00AA0062CE6C\");\nGUID.ExtendedContentDescriptionObject = new GUID(\"D2D0A440-E307-11D2-97F0-00A0C95EA850\");\nGUID.ContentBrandingObject = new GUID(\"2211B3FA-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.StreamBitratePropertiesObject = new GUID(\"7BF875CE-468D-11D1-8D82-006097C9A2B2\");\nGUID.ContentEncryptionObject = new GUID(\"2211B3FB-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.ExtendedContentEncryptionObject = new GUID(\"298AE614-2622-4C17-B935-DAE07EE9289C\");\nGUID.DigitalSignatureObject = new GUID(\"2211B3FC-BD23-11D2-B4B7-00A0C955FC6E\");\nGUID.PaddingObject = new GUID(\"1806D474-CADF-4509-A4BA-9AABCB96AAE8\");\n// 10.3 Header Extension Object GUIDs\nGUID.ExtendedStreamPropertiesObject = new GUID(\"14E6A5CB-C672-4332-8399-A96952065B5A\");\nGUID.AdvancedMutualExclusionObject = new GUID(\"A08649CF-4775-4670-8A16-6E35357566CD\");\nGUID.GroupMutualExclusionObject = new GUID(\"D1465A40-5A79-4338-B71B-E36B8FD6C249\");\nGUID.StreamPrioritizationObject = new GUID(\"D4FED15B-88D3-454F-81F0-ED5C45999E24\");\nGUID.BandwidthSharingObject = new GUID(\"A69609E6-517B-11D2-B6AF-00C04FD908E9\");\nGUID.LanguageListObject = new GUID(\"7C4346A9-EFE0-4BFC-B229-393EDE415C85\");\nGUID.MetadataObject = new GUID(\"C5F8CBEA-5BAF-4877-8467-AA8C44FA4CCA\");\nGUID.MetadataLibraryObject = new GUID(\"44231C94-9498-49D1-A141-1D134E457054\");\nGUID.IndexParametersObject = new GUID(\"D6E229DF-35DA-11D1-9034-00A0C90349BE\");\nGUID.MediaObjectIndexParametersObject = new GUID(\"6B203BAD-3F11-48E4-ACA8-D7613DE2CFA7\");\nGUID.TimecodeIndexParametersObject = new GUID(\"F55E496D-9797-4B5D-8C8B-604DFE9BFB24\");\nGUID.CompatibilityObject = new GUID(\"26F18B5D-4584-47EC-9F5F-0E651F0452C9\");\nGUID.AdvancedContentEncryptionObject = new GUID(\"43058533-6981-49E6-9B74-AD12CB86D58C\");\n// 10.4 Stream Properties Object Stream Type GUIDs\nGUID.AudioMedia = new GUID(\"F8699E40-5B4D-11CF-A8FD-00805F5C442B\");\nGUID.VideoMedia = new GUID(\"BC19EFC0-5B4D-11CF-A8FD-00805F5C442B\");\nGUID.CommandMedia = new GUID(\"59DACFC0-59E6-11D0-A3AC-00A0C90348F6\");\nGUID.JFIF_Media = new GUID(\"B61BE100-5B4E-11CF-A8FD-00805F5C442B\");\nGUID.Degradable_JPEG_Media = new GUID(\"35907DE0-E415-11CF-A917-00805F5C442B\");\nGUID.FileTransferMedia = new GUID(\"91BD222C-F21C-497A-8B6D-5AA86BFC0185\");\nGUID.BinaryMedia = new GUID(\"3AFB65E2-47EF-40F2-AC2C-70A90D71D343\");\nGUID.ASF_Index_Placeholder_Object = new GUID(\"D9AADE20-7C17-4F9C-BC28-8555DD98E2A2\");\nexport default GUID;\n//# sourceMappingURL=GUID.js.map","import * as Token from 'token-types';\nimport * as util from '../common/Util.js';\nexport function getParserForAttr(i) {\n    return attributeParsers[i];\n}\nexport function parseUnicodeAttr(uint8Array) {\n    return util.stripNulls(util.decodeString(uint8Array, 'utf-16le'));\n}\nconst attributeParsers = [\n    parseUnicodeAttr,\n    parseByteArrayAttr,\n    parseBoolAttr,\n    parseDWordAttr,\n    parseQWordAttr,\n    parseWordAttr,\n    parseByteArrayAttr\n];\nfunction parseByteArrayAttr(buf) {\n    return new Uint8Array(buf);\n}\nfunction parseBoolAttr(buf, offset = 0) {\n    return parseWordAttr(buf, offset) === 1;\n}\nfunction parseDWordAttr(buf, offset = 0) {\n    return Token.UINT32_LE.get(buf, offset);\n}\nfunction parseQWordAttr(buf, offset = 0) {\n    return Token.UINT64_LE.get(buf, offset);\n}\nfunction parseWordAttr(buf, offset = 0) {\n    return Token.UINT16_LE.get(buf, offset);\n}\n//# sourceMappingURL=AsfUtil.js.map","// ASF Objects\nimport * as Token from 'token-types';\nimport * as util from '../common/Util.js';\nimport GUID from './GUID.js';\nimport { getParserForAttr, parseUnicodeAttr } from './AsfUtil.js';\nimport { AttachedPictureType } from '../id3v2/ID3v2Token.js';\nimport { makeUnexpectedFileContentError } from '../ParseError.js';\nexport class AsfContentParseError extends makeUnexpectedFileContentError('ASF') {\n}\n/**\n * Data Type: Specifies the type of information being stored. The following values are recognized.\n */\nexport const DataType = {\n    /**\n     * Unicode string. The data consists of a sequence of Unicode characters.\n     */\n    UnicodeString: 0,\n    /**\n     * BYTE array. The type of data is implementation-specific.\n     */\n    ByteArray: 1,\n    /**\n     * BOOL. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer. Only 0x0000 or 0x0001 are permitted values.\n     */\n    Bool: 2,\n    /**\n     * DWORD. The data is 4 bytes long and should be interpreted as a 32-bit unsigned integer.\n     */\n    DWord: 3,\n    /**\n     * QWORD. The data is 8 bytes long and should be interpreted as a 64-bit unsigned integer.\n     */\n    QWord: 4,\n    /**\n     * WORD. The data is 2 bytes long and should be interpreted as a 16-bit unsigned integer.\n     */\n    Word: 5\n};\n/**\n * Token for: 3. ASF top-level Header Object\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3\n */\nexport const TopLevelHeaderObjectToken = {\n    len: 30,\n    get: (buf, off) => {\n        return {\n            objectId: GUID.fromBin(buf, off),\n            objectSize: Number(Token.UINT64_LE.get(buf, off + 16)),\n            numberOfHeaderObjects: Token.UINT32_LE.get(buf, off + 24)\n            // Reserved: 2 bytes\n        };\n    }\n};\n/**\n * Token for: 3.1 Header Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_1\n */\nexport const HeaderObjectToken = {\n    len: 24,\n    get: (buf, off) => {\n        return {\n            objectId: GUID.fromBin(buf, off),\n            objectSize: Number(Token.UINT64_LE.get(buf, off + 16))\n        };\n    }\n};\nexport class State {\n    constructor(header) {\n        this.len = Number(header.objectSize) - HeaderObjectToken.len;\n    }\n    postProcessTag(tags, name, valueType, data) {\n        if (name === 'WM/Picture') {\n            tags.push({ id: name, value: WmPictureToken.fromBuffer(data) });\n        }\n        else {\n            const parseAttr = getParserForAttr(valueType);\n            if (!parseAttr) {\n                throw new AsfContentParseError(`unexpected value headerType: ${valueType}`);\n            }\n            tags.push({ id: name, value: parseAttr(data) });\n        }\n    }\n}\n// ToDo: use ignore type\nexport class IgnoreObjectState extends State {\n    get(_buf, _off) {\n        return null;\n    }\n}\n/**\n * Token for: 3.2: File Properties Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_2\n */\nexport class FilePropertiesObject extends State {\n    get(buf, off) {\n        return {\n            fileId: GUID.fromBin(buf, off),\n            fileSize: Token.UINT64_LE.get(buf, off + 16),\n            creationDate: Token.UINT64_LE.get(buf, off + 24),\n            dataPacketsCount: Token.UINT64_LE.get(buf, off + 32),\n            playDuration: Token.UINT64_LE.get(buf, off + 40),\n            sendDuration: Token.UINT64_LE.get(buf, off + 48),\n            preroll: Token.UINT64_LE.get(buf, off + 56),\n            flags: {\n                broadcast: util.getBit(buf, off + 64, 24),\n                seekable: util.getBit(buf, off + 64, 25)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            minimumDataPacketSize: Token.UINT32_LE.get(buf, off + 68),\n            maximumDataPacketSize: Token.UINT32_LE.get(buf, off + 72),\n            maximumBitrate: Token.UINT32_LE.get(buf, off + 76)\n        };\n    }\n}\nFilePropertiesObject.guid = GUID.FilePropertiesObject;\n/**\n * Token for: 3.3 Stream Properties Object (mandatory, one per stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_3\n */\nexport class StreamPropertiesObject extends State {\n    get(buf, off) {\n        return {\n            streamType: GUID.decodeMediaType(GUID.fromBin(buf, off)),\n            errorCorrectionType: GUID.fromBin(buf, off + 8)\n            // ToDo\n        };\n    }\n}\nStreamPropertiesObject.guid = GUID.StreamPropertiesObject;\n/**\n * 3.4: Header Extension Object (mandatory, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_4\n */\nexport class HeaderExtensionObject {\n    constructor() {\n        this.len = 22;\n    }\n    get(buf, off) {\n        const view = new DataView(buf.buffer, off);\n        return {\n            reserved1: GUID.fromBin(buf, off),\n            reserved2: view.getUint16(16, true),\n            extensionDataSize: view.getUint16(18, true)\n        };\n    }\n}\nHeaderExtensionObject.guid = GUID.HeaderExtensionObject;\n/**\n * 3.5: The Codec List Object provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nconst CodecListObjectHeader = {\n    len: 20,\n    get: (buf, off) => {\n        const view = new DataView(buf.buffer, off);\n        return {\n            entryCount: view.getUint16(16, true)\n        };\n    }\n};\nasync function readString(tokenizer) {\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\n    return (await tokenizer.readToken(new Token.StringType(length * 2, 'utf-16le'))).replace('\\0', '');\n}\n/**\n * 3.5: Read the Codec-List-Object, which provides user-friendly information about the codecs and formats used to encode the content found in the ASF file.\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_5\n */\nexport async function readCodecEntries(tokenizer) {\n    const codecHeader = await tokenizer.readToken(CodecListObjectHeader);\n    const entries = [];\n    for (let i = 0; i < codecHeader.entryCount; ++i) {\n        entries.push(await readCodecEntry(tokenizer));\n    }\n    return entries;\n}\nasync function readInformation(tokenizer) {\n    const length = await tokenizer.readNumber(Token.UINT16_LE);\n    const buf = new Uint8Array(length);\n    await tokenizer.readBuffer(buf);\n    return buf;\n}\n/**\n * Read Codec-Entries\n * @param tokenizer\n */\nasync function readCodecEntry(tokenizer) {\n    const type = await tokenizer.readNumber(Token.UINT16_LE);\n    return {\n        type: {\n            videoCodec: (type & 0x0001) === 0x0001,\n            audioCodec: (type & 0x0002) === 0x0002\n        },\n        codecName: await readString(tokenizer),\n        description: await readString(tokenizer),\n        information: await readInformation(tokenizer)\n    };\n}\n/**\n * 3.10 Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_10\n */\nexport class ContentDescriptionObjectState extends State {\n    get(buf, off) {\n        const tags = [];\n        const view = new DataView(buf.buffer, off);\n        let pos = 10;\n        for (let i = 0; i < ContentDescriptionObjectState.contentDescTags.length; ++i) {\n            const length = view.getUint16(i * 2, true);\n            if (length > 0) {\n                const tagName = ContentDescriptionObjectState.contentDescTags[i];\n                const end = pos + length;\n                tags.push({ id: tagName, value: parseUnicodeAttr(buf.slice(off + pos, off + end)) });\n                pos = end;\n            }\n        }\n        return tags;\n    }\n}\nContentDescriptionObjectState.guid = GUID.ContentDescriptionObject;\nContentDescriptionObjectState.contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\n/**\n * 3.11 Extended Content Description Object (optional, one only)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/03_asf_top_level_header_object.html#3_11\n */\nexport class ExtendedContentDescriptionObjectState extends State {\n    get(buf, off) {\n        const tags = [];\n        const view = new DataView(buf.buffer, off);\n        const attrCount = view.getUint16(0, true);\n        let pos = 2;\n        for (let i = 0; i < attrCount; i += 1) {\n            const nameLen = view.getUint16(pos, true);\n            pos += 2;\n            const name = parseUnicodeAttr(buf.slice(off + pos, off + pos + nameLen));\n            pos += nameLen;\n            const valueType = view.getUint16(pos, true);\n            pos += 2;\n            const valueLen = view.getUint16(pos, true);\n            pos += 2;\n            const value = buf.slice(off + pos, off + pos + valueLen);\n            pos += valueLen;\n            this.postProcessTag(tags, name, valueType, value);\n        }\n        return tags;\n    }\n}\nExtendedContentDescriptionObjectState.guid = GUID.ExtendedContentDescriptionObject;\n/**\n * 4.1 Extended Stream Properties Object (optional, 1 per media stream)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_1\n */\nexport class ExtendedStreamPropertiesObjectState extends State {\n    get(buf, off) {\n        const view = new DataView(buf.buffer, off);\n        return {\n            startTime: Token.UINT64_LE.get(buf, off),\n            endTime: Token.UINT64_LE.get(buf, off + 8),\n            dataBitrate: view.getInt32(12, true),\n            bufferSize: view.getInt32(16, true),\n            initialBufferFullness: view.getInt32(20, true),\n            alternateDataBitrate: view.getInt32(24, true),\n            alternateBufferSize: view.getInt32(28, true),\n            alternateInitialBufferFullness: view.getInt32(32, true),\n            maximumObjectSize: view.getInt32(36, true),\n            flags: {\n                reliableFlag: util.getBit(buf, off + 40, 0),\n                seekableFlag: util.getBit(buf, off + 40, 1),\n                resendLiveCleanpointsFlag: util.getBit(buf, off + 40, 2)\n            },\n            // flagsNumeric: Token.UINT32_LE.get(buf, off + 64),\n            streamNumber: view.getInt16(42, true),\n            streamLanguageId: view.getInt16(44, true),\n            averageTimePerFrame: view.getInt32(52, true),\n            streamNameCount: view.getInt32(54, true),\n            payloadExtensionSystems: view.getInt32(56, true),\n            streamNames: [], // ToDo\n            streamPropertiesObject: null\n        };\n    }\n}\nExtendedStreamPropertiesObjectState.guid = GUID.ExtendedStreamPropertiesObject;\n/**\n * 4.7  Metadata Object (optional, 0 or 1)\n * Ref: http://drang.s4.xrea.com/program/tips/id3tag/wmp/04_objects_in_the_asf_header_extension_object.html#4_7\n */\nexport class MetadataObjectState extends State {\n    get(uint8Array, off) {\n        const tags = [];\n        const view = new DataView(uint8Array.buffer, off);\n        const descriptionRecordsCount = view.getUint16(0, true);\n        let pos = 2;\n        for (let i = 0; i < descriptionRecordsCount; i += 1) {\n            pos += 4;\n            const nameLen = view.getUint16(pos, true);\n            pos += 2;\n            const dataType = view.getUint16(pos, true);\n            pos += 2;\n            const dataLen = view.getUint32(pos, true);\n            pos += 4;\n            const name = parseUnicodeAttr(uint8Array.slice(off + pos, off + pos + nameLen));\n            pos += nameLen;\n            const data = uint8Array.slice(off + pos, off + pos + dataLen);\n            pos += dataLen;\n            this.postProcessTag(tags, name, dataType, data);\n        }\n        return tags;\n    }\n}\nMetadataObjectState.guid = GUID.MetadataObject;\n// 4.8\tMetadata Library Object (optional, 0 or 1)\nexport class MetadataLibraryObjectState extends MetadataObjectState {\n}\nMetadataLibraryObjectState.guid = GUID.MetadataLibraryObject;\n/**\n * Ref: https://msdn.microsoft.com/en-us/library/windows/desktop/dd757977(v=vs.85).aspx\n */\nexport class WmPictureToken {\n    static fromBuffer(buffer) {\n        const pic = new WmPictureToken(buffer.length);\n        return pic.get(buffer, 0);\n    }\n    constructor(len) {\n        this.len = len;\n    }\n    get(buffer, offset) {\n        const view = new DataView(buffer.buffer, offset);\n        const typeId = view.getUint8(0);\n        const size = view.getInt32(1, true);\n        let index = 5;\n        while (view.getUint16(index) !== 0) {\n            index += 2;\n        }\n        const format = new Token.StringType(index - 5, 'utf-16le').get(buffer, 5);\n        while (view.getUint16(index) !== 0) {\n            index += 2;\n        }\n        const description = new Token.StringType(index - 5, 'utf-16le').get(buffer, 5);\n        return {\n            type: AttachedPictureType[typeId],\n            format,\n            description,\n            size,\n            data: buffer.slice(index + 4)\n        };\n    }\n}\n//# sourceMappingURL=AsfObject.js.map","import initDebug from 'debug';\nimport { TrackType } from '../type.js';\nimport GUID from './GUID.js';\nimport * as AsfObject from './AsfObject.js';\nimport { BasicParser } from '../common/BasicParser.js';\nimport { AsfContentParseError } from './AsfObject.js';\nconst debug = initDebug('music-metadata:parser:ASF');\nconst headerType = 'asf';\n/**\n * Windows Media Metadata Usage Guidelines\n * - Ref: https://msdn.microsoft.com/en-us/library/ms867702.aspx\n *\n * Ref:\n * - https://tools.ietf.org/html/draft-fleischman-asf-01\n * - https://hwiegman.home.xs4all.nl/fileformats/asf/ASF_Specification.pdf\n * - http://drang.s4.xrea.com/program/tips/id3tag/wmp/index.html\n * - https://msdn.microsoft.com/en-us/library/windows/desktop/ee663575(v=vs.85).aspx\n */\nexport class AsfParser extends BasicParser {\n    async parse() {\n        const header = await this.tokenizer.readToken(AsfObject.TopLevelHeaderObjectToken);\n        if (!header.objectId.equals(GUID.HeaderObject)) {\n            throw new AsfContentParseError(`expected asf header; but was not found; got: ${header.objectId.str}`);\n        }\n        try {\n            await this.parseObjectHeader(header.numberOfHeaderObjects);\n        }\n        catch (err) {\n            debug('Error while parsing ASF: %s', err);\n        }\n    }\n    async parseObjectHeader(numberOfObjectHeaders) {\n        let tags;\n        do {\n            // Parse common header of the ASF Object (3.1)\n            const header = await this.tokenizer.readToken(AsfObject.HeaderObjectToken);\n            // Parse data part of the ASF Object\n            debug('header GUID=%s', header.objectId.str);\n            switch (header.objectId.str) {\n                case AsfObject.FilePropertiesObject.guid.str: { // 3.2\n                    const fpo = await this.tokenizer.readToken(new AsfObject.FilePropertiesObject(header));\n                    this.metadata.setFormat('duration', Number(fpo.playDuration / BigInt(1000)) / 10000 - Number(fpo.preroll) / 1000);\n                    this.metadata.setFormat('bitrate', fpo.maximumBitrate);\n                    break;\n                }\n                case AsfObject.StreamPropertiesObject.guid.str: { // 3.3\n                    const spo = await this.tokenizer.readToken(new AsfObject.StreamPropertiesObject(header));\n                    this.metadata.setFormat('container', `ASF/${spo.streamType}`);\n                    break;\n                }\n                case AsfObject.HeaderExtensionObject.guid.str: { // 3.4\n                    const extHeader = await this.tokenizer.readToken(new AsfObject.HeaderExtensionObject());\n                    await this.parseExtensionObject(extHeader.extensionDataSize);\n                    break;\n                }\n                case AsfObject.ContentDescriptionObjectState.guid.str: // 3.10\n                    tags = await this.tokenizer.readToken(new AsfObject.ContentDescriptionObjectState(header));\n                    await this.addTags(tags);\n                    break;\n                case AsfObject.ExtendedContentDescriptionObjectState.guid.str: // 3.11\n                    tags = await this.tokenizer.readToken(new AsfObject.ExtendedContentDescriptionObjectState(header));\n                    await this.addTags(tags);\n                    break;\n                case GUID.CodecListObject.str: {\n                    const codecs = await AsfObject.readCodecEntries(this.tokenizer);\n                    codecs.forEach(codec => {\n                        this.metadata.addStreamInfo({\n                            type: codec.type.videoCodec ? TrackType.video : TrackType.audio,\n                            codecName: codec.codecName\n                        });\n                    });\n                    const audioCodecs = codecs.filter(codec => codec.type.audioCodec).map(codec => codec.codecName).join('/');\n                    this.metadata.setFormat('codec', audioCodecs);\n                    break;\n                }\n                case GUID.StreamBitratePropertiesObject.str:\n                    // ToDo?\n                    await this.tokenizer.ignore(header.objectSize - AsfObject.HeaderObjectToken.len);\n                    break;\n                case GUID.PaddingObject.str:\n                    // ToDo: register bytes pad\n                    debug('Padding: %s bytes', header.objectSize - AsfObject.HeaderObjectToken.len);\n                    await this.tokenizer.ignore(header.objectSize - AsfObject.HeaderObjectToken.len);\n                    break;\n                default:\n                    this.metadata.addWarning(`Ignore ASF-Object-GUID: ${header.objectId.str}`);\n                    debug('Ignore ASF-Object-GUID: %s', header.objectId.str);\n                    await this.tokenizer.readToken(new AsfObject.IgnoreObjectState(header));\n            }\n        } while (--numberOfObjectHeaders);\n        // done\n    }\n    async addTags(tags) {\n        await Promise.all(tags.map(({ id, value }) => this.metadata.addTag(headerType, id, value)));\n    }\n    async parseExtensionObject(extensionSize) {\n        do {\n            // Parse common header of the ASF Object (3.1)\n            const header = await this.tokenizer.readToken(AsfObject.HeaderObjectToken);\n            const remaining = header.objectSize - AsfObject.HeaderObjectToken.len;\n            // Parse data part of the ASF Object\n            switch (header.objectId.str) {\n                case AsfObject.ExtendedStreamPropertiesObjectState.guid.str: // 4.1\n                    // ToDo: extended stream header properties are ignored\n                    await this.tokenizer.readToken(new AsfObject.ExtendedStreamPropertiesObjectState(header));\n                    break;\n                case AsfObject.MetadataObjectState.guid.str: { // 4.7\n                    const moTags = await this.tokenizer.readToken(new AsfObject.MetadataObjectState(header));\n                    await this.addTags(moTags);\n                    break;\n                }\n                case AsfObject.MetadataLibraryObjectState.guid.str: { // 4.8\n                    const mlTags = await this.tokenizer.readToken(new AsfObject.MetadataLibraryObjectState(header));\n                    await this.addTags(mlTags);\n                    break;\n                }\n                case GUID.PaddingObject.str:\n                    // ToDo: register bytes pad\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                case GUID.CompatibilityObject.str:\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                case GUID.ASF_Index_Placeholder_Object.str:\n                    await this.tokenizer.ignore(remaining);\n                    break;\n                default:\n                    this.metadata.addWarning(`Ignore ASF-Object-GUID: ${header.objectId.str}`);\n                    // console.log(\"Ignore ASF-Object-GUID: %s\", header.objectId.str);\n                    await this.tokenizer.readToken(new AsfObject.IgnoreObjectState(header));\n                    break;\n            }\n            extensionSize -= header.objectSize;\n        } while (extensionSize > 0);\n    }\n}\n//# sourceMappingURL=AsfParser.js.map"],"names":["GUID","bin","offset","objectId","view","uint8ArrayToHex","mediaType","str","hexToUint8Array","guid","getParserForAttr","i","attributeParsers","parseUnicodeAttr","uint8Array","util.stripNulls","util.decodeString","parseByteArrayAttr","parseBoolAttr","parseDWordAttr","parseQWordAttr","parseWordAttr","buf","Token.UINT32_LE","Token.UINT64_LE","Token.UINT16_LE","AsfContentParseError","makeUnexpectedFileContentError","TopLevelHeaderObjectToken","off","HeaderObjectToken","State","header","tags","name","valueType","data","WmPictureToken","parseAttr","IgnoreObjectState","_buf","_off","FilePropertiesObject","util.getBit","StreamPropertiesObject","HeaderExtensionObject","CodecListObjectHeader","readString","tokenizer","length","Token.StringType","readCodecEntries","codecHeader","entries","readCodecEntry","readInformation","type","ContentDescriptionObjectState","pos","tagName","end","ExtendedContentDescriptionObjectState","attrCount","nameLen","valueLen","value","ExtendedStreamPropertiesObjectState","MetadataObjectState","descriptionRecordsCount","dataType","dataLen","MetadataLibraryObjectState","buffer","len","typeId","size","index","format","description","AttachedPictureType","debug","initDebug","headerType","AsfParser","BasicParser","AsfObject.TopLevelHeaderObjectToken","err","numberOfObjectHeaders","AsfObject.HeaderObjectToken","AsfObject.FilePropertiesObject","fpo","AsfObject.StreamPropertiesObject","spo","AsfObject.HeaderExtensionObject","extHeader","AsfObject.ContentDescriptionObjectState","AsfObject.ExtendedContentDescriptionObjectState","codecs","AsfObject.readCodecEntries","codec","TrackType","audioCodecs","AsfObject.IgnoreObjectState","id","extensionSize","remaining","AsfObject.ExtendedStreamPropertiesObjectState","AsfObject.MetadataObjectState","moTags","AsfObject.MetadataLibraryObjectState","mlTags"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}