{"version":3,"file":"useAudioAnalyser-DvxrcCbY.js","sources":["../../../vue/src/composables/audio/useAudioAnalyser.ts"],"sourcesContent":["import { ref, computed } from \"vue\";\nimport { audioSystem } from \"../../classes/AudioSystemManager\";\nimport { useRAF } from \"../../stores/raf\";\n\nexport function useAudioAnalyser() {\n  const raf = useRAF();\n  const stream = ref(0);\n  const volume = ref(1);\n  const time = computed(() => raf.time);\n  const initialized = ref(false);\n\n  // Note: RAF loop management moved to audio store\n  // These refs will be updated by the audio store's RAF loop\n\n  async function initialize(element: HTMLAudioElement) {\n    if (element) {\n      // Initialize audio element source in the consolidated AudioSystemManager\n      await audioSystem.initializeAudioElement();\n      initialized.value = true;\n      \n      console.log('ðŸŽµ useAudioAnalyser initialized with consolidated AudioSystemManager');\n    }\n  }\n\n  function cleanup() {\n    // RAF loop is managed by audio store, nothing to clean up here\n  }\n\n  // Add method to initialize microphone\n  async function initializeMicrophone(): Promise<boolean> {\n    const success = await audioSystem.initializeMicrophone();\n    if (success) {\n      initialized.value = true;\n      console.log('ðŸŽµ useAudioAnalyser initialized microphone with consolidated AudioSystemManager');\n    }\n    return success;\n  }\n\n  // Add method to initialize Spotify\n  async function initializeSpotify(spotifyVolumeGetter: () => number): Promise<void> {\n    audioSystem.setSpotifyVolumeGetter(spotifyVolumeGetter);\n    await audioSystem.initializeSpotifySource();\n    initialized.value = true;\n    console.log('ðŸŽµ useAudioAnalyser initialized Spotify with consolidated AudioSystemManager');\n  }\n\n  return {\n    audioSystem, // Expose audioSystem for advanced usage\n    initialize,\n    initializeMicrophone,\n    initializeSpotify,\n    stream,\n    volume,\n    time,\n    cleanup,\n    initialized,\n  };\n}\n"],"names":["useAudioAnalyser","raf","useRAF","stream","ref","volume","time","computed","initialized","initialize","element","audioSystem","cleanup","initializeMicrophone","success","initializeSpotify","spotifyVolumeGetter"],"mappings":"+DAIO,SAASA,GAAmB,CACjC,MAAMC,EAAMC,EAAA,EACNC,EAASC,EAAI,CAAC,EACdC,EAASD,EAAI,CAAC,EACdE,EAAOC,EAAS,IAAMN,EAAI,IAAI,EAC9BO,EAAcJ,EAAI,EAAK,EAK7B,eAAeK,EAAWC,EAA2B,CAC/CA,IAEF,MAAMC,EAAY,uBAAA,EAClBH,EAAY,MAAQ,GAEpB,QAAQ,IAAI,sEAAsE,EAEtF,CAEA,SAASI,GAAU,CAEnB,CAGA,eAAeC,GAAyC,CACtD,MAAMC,EAAU,MAAMH,EAAY,qBAAA,EAClC,OAAIG,IACFN,EAAY,MAAQ,GACpB,QAAQ,IAAI,iFAAiF,GAExFM,CACT,CAGA,eAAeC,EAAkBC,EAAkD,CACjFL,EAAY,uBAAuBK,CAAmB,EACtD,MAAML,EAAY,wBAAA,EAClBH,EAAY,MAAQ,GACpB,QAAQ,IAAI,8EAA8E,CAC5F,CAEA,MAAO,CACL,YAAAG,EACA,WAAAF,EACA,qBAAAI,EACA,kBAAAE,EACA,OAAAZ,EACA,OAAAE,EACA,KAAAC,EACA,QAAAM,EACA,YAAAJ,CAAA,CAEJ"}