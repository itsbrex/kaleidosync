import{r as i,w as k,a8 as T,a9 as t}from"./index-xeh6oSzU.js";function v(c,u=300){const s=i(""),n=i([]),r=i();return k(()=>s.value,async o=>{o.length>2?(clearTimeout(r.value),r.value=setTimeout(async()=>{n.value=await c(s.value)},u)):n.value=[]}),{query:s,results:n}}const m=["week","month","year"],$=T("audius",()=>{const{query:c,results:u}=v(n),s=i({tracks:{week:[],month:[],year:[]},playlists:{week:[],month:[],year:[]}});async function n(e){return(await t.get(`/api/audius/search/${e}`)).data}async function r(e){return(await t.get(`/api/audius/users/${e}`)).data}async function o(e){return(await t.get(`/api/audius/playlists/${e}`)).data}async function y(e){return(await t.get(`/api/audius/playlists/trending/${e}`)).data}async function d(e){return(await t.get(`/api/audius/tracks/trending/${e}`)).data}async function f(){const[e,a,l]=await Promise.all(m.map(p=>y(p)));return{week:e,month:a,year:l}}async function h(){const[e,a,l]=await Promise.all(m.map(p=>d(p)));return{week:e,month:a,year:l}}async function w(){const[e,a]=await Promise.all([h(),f()]);s.value={tracks:e,playlists:a}}async function g(e){return(await t.get(`/api/audius/stream/${e}`)).data}return{fetchTrendingPlaylists:y,fetchTrendingTracks:d,fetchAllTrendingPlaylists:f,fetchAllTrendingTracks:h,fetchTrending:w,fetchPlaylistById:o,fetchUser:r,getTrackStream:g,trending:s,query:c,results:u}});export{$ as u};
//# sourceMappingURL=audius-DGwImyxT.js.map
