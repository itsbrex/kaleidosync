{"version":3,"file":"MusepackParser-gDHk7ukL.js","sources":["../../../vue/node_modules/music-metadata/lib/musepack/sv8/StreamVersion8.js","../../../vue/node_modules/music-metadata/lib/musepack/MusepackConentError.js","../../../vue/node_modules/music-metadata/lib/musepack/sv8/MpcSv8Parser.js","../../../vue/node_modules/music-metadata/lib/musepack/sv7/BitReader.js","../../../vue/node_modules/music-metadata/lib/musepack/sv7/StreamVersion7.js","../../../vue/node_modules/music-metadata/lib/musepack/sv7/MpcSv7Parser.js","../../../vue/node_modules/music-metadata/lib/musepack/MusepackParser.js"],"sourcesContent":["import * as Token from 'token-types';\nimport initDebug from 'debug';\nimport * as util from '../../common/Util.js';\nconst debug = initDebug('music-metadata:parser:musepack:sv8');\nconst PacketKey = new Token.StringType(2, 'latin1');\n/**\n * Stream Header Packet part 1\n * Ref: http://trac.musepack.net/musepack/wiki/SV8Specification#StreamHeaderPacket\n */\nconst SH_part1 = {\n    len: 5,\n    get: (buf, off) => {\n        return {\n            crc: Token.UINT32_LE.get(buf, off),\n            streamVersion: Token.UINT8.get(buf, off + 4)\n        };\n    }\n};\n/**\n * Stream Header Packet part 3\n * Ref: http://trac.musepack.net/musepack/wiki/SV8Specification#StreamHeaderPacket\n */\nconst SH_part3 = {\n    len: 2,\n    get: (buf, off) => {\n        return {\n            sampleFrequency: [44100, 48000, 37800, 32000][util.getBitAllignedNumber(buf, off, 0, 3)],\n            maxUsedBands: util.getBitAllignedNumber(buf, off, 3, 5),\n            channelCount: util.getBitAllignedNumber(buf, off + 1, 0, 4) + 1,\n            msUsed: util.isBitSet(buf, off + 1, 4),\n            audioBlockFrames: util.getBitAllignedNumber(buf, off + 1, 5, 3)\n        };\n    }\n};\nexport class StreamReader {\n    get tokenizer() {\n        return this._tokenizer;\n    }\n    set tokenizer(value) {\n        this._tokenizer = value;\n    }\n    constructor(_tokenizer) {\n        this._tokenizer = _tokenizer;\n    }\n    async readPacketHeader() {\n        const key = await this.tokenizer.readToken(PacketKey);\n        const size = await this.readVariableSizeField();\n        return {\n            key,\n            payloadLength: size.value - 2 - size.len\n        };\n    }\n    async readStreamHeader(size) {\n        const streamHeader = {};\n        debug(`Reading SH at offset=${this.tokenizer.position}`);\n        const part1 = await this.tokenizer.readToken(SH_part1);\n        size -= SH_part1.len;\n        Object.assign(streamHeader, part1);\n        debug(`SH.streamVersion = ${part1.streamVersion}`);\n        const sampleCount = await this.readVariableSizeField();\n        size -= sampleCount.len;\n        streamHeader.sampleCount = sampleCount.value;\n        const bs = await this.readVariableSizeField();\n        size -= bs.len;\n        streamHeader.beginningOfSilence = bs.value;\n        const part3 = await this.tokenizer.readToken(SH_part3);\n        size -= SH_part3.len;\n        Object.assign(streamHeader, part3);\n        // assert.equal(size, 0);\n        await this.tokenizer.ignore(size);\n        return streamHeader;\n    }\n    async readVariableSizeField(len = 1, hb = 0) {\n        let n = await this.tokenizer.readNumber(Token.UINT8);\n        if ((n & 0x80) === 0) {\n            return { len, value: hb + n };\n        }\n        n &= 0x7F;\n        n += hb;\n        return this.readVariableSizeField(len + 1, n << 7);\n    }\n}\n//# sourceMappingURL=StreamVersion8.js.map","import { makeUnexpectedFileContentError } from '../ParseError.js';\nexport class MusepackContentError extends makeUnexpectedFileContentError('Musepack') {\n}\n//# sourceMappingURL=MusepackConentError.js.map","import initDebug from 'debug';\nimport { BasicParser } from '../../common/BasicParser.js';\nimport { tryParseApeHeader } from '../../apev2/APEv2Parser.js';\nimport { FourCcToken } from '../../common/FourCC.js';\nimport * as SV8 from './StreamVersion8.js';\nimport { MusepackContentError } from '../MusepackConentError.js';\nconst debug = initDebug('music-metadata:parser:musepack');\nexport class MpcSv8Parser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.audioLength = 0;\n    }\n    async parse() {\n        const signature = await this.tokenizer.readToken(FourCcToken);\n        if (signature !== 'MPCK')\n            throw new MusepackContentError('Invalid Magic number');\n        this.metadata.setFormat('container', 'Musepack, SV8');\n        return this.parsePacket();\n    }\n    async parsePacket() {\n        const sv8reader = new SV8.StreamReader(this.tokenizer);\n        do {\n            const header = await sv8reader.readPacketHeader();\n            debug(`packet-header key=${header.key}, payloadLength=${header.payloadLength}`);\n            switch (header.key) {\n                case 'SH': { // Stream Header\n                    const sh = await sv8reader.readStreamHeader(header.payloadLength);\n                    this.metadata.setFormat('numberOfSamples', sh.sampleCount);\n                    this.metadata.setFormat('sampleRate', sh.sampleFrequency);\n                    this.metadata.setFormat('duration', sh.sampleCount / sh.sampleFrequency);\n                    this.metadata.setFormat('numberOfChannels', sh.channelCount);\n                    break;\n                }\n                case 'AP': // Audio Packet\n                    this.audioLength += header.payloadLength;\n                    await this.tokenizer.ignore(header.payloadLength);\n                    break;\n                case 'RG': // Replaygain\n                case 'EI': // Encoder Info\n                case 'SO': // Seek Table Offset\n                case 'ST': // Seek Table\n                case 'CT': // Chapter-Tag\n                    await this.tokenizer.ignore(header.payloadLength);\n                    break;\n                case 'SE': // Stream End\n                    if (this.metadata.format.duration) {\n                        this.metadata.setFormat('bitrate', this.audioLength * 8 / this.metadata.format.duration);\n                    }\n                    return tryParseApeHeader(this.metadata, this.tokenizer, this.options);\n                default:\n                    throw new MusepackContentError(`Unexpected header: ${header.key}`);\n            }\n            // biome-ignore lint/correctness/noConstantCondition: break is handled in the switch statement\n        } while (true);\n    }\n}\n//# sourceMappingURL=MpcSv8Parser.js.map","import * as Token from 'token-types';\nexport class BitReader {\n    constructor(tokenizer) {\n        this.pos = 0;\n        this.dword = null;\n        this.tokenizer = tokenizer;\n    }\n    /**\n     *\n     * @param bits 1..30 bits\n     */\n    async read(bits) {\n        while (this.dword === null) {\n            this.dword = await this.tokenizer.readToken(Token.UINT32_LE);\n        }\n        let out = this.dword;\n        this.pos += bits;\n        if (this.pos < 32) {\n            out >>>= (32 - this.pos);\n            return out & ((1 << bits) - 1);\n        }\n        this.pos -= 32;\n        if (this.pos === 0) {\n            this.dword = null;\n            return out & ((1 << bits) - 1);\n        }\n        this.dword = await this.tokenizer.readToken(Token.UINT32_LE);\n        if (this.pos) {\n            out <<= this.pos;\n            out |= this.dword >>> (32 - this.pos);\n        }\n        return out & ((1 << bits) - 1);\n    }\n    async ignore(bits) {\n        if (this.pos > 0) {\n            const remaining = 32 - this.pos;\n            this.dword = null;\n            bits -= remaining;\n            this.pos = 0;\n        }\n        const remainder = bits % 32;\n        const numOfWords = (bits - remainder) / 32;\n        await this.tokenizer.ignore(numOfWords * 4);\n        return this.read(remainder);\n    }\n}\n//# sourceMappingURL=BitReader.js.map","import * as Token from 'token-types';\nimport * as util from '../../common/Util.js';\n/**\n * BASIC STRUCTURE\n */\nexport const Header = {\n    len: 6 * 4,\n    get: (buf, off) => {\n        const header = {\n            // word 0\n            signature: new TextDecoder('latin1').decode(buf.subarray(off, off + 3)),\n            // versionIndex number * 1000 (3.81 = 3810) (remember that 4-byte alignment causes this to take 4-bytes)\n            streamMinorVersion: util.getBitAllignedNumber(buf, off + 3, 0, 4),\n            streamMajorVersion: util.getBitAllignedNumber(buf, off + 3, 4, 4),\n            // word 1\n            frameCount: Token.UINT32_LE.get(buf, off + 4),\n            // word 2\n            maxLevel: Token.UINT16_LE.get(buf, off + 8),\n            sampleFrequency: [44100, 48000, 37800, 32000][util.getBitAllignedNumber(buf, off + 10, 0, 2)],\n            link: util.getBitAllignedNumber(buf, off + 10, 2, 2),\n            profile: util.getBitAllignedNumber(buf, off + 10, 4, 4),\n            maxBand: util.getBitAllignedNumber(buf, off + 11, 0, 6),\n            intensityStereo: util.isBitSet(buf, off + 11, 6),\n            midSideStereo: util.isBitSet(buf, off + 11, 7),\n            // word 3\n            titlePeak: Token.UINT16_LE.get(buf, off + 12),\n            titleGain: Token.UINT16_LE.get(buf, off + 14),\n            // word 4\n            albumPeak: Token.UINT16_LE.get(buf, off + 16),\n            albumGain: Token.UINT16_LE.get(buf, off + 18),\n            // word\n            lastFrameLength: (Token.UINT32_LE.get(buf, off + 20) >>> 20) & 0x7FF,\n            trueGapless: util.isBitSet(buf, off + 23, 0)\n        };\n        header.lastFrameLength = header.trueGapless ? (Token.UINT32_LE.get(buf, 20) >>> 20) & 0x7FF : 0;\n        return header;\n    }\n};\n//# sourceMappingURL=StreamVersion7.js.map","import initDebug from 'debug';\nimport { BasicParser } from '../../common/BasicParser.js';\nimport { tryParseApeHeader } from '../../apev2/APEv2Parser.js';\nimport { BitReader } from './BitReader.js';\nimport * as SV7 from './StreamVersion7.js';\nimport { MusepackContentError } from '../MusepackConentError.js';\nconst debug = initDebug('music-metadata:parser:musepack');\nexport class MpcSv7Parser extends BasicParser {\n    constructor() {\n        super(...arguments);\n        this.bitreader = null;\n        this.audioLength = 0;\n        this.duration = null;\n    }\n    async parse() {\n        const header = await this.tokenizer.readToken(SV7.Header);\n        if (header.signature !== 'MP+')\n            throw new MusepackContentError('Unexpected magic number');\n        debug(`stream-version=${header.streamMajorVersion}.${header.streamMinorVersion}`);\n        this.metadata.setFormat('container', 'Musepack, SV7');\n        this.metadata.setFormat('sampleRate', header.sampleFrequency);\n        const numberOfSamples = 1152 * (header.frameCount - 1) + header.lastFrameLength;\n        this.metadata.setFormat('numberOfSamples', numberOfSamples);\n        this.duration = numberOfSamples / header.sampleFrequency;\n        this.metadata.setFormat('duration', this.duration);\n        this.bitreader = new BitReader(this.tokenizer);\n        this.metadata.setFormat('numberOfChannels', header.midSideStereo || header.intensityStereo ? 2 : 1);\n        const version = await this.bitreader.read(8);\n        this.metadata.setFormat('codec', (version / 100).toFixed(2));\n        await this.skipAudioData(header.frameCount);\n        debug(`End of audio stream, switching to APEv2, offset=${this.tokenizer.position}`);\n        return tryParseApeHeader(this.metadata, this.tokenizer, this.options);\n    }\n    async skipAudioData(frameCount) {\n        while (frameCount-- > 0) {\n            const frameLength = await this.bitreader.read(20);\n            this.audioLength += 20 + frameLength;\n            await this.bitreader.ignore(frameLength);\n        }\n        // last frame\n        const lastFrameLength = await this.bitreader.read(11);\n        this.audioLength += lastFrameLength;\n        if (this.duration !== null) {\n            this.metadata.setFormat('bitrate', this.audioLength / this.duration);\n        }\n    }\n}\n//# sourceMappingURL=MpcSv7Parser.js.map","import initDebug from 'debug';\nimport * as Token from 'token-types';\nimport { AbstractID3Parser } from '../id3v2/AbstractID3Parser.js';\nimport { MpcSv8Parser } from './sv8/MpcSv8Parser.js';\nimport { MpcSv7Parser } from './sv7/MpcSv7Parser.js';\nimport { MusepackContentError } from './MusepackConentError.js';\nconst debug = initDebug('music-metadata:parser:musepack');\nexport class MusepackParser extends AbstractID3Parser {\n    async postId3v2Parse() {\n        const signature = await this.tokenizer.peekToken(new Token.StringType(3, 'latin1'));\n        let mpcParser;\n        switch (signature) {\n            case 'MP+': {\n                debug('Stream-version 7');\n                mpcParser = new MpcSv7Parser(this.metadata, this.tokenizer, this.options);\n                break;\n            }\n            case 'MPC': {\n                debug('Stream-version 8');\n                mpcParser = new MpcSv8Parser(this.metadata, this.tokenizer, this.options);\n                break;\n            }\n            default: {\n                throw new MusepackContentError('Invalid signature prefix');\n            }\n        }\n        this.metadata.setAudioOnly();\n        return mpcParser.parse();\n    }\n}\n//# sourceMappingURL=MusepackParser.js.map"],"names":["debug","initDebug","PacketKey","Token.StringType","SH_part1","buf","off","Token.UINT32_LE","Token.UINT8","SH_part3","util.getBitAllignedNumber","util.isBitSet","StreamReader","value","_tokenizer","key","size","streamHeader","part1","sampleCount","bs","part3","len","hb","n","MusepackContentError","makeUnexpectedFileContentError","MpcSv8Parser","BasicParser","FourCcToken","sv8reader","SV8.StreamReader","header","sh","tryParseApeHeader","BitReader","tokenizer","bits","out","remaining","remainder","numOfWords","Header","Token.UINT16_LE","MpcSv7Parser","SV7.Header","numberOfSamples","version","frameCount","frameLength","lastFrameLength","MusepackParser","AbstractID3Parser","signature","mpcParser"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}