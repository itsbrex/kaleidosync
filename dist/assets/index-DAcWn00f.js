import{b0 as u,b3 as _,b4 as L,aw as m,aR as T,aU as h,aO as I,aP as y,aQ as v,aN as g,b5 as f,aM as C,b6 as S,aL as R,aY as W,b7 as O,aH as D,b8 as G,aE as z,aJ as $,b9 as Q,ba as j,aA as q,aI as V,aS as H,aB as Y,aD as N}from"./index-xeh6oSzU.js";import{n as B,c as K}from"./if-defined-DlTid8OG.js";import"./index-_BiY2HJ4.js";import"./index-DhmUn2IF.js";const p={getGasPriceInEther(o,n){const t=n*o;return Number(t)/1e18},getGasPriceInUSD(o,n,t){const r=p.getGasPriceInEther(n,t);return u.bigNumber(o).times(r).toNumber()},getPriceImpact({sourceTokenAmount:o,sourceTokenPriceInUSD:n,toTokenPriceInUSD:t,toTokenAmount:r}){const a=u.bigNumber(o).times(n),i=u.bigNumber(r).times(t);return a.minus(i).div(a).times(100).toNumber()},getMaxSlippage(o,n){const t=u.bigNumber(o).div(100);return u.multiply(n,t).toNumber()},getProviderFee(o,n=.0085){return u.bigNumber(o).times(n).toString()},isInsufficientNetworkTokenForGas(o,n){const t=n||"0";return u.bigNumber(o).eq(0)?!0:u.bigNumber(u.bigNumber(t)).gt(o)},isInsufficientSourceTokenForSwap(o,n,t){const r=t?.find(i=>i.address===n)?.quantity?.numeric;return u.bigNumber(r||"0").lt(o)},getToTokenAmount({sourceToken:o,toToken:n,sourceTokenPrice:t,toTokenPrice:r,sourceTokenAmount:a}){if(a==="0"||!o||!n)return"0";const i=o.decimals,c=t,d=n.decimals,k=r;if(k<=0)return"0";const A=u.bigNumber(a).times(.0085),x=u.bigNumber(a).minus(A).times(u.bigNumber(10).pow(i)),F=u.bigNumber(c).div(k),M=i-d;return x.times(F).div(u.bigNumber(10).pow(M)).div(u.bigNumber(10).pow(d)).toFixed(d).toString()}},E=15e4,J=6,l={initializing:!1,initialized:!1,loadingPrices:!1,loadingQuote:!1,loadingApprovalTransaction:!1,loadingBuildTransaction:!1,loadingTransaction:!1,fetchError:!1,approvalTransaction:void 0,swapTransaction:void 0,transactionError:void 0,sourceToken:void 0,sourceTokenAmount:"",sourceTokenPriceInUSD:0,toToken:void 0,toTokenAmount:"",toTokenPriceInUSD:0,networkPrice:"0",networkBalanceInUSD:"0",networkTokenSymbol:"",inputError:void 0,slippage:D.CONVERT_SLIPPAGE_TOLERANCE,tokens:void 0,popularTokens:void 0,suggestedTokens:void 0,foundTokens:void 0,myTokensWithBalance:void 0,tokensPriceMap:{},gasFee:"0",gasPriceInUSD:0,priceImpact:void 0,maxSlippage:void 0,providerFee:void 0},e=L(l),b={state:e,subscribe(o){return j(e,()=>o(e))},subscribeKey(o,n){return Q(e,o,n)},getParams(){const o=g.state.activeCaipAddress,n=g.state.activeChain,t=C.getPlainAddress(o),r=G(),a=z.getConnectorId(n);if(!t)throw new Error("No address found to swap the tokens from.");const i=!e.toToken?.address||!e.toToken?.decimals,c=!e.sourceToken?.address||!e.sourceToken?.decimals||!u.bigNumber(e.sourceTokenAmount).gt(0),d=!e.sourceTokenAmount;return{networkAddress:r,fromAddress:t,fromCaipAddress:o,sourceTokenAddress:e.sourceToken?.address,toTokenAddress:e.toToken?.address,toTokenAmount:e.toTokenAmount,toTokenDecimals:e.toToken?.decimals,sourceTokenAmount:e.sourceTokenAmount,sourceTokenDecimals:e.sourceToken?.decimals,invalidToToken:i,invalidSourceToken:c,invalidSourceTokenAmount:d,availableToSwap:o&&!i&&!c&&!d,isAuthConnector:a===$.CONNECTOR_ID.AUTH}},setSourceToken(o){if(!o){e.sourceToken=o,e.sourceTokenAmount="",e.sourceTokenPriceInUSD=0;return}e.sourceToken=o,s.setTokenPrice(o.address,"sourceToken")},setSourceTokenAmount(o){e.sourceTokenAmount=o},setToToken(o){if(!o){e.toToken=o,e.toTokenAmount="",e.toTokenPriceInUSD=0;return}e.toToken=o,s.setTokenPrice(o.address,"toToken")},setToTokenAmount(o){e.toTokenAmount=o?u.formatNumberToLocalString(o,J):""},async setTokenPrice(o,n){let t=e.tokensPriceMap[o]||0;t||(e.loadingPrices=!0,t=await s.getAddressPrice(o)),n==="sourceToken"?e.sourceTokenPriceInUSD=t:n==="toToken"&&(e.toTokenPriceInUSD=t),e.loadingPrices&&(e.loadingPrices=!1),s.getParams().availableToSwap&&s.swapTokens()},switchTokens(){if(e.initializing||!e.initialized)return;const o=e.toToken?{...e.toToken}:void 0,n=e.sourceToken?{...e.sourceToken}:void 0,t=o&&e.toTokenAmount===""?"1":e.toTokenAmount;s.setSourceToken(o),s.setToToken(n),s.setSourceTokenAmount(t),s.setToTokenAmount(""),s.swapTokens()},resetState(){e.myTokensWithBalance=l.myTokensWithBalance,e.tokensPriceMap=l.tokensPriceMap,e.initialized=l.initialized,e.sourceToken=l.sourceToken,e.sourceTokenAmount=l.sourceTokenAmount,e.sourceTokenPriceInUSD=l.sourceTokenPriceInUSD,e.toToken=l.toToken,e.toTokenAmount=l.toTokenAmount,e.toTokenPriceInUSD=l.toTokenPriceInUSD,e.networkPrice=l.networkPrice,e.networkTokenSymbol=l.networkTokenSymbol,e.networkBalanceInUSD=l.networkBalanceInUSD,e.inputError=l.inputError,e.myTokensWithBalance=l.myTokensWithBalance},resetValues(){const{networkAddress:o}=s.getParams(),n=e.tokens?.find(t=>t.address===o);s.setSourceToken(n),s.setToToken(void 0)},getApprovalLoadingState(){return e.loadingApprovalTransaction},clearError(){e.transactionError=void 0},async initializeState(){if(!e.initializing){if(e.initializing=!0,!e.initialized)try{await s.fetchTokens(),e.initialized=!0}catch{e.initialized=!1,T.showError("Failed to initialize swap"),m.goBack()}e.initializing=!1}},async fetchTokens(){const{networkAddress:o}=s.getParams();await s.getTokenList(),await s.getNetworkTokenPrice(),await s.getMyTokensWithBalance();const n=e.tokens?.find(t=>t.address===o);n&&(e.networkTokenSymbol=n.symbol,s.setSourceToken(n),s.setSourceTokenAmount("1"))},async getTokenList(){const o=await S.getTokenList();e.tokens=o,e.popularTokens=o.sort((n,t)=>n.symbol<t.symbol?-1:n.symbol>t.symbol?1:0),e.suggestedTokens=o.filter(n=>!!D.SWAP_SUGGESTED_TOKENS.includes(n.symbol),{})},async getAddressPrice(o){const n=e.tokensPriceMap[o];if(n)return n;const r=(await f.fetchTokenPrice({addresses:[o]}))?.fungibles||[],i=[...e.tokens||[],...e.myTokensWithBalance||[]]?.find(k=>k.address===o)?.symbol,c=r.find(k=>k.symbol.toLowerCase()===i?.toLowerCase())?.price||0,d=parseFloat(c.toString());return e.tokensPriceMap[o]=d,d},async getNetworkTokenPrice(){const{networkAddress:o}=s.getParams(),t=(await f.fetchTokenPrice({addresses:[o]}).catch(()=>(T.showError("Failed to fetch network token price"),{fungibles:[]}))).fungibles?.[0],r=t?.price.toString()||"0";e.tokensPriceMap[o]=parseFloat(r),e.networkTokenSymbol=t?.symbol||"",e.networkPrice=r},async getMyTokensWithBalance(o){const n=await O.getMyTokensWithBalance(o),t=S.mapBalancesToSwapTokens(n);t&&(await s.getInitialGasPrice(),s.setBalances(t))},setBalances(o){const{networkAddress:n}=s.getParams(),t=g.state.activeCaipNetwork;if(!t)return;const r=o.find(a=>a.address===n);o.forEach(a=>{e.tokensPriceMap[a.address]=a.price||0}),e.myTokensWithBalance=o.filter(a=>a.address.startsWith(t.caipNetworkId)),e.networkBalanceInUSD=r?u.multiply(r.quantity.numeric,r.price).toString():"0"},async getInitialGasPrice(){const o=await S.fetchGasPrice();if(!o)return{gasPrice:null,gasPriceInUSD:null};switch(g.state?.activeCaipNetwork?.chainNamespace){case"solana":return e.gasFee=o.standard??"0",e.gasPriceInUSD=u.multiply(o.standard,e.networkPrice).div(1e9).toNumber(),{gasPrice:BigInt(e.gasFee),gasPriceInUSD:Number(e.gasPriceInUSD)};case"eip155":default:const n=o.standard??"0",t=BigInt(n),r=BigInt(E),a=p.getGasPriceInUSD(e.networkPrice,r,t);return e.gasFee=n,e.gasPriceInUSD=a,{gasPrice:t,gasPriceInUSD:a}}},async swapTokens(){const o=R.state.address,n=e.sourceToken,t=e.toToken,r=u.bigNumber(e.sourceTokenAmount).gt(0);if(r||s.setToTokenAmount(""),!t||!n||e.loadingPrices||!r)return;e.loadingQuote=!0;const a=u.bigNumber(e.sourceTokenAmount).times(10**n.decimals).round(0);try{const i=await f.fetchSwapQuote({userAddress:o,from:n.address,to:t.address,gasPrice:e.gasFee,amount:a.toString()});e.loadingQuote=!1;const c=i?.quotes?.[0]?.toAmount;if(!c){W.open({shortMessage:"Incorrect amount",longMessage:"Please enter a valid amount"},"error");return}const d=u.bigNumber(c).div(10**t.decimals).toString();s.setToTokenAmount(d),s.hasInsufficientToken(e.sourceTokenAmount,n.address)?e.inputError="Insufficient balance":(e.inputError=void 0,s.setTransactionDetails())}catch{e.loadingQuote=!1,e.inputError="Insufficient balance"}},async getTransaction(){const{fromCaipAddress:o,availableToSwap:n}=s.getParams(),t=e.sourceToken,r=e.toToken;if(!(!o||!n||!t||!r||e.loadingQuote))try{e.loadingBuildTransaction=!0;const a=await S.fetchSwapAllowance({userAddress:o,tokenAddress:t.address,sourceTokenAmount:e.sourceTokenAmount,sourceTokenDecimals:t.decimals});let i;return a?i=await s.createSwapTransaction():i=await s.createAllowanceTransaction(),e.loadingBuildTransaction=!1,e.fetchError=!1,i}catch{m.goBack(),T.showError("Failed to check allowance"),e.loadingBuildTransaction=!1,e.approvalTransaction=void 0,e.swapTransaction=void 0,e.fetchError=!0;return}},async createAllowanceTransaction(){const{fromCaipAddress:o,sourceTokenAddress:n,toTokenAddress:t}=s.getParams();if(!(!o||!t)){if(!n)throw new Error("createAllowanceTransaction - No source token address found.");try{const r=await f.generateApproveCalldata({from:n,to:t,userAddress:o}),a={data:r.tx.data,to:C.getPlainAddress(r.tx.from),gasPrice:BigInt(r.tx.eip155.gasPrice),value:BigInt(r.tx.value),toAmount:e.toTokenAmount};return e.swapTransaction=void 0,e.approvalTransaction={data:a.data,to:a.to,gasPrice:a.gasPrice,value:a.value,toAmount:a.toAmount},{data:a.data,to:a.to,gasPrice:a.gasPrice,value:a.value,toAmount:a.toAmount}}catch{m.goBack(),T.showError("Failed to create approval transaction"),e.approvalTransaction=void 0,e.swapTransaction=void 0,e.fetchError=!0;return}}},async createSwapTransaction(){const{networkAddress:o,fromCaipAddress:n,sourceTokenAmount:t}=s.getParams(),r=e.sourceToken,a=e.toToken;if(!n||!t||!r||!a)return;const i=h.parseUnits(t,r.decimals)?.toString();try{const c=await f.generateSwapCalldata({userAddress:n,from:r.address,to:a.address,amount:i,disableEstimate:!0}),d=r.address===o,k=BigInt(c.tx.eip155.gas),A=BigInt(c.tx.eip155.gasPrice),P={data:c.tx.data,to:C.getPlainAddress(c.tx.to),gas:k,gasPrice:A,value:BigInt(d?i??"0":"0"),toAmount:e.toTokenAmount};return e.gasPriceInUSD=p.getGasPriceInUSD(e.networkPrice,k,A),e.approvalTransaction=void 0,e.swapTransaction=P,P}catch{m.goBack(),T.showError("Failed to create transaction"),e.approvalTransaction=void 0,e.swapTransaction=void 0,e.fetchError=!0;return}},async sendTransactionForApproval(o){const{fromAddress:n,isAuthConnector:t}=s.getParams();e.loadingApprovalTransaction=!0;const r="Approve limit increase in your wallet";t?m.pushTransactionStack({onSuccess(){T.showLoading(r)}}):T.showLoading(r);try{await h.sendTransaction({address:n,to:o.to,data:o.data,value:o.value,chainNamespace:"eip155"}),await s.swapTokens(),await s.getTransaction(),e.approvalTransaction=void 0,e.loadingApprovalTransaction=!1}catch(a){const i=a;e.transactionError=i?.shortMessage,e.loadingApprovalTransaction=!1,T.showError(i?.shortMessage||"Transaction error"),I.sendEvent({type:"track",event:"SWAP_APPROVAL_ERROR",properties:{message:i?.shortMessage||i?.message||"Unknown",network:g.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:s.state.sourceToken?.symbol||"",swapToToken:s.state.toToken?.symbol||"",swapFromAmount:s.state.sourceTokenAmount||"",swapToAmount:s.state.toTokenAmount||"",isSmartAccount:y("eip155")===v.ACCOUNT_TYPES.SMART_ACCOUNT}})}},async sendTransactionForSwap(o){if(!o)return;const{fromAddress:n,toTokenAmount:t,isAuthConnector:r}=s.getParams();e.loadingTransaction=!0;const a=`Swapping ${e.sourceToken?.symbol} to ${u.formatNumberToLocalString(t,3)} ${e.toToken?.symbol}`,i=`Swapped ${e.sourceToken?.symbol} to ${u.formatNumberToLocalString(t,3)} ${e.toToken?.symbol}`;r?m.pushTransactionStack({onSuccess(){m.replace("Account"),T.showLoading(a),b.resetState()}}):T.showLoading("Confirm transaction in your wallet");try{const c=[e.sourceToken?.address,e.toToken?.address].join(","),d=await h.sendTransaction({address:n,to:o.to,data:o.data,value:o.value,chainNamespace:"eip155"});return e.loadingTransaction=!1,T.showSuccess(i),I.sendEvent({type:"track",event:"SWAP_SUCCESS",properties:{network:g.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:s.state.sourceToken?.symbol||"",swapToToken:s.state.toToken?.symbol||"",swapFromAmount:s.state.sourceTokenAmount||"",swapToAmount:s.state.toTokenAmount||"",isSmartAccount:y("eip155")===v.ACCOUNT_TYPES.SMART_ACCOUNT}}),b.resetState(),r||m.replace("Account"),b.getMyTokensWithBalance(c),d}catch(c){const d=c;e.transactionError=d?.shortMessage,e.loadingTransaction=!1,T.showError(d?.shortMessage||"Transaction error"),I.sendEvent({type:"track",event:"SWAP_ERROR",properties:{message:d?.shortMessage||d?.message||"Unknown",network:g.state.activeCaipNetwork?.caipNetworkId||"",swapFromToken:s.state.sourceToken?.symbol||"",swapToToken:s.state.toToken?.symbol||"",swapFromAmount:s.state.sourceTokenAmount||"",swapToAmount:s.state.toTokenAmount||"",isSmartAccount:y("eip155")===v.ACCOUNT_TYPES.SMART_ACCOUNT}});return}},hasInsufficientToken(o,n){return p.isInsufficientSourceTokenForSwap(o,n,e.myTokensWithBalance)},setTransactionDetails(){const{toTokenAddress:o,toTokenDecimals:n}=s.getParams();!o||!n||(e.gasPriceInUSD=p.getGasPriceInUSD(e.networkPrice,BigInt(e.gasFee),BigInt(E)),e.priceImpact=p.getPriceImpact({sourceTokenAmount:e.sourceTokenAmount,sourceTokenPriceInUSD:e.sourceTokenPriceInUSD,toTokenPriceInUSD:e.toTokenPriceInUSD,toTokenAmount:e.toTokenAmount}),e.maxSlippage=p.getMaxSlippage(e.slippage,e.toTokenAmount),e.providerFee=p.getProviderFee(e.sourceTokenAmount))}},s=_(b),X=q`
  :host {
    display: block;
  }

  :host > button {
    gap: var(--wui-spacing-xxs);
    padding: var(--wui-spacing-xs);
    padding-right: var(--wui-spacing-1xs);
    height: 40px;
    border-radius: var(--wui-border-radius-l);
    background: var(--wui-color-gray-glass-002);
    border-width: 0px;
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-002);
  }

  :host > button wui-image {
    width: 24px;
    height: 24px;
    border-radius: var(--wui-border-radius-s);
    box-shadow: inset 0 0 0 1px var(--wui-color-gray-glass-010);
  }
`;var U=function(o,n,t,r){var a=arguments.length,i=a<3?n:r===null?r=Object.getOwnPropertyDescriptor(n,t):r,c;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(o,n,t,r);else for(var d=o.length-1;d>=0;d--)(c=o[d])&&(i=(a<3?c(i):a>3?c(n,t,i):c(n,t))||i);return a>3&&i&&Object.defineProperty(n,t,i),i};let w=class extends Y{constructor(){super(...arguments),this.text=""}render(){return N`
      <button>
        ${this.tokenTemplate()}
        <wui-text variant="paragraph-600" color="fg-100">${this.text}</wui-text>
      </button>
    `}tokenTemplate(){return this.imageSrc?N`<wui-image src=${this.imageSrc}></wui-image>`:N`
      <wui-icon-box
        size="sm"
        iconColor="fg-200"
        backgroundColor="fg-300"
        icon="networkPlaceholder"
      ></wui-icon-box>
    `}};w.styles=[V,H,X];U([B()],w.prototype,"imageSrc",void 0);U([B()],w.prototype,"text",void 0);w=U([K("wui-token-button")],w);export{s as S};
//# sourceMappingURL=index-DAcWn00f.js.map
