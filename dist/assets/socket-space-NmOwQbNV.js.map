{"version":3,"file":"socket-space-NmOwQbNV.js","sources":["../../node_modules/@wearesage/vue/src/stores/socket-space.ts"],"sourcesContent":["import { defineStore, acceptHMRUpdate } from \"pinia\";\nimport { ref, computed, readonly, onBeforeUnmount } from \"vue\";\nimport { useSocketCore } from \"./socket-core\";\nimport { useToast } from \"./toast\";\nimport { api } from \"../api/client\";\nimport { EventEmitter } from \"events\";\nimport { \n  SocketEvents, \n  SocketEventCategories,\n  ProjectSocketEvent, \n  TaskSocketEvent, \n  BucketSocketEvent,\n  SocketEvent,\n  BaseSocketEvent\n} from \"@wearesage/shared\";\n\n/**\n * 🚀 UNIFIED SOCKET SPACE STORE\n * \n * Single source of truth for ALL space: events\n * Replaces the \"insane\" competing stores (socket-project, socket-messaging, etc.)\n * \n * Architecture:\n * - Listens to ALL space: events from socket\n * - Emits to entity-specific event emitters\n * - Entity stores subscribe to what they need\n * - NO competing listeners, NO prefix jumping\n */\n\ninterface SpaceParticipant {\n  walletAddress: string;\n  joinedAt: number;\n  lastSeen: number;\n}\n\ninterface SpaceCursor {\n  walletAddress: string;\n  x: number;\n  y: number;\n  timestamp: number;\n}\n\ninterface SpaceDrag {\n  walletAddress: string;\n  taskId: string;\n  timestamp: number;\n}\n\nexport const useSocketSpace = defineStore(\"socket-space\", () => {\n  const socketCore = useSocketCore();\n  const toast = useToast();\n\n  // Central event emitter for all space events\n  const spaceEventEmitter = new EventEmitter();\n\n  // Space state management\n  const joinedSpaces = ref<Set<string>>(new Set());\n  const spaceParticipants = ref<Map<string, SpaceParticipant[]>>(new Map());\n  const spaceCursors = ref<Map<string, Map<string, SpaceCursor>>>(new Map());\n  const spaceDrags = ref<Map<string, Map<string, SpaceDrag>>>(new Map());\n\n  // Computed getters\n  const getSpaceParticipants = computed(() => (spaceId: string) => {\n    return spaceParticipants.value.get(spaceId) || [];\n  });\n\n  const getSpaceCursors = computed(() => (spaceId: string) => {\n    const cursors = spaceCursors.value.get(spaceId);\n    return cursors ? Array.from(cursors.values()) : [];\n  });\n\n  const getSpaceDrags = computed(() => (spaceId: string) => {\n    const drags = spaceDrags.value.get(spaceId);\n    return drags ? Array.from(drags.values()) : [];\n  });\n\n  const isTaskBeingDragged = computed(() => (spaceId: string, taskId: string) => {\n    const drags = spaceDrags.value.get(spaceId);\n    if (!drags) return false;\n    \n    for (const drag of drags.values()) {\n      if (drag.taskId === taskId) return true;\n    }\n    return false;\n  });\n\n  // Flag to ensure listeners are only set up once\n  let spaceListenersSetup = false;\n\n  // 🎯 UNIFIED SPACE EVENT LISTENERS\n  const setupSpaceListeners = () => {\n    console.log(\"🚀 SOCKET-SPACE: Setting up unified space listeners...\");\n    \n    if (spaceListenersSetup) {\n      console.log(\"🚀 SOCKET-SPACE: Listeners already set up, skipping...\");\n      return;\n    }\n    \n    if (!socketCore.socket) {\n      console.warn(\"🚫 Cannot setup space listeners - socket not connected\");\n      return;\n    }\n    \n    console.log(\"🚀 SOCKET-SPACE: Socket exists, setting up unified listeners...\");\n    spaceListenersSetup = true;\n\n    // ===== SPACE MANAGEMENT EVENTS =====\n    \n    socketCore.on(SocketEvents.SPACE_JOINED, (data: BaseSocketEvent & { spaceId: string; userWalletAddress: string }) => {\n      console.log(`🎯 User joined space ${data.spaceId}:`, data.userWalletAddress);\n      \n      if (!spaceParticipants.value.has(data.spaceId)) {\n        spaceParticipants.value.set(data.spaceId, []);\n      }\n      \n      const participants = spaceParticipants.value.get(data.spaceId)!;\n      const existing = participants.findIndex(p => p.walletAddress === data.userWalletAddress);\n      \n      if (existing >= 0) {\n        participants[existing].lastSeen = data.timestamp;\n      } else {\n        participants.push({\n          walletAddress: data.userWalletAddress,\n          joinedAt: data.timestamp,\n          lastSeen: data.timestamp,\n        });\n      }\n\n      spaceEventEmitter.emit(\"space-user-joined\", data);\n    });\n\n    socketCore.on(SocketEvents.SPACE_LEFT, (data: BaseSocketEvent & { spaceId: string; userWalletAddress: string }) => {\n      console.log(`👋 User left space ${data.spaceId}:`, data.userWalletAddress);\n      \n      // Remove from participants\n      const participants = spaceParticipants.value.get(data.spaceId);\n      if (participants) {\n        const filtered = participants.filter(p => p.walletAddress !== data.userWalletAddress);\n        spaceParticipants.value.set(data.spaceId, filtered);\n      }\n      \n      // Remove cursor and drag state\n      const cursors = spaceCursors.value.get(data.spaceId);\n      if (cursors) {\n        cursors.delete(data.userWalletAddress);\n      }\n      \n      const drags = spaceDrags.value.get(data.spaceId);\n      if (drags) {\n        drags.delete(data.userWalletAddress);\n      }\n\n      spaceEventEmitter.emit(\"space-user-left\", data);\n    });\n\n    // ===== REAL-TIME ACTIVITY EVENTS =====\n    \n    socketCore.on(SocketEvents.SPACE_CURSOR_MOVE, (data: BaseSocketEvent & { spaceId: string; x: number; y: number }) => {\n      if (!spaceCursors.value.has(data.spaceId)) {\n        spaceCursors.value.set(data.spaceId, new Map());\n      }\n      \n      const cursors = spaceCursors.value.get(data.spaceId)!;\n      cursors.set(data.walletAddress, {\n        walletAddress: data.walletAddress,\n        x: data.x,\n        y: data.y,\n        timestamp: data.timestamp,\n      });\n\n      spaceEventEmitter.emit(\"space-cursor-move\", data);\n    });\n\n    socketCore.on(SocketEvents.SPACE_DRAG_START, (data: BaseSocketEvent & { spaceId: string; taskId: string }) => {\n      console.log(`🏗️ Drag started by ${data.walletAddress}:`, data.taskId);\n      \n      if (!spaceDrags.value.has(data.spaceId)) {\n        spaceDrags.value.set(data.spaceId, new Map());\n      }\n      \n      const drags = spaceDrags.value.get(data.spaceId)!;\n      drags.set(data.walletAddress, {\n        walletAddress: data.walletAddress,\n        taskId: data.taskId,\n        timestamp: data.timestamp,\n      });\n\n      spaceEventEmitter.emit(\"space-drag-start\", data);\n    });\n\n    socketCore.on(SocketEvents.SPACE_DRAG_END, (data: BaseSocketEvent & { spaceId: string; taskId: string }) => {\n      console.log(`🎯 Drag ended by ${data.walletAddress}:`, data.taskId);\n      \n      const drags = spaceDrags.value.get(data.spaceId);\n      if (drags) {\n        drags.delete(data.walletAddress);\n      }\n\n      spaceEventEmitter.emit(\"space-drag-end\", data);\n    });\n\n    // ===== PROJECT CRUD EVENTS =====\n    \n    socketCore.on(SocketEvents.SPACE_PROJECT_CREATE, (event: ProjectSocketEvent) => {\n      console.log(`✨ SPACE: Project created by ${event.walletAddress}:`, event.context.entityId);\n      spaceEventEmitter.emit(\"project-created\", event);\n    });\n\n    socketCore.on(SocketEvents.SPACE_PROJECT_UPDATE, (event: ProjectSocketEvent) => {\n      console.log(`📝 SPACE: Project updated by ${event.walletAddress}:`, event.context.entityId);\n      spaceEventEmitter.emit(\"project-updated\", event);\n    });\n\n    socketCore.on(SocketEvents.SPACE_PROJECT_DELETE, (event: ProjectSocketEvent) => {\n      console.log(`🗑️ SPACE: Project deleted by ${event.walletAddress}:`, event.context.entityId);\n      spaceEventEmitter.emit(\"project-deleted\", event);\n    });\n\n    // ===== BUCKET CRUD EVENTS =====\n    \n    socketCore.on(SocketEvents.SPACE_BUCKET_CREATE, (event: BucketSocketEvent) => {\n      console.log(`📦 SPACE: Bucket created by ${event.walletAddress}:`, event.context.entityId);\n      spaceEventEmitter.emit(\"bucket-created\", event);\n    });\n\n    socketCore.on(SocketEvents.SPACE_BUCKET_UPDATE, (event: BucketSocketEvent) => {\n      console.log(`📦 SPACE: Bucket updated by ${event.walletAddress}:`, event.context.entityId);\n      spaceEventEmitter.emit(\"bucket-updated\", event);\n    });\n\n    socketCore.on(SocketEvents.SPACE_BUCKET_DELETE, (event: BucketSocketEvent) => {\n      console.log(`🗑️ SPACE: Bucket deleted by ${event.walletAddress}:`, event.context.entityId);\n      spaceEventEmitter.emit(\"bucket-deleted\", event);\n    });\n\n    // ===== TASK CRUD EVENTS =====\n    \n    socketCore.on(SocketEvents.SPACE_TASK_CREATE, (event: TaskSocketEvent) => {\n      console.log(`🎯 SPACE: Task created by ${event.walletAddress}:`, event.context.entityId);\n      spaceEventEmitter.emit(\"task-created\", event);\n    });\n\n    socketCore.on(SocketEvents.SPACE_TASK_UPDATE, (event: TaskSocketEvent) => {\n      console.log(`📝 SPACE: Task updated by ${event.walletAddress}:`, event.context.entityId);\n      spaceEventEmitter.emit(\"task-updated\", event);\n    });\n\n    socketCore.on(SocketEvents.SPACE_TASK_MOVE, (event: TaskSocketEvent) => {\n      console.log(`🔄 SPACE: Task moved by ${event.walletAddress}:`, event.context.entityId);\n      spaceEventEmitter.emit(\"task-moved\", event);\n    });\n\n    socketCore.on(SocketEvents.SPACE_TASK_DELETE, (event: TaskSocketEvent) => {\n      console.log(`🗑️ SPACE: Task deleted by ${event.walletAddress}:`, event.context.entityId);\n      spaceEventEmitter.emit(\"task-deleted\", event);\n    });\n\n    // ===== MESSAGE EVENTS =====\n    \n    socketCore.on(SocketEvents.SPACE_MESSAGE_SEND, (event: SocketEvent) => {\n      console.log(`💬 SPACE: Message sent by ${event.walletAddress}`);\n      spaceEventEmitter.emit(\"message-sent\", event);\n    });\n\n    socketCore.on(SocketEvents.SPACE_MESSAGE_UPDATE, (event: SocketEvent) => {\n      console.log(`✏️ SPACE: Message updated by ${event.walletAddress}`);\n      spaceEventEmitter.emit(\"message-updated\", event);\n    });\n\n    socketCore.on(SocketEvents.SPACE_MESSAGE_DELETE, (event: SocketEvent) => {\n      console.log(`🗑️ SPACE: Message deleted by ${event.walletAddress}`);\n      spaceEventEmitter.emit(\"message-deleted\", event);\n    });\n\n    // ===== NOTIFICATION EVENTS =====\n    \n    socketCore.on(SocketEvents.SPACE_NOTIFICATION_CREATE, (event: SocketEvent) => {\n      console.log(`🔔 SPACE: Notification created for ${event.walletAddress}`);\n      spaceEventEmitter.emit(\"notification-created\", event);\n    });\n\n    console.log(\"🚀 SOCKET-SPACE: Unified space listeners setup complete!\");\n    \n    // Setup toast notifications\n    setupToastNotifications();\n  };\n\n  // 🍞 UNIFIED TOAST NOTIFICATIONS\n  const setupToastNotifications = () => {\n    console.log(\"🍞 SPACE: Setting up unified toast notifications...\");\n\n    const getShortWallet = (walletAddress: string) => {\n      return walletAddress ? `${walletAddress.slice(0, 6)}...${walletAddress.slice(-4)}` : 'Unknown';\n    };\n\n    // Project toasts\n    spaceEventEmitter.on(\"project-created\", (event: ProjectSocketEvent) => {\n      toast.message(`✨ ${getShortWallet(event.walletAddress)} created project \"${event.payload.data?.name}\"`);\n    });\n\n    spaceEventEmitter.on(\"project-updated\", (event: ProjectSocketEvent) => {\n      const updates = event.payload.changes ? Object.keys(event.payload.changes).join(', ') : 'unknown';\n      toast.message(`📝 ${getShortWallet(event.walletAddress)} updated project \"${event.payload.data?.name}\" (${updates})`);\n    });\n\n    spaceEventEmitter.on(\"project-deleted\", (event: ProjectSocketEvent) => {\n      toast.message(`🗑️ ${getShortWallet(event.walletAddress)} deleted a project`);\n    });\n\n    // Bucket toasts\n    spaceEventEmitter.on(\"bucket-created\", (event: BucketSocketEvent) => {\n      toast.message(`📦 ${getShortWallet(event.walletAddress)} created bucket \"${event.payload.data?.name}\"`);\n    });\n\n    spaceEventEmitter.on(\"bucket-updated\", (event: BucketSocketEvent) => {\n      toast.message(`📦 ${getShortWallet(event.walletAddress)} updated bucket \"${event.payload.data?.name}\"`);\n    });\n\n    spaceEventEmitter.on(\"bucket-deleted\", (event: BucketSocketEvent) => {\n      toast.message(`🗑️ ${getShortWallet(event.walletAddress)} deleted a bucket`);\n    });\n\n    // Task toasts - THE MOST IMPORTANT! 🎯\n    spaceEventEmitter.on(\"task-created\", (event: TaskSocketEvent) => {\n      console.log('🍞 UNIFIED TOAST: Task created event!', event);\n      const message = `🎯 ${getShortWallet(event.walletAddress)} created task \"${event.payload.data?.title}\"`;\n      console.log('🍞 UNIFIED TOAST: Showing message:', message);\n      toast.message(message);\n    });\n\n    spaceEventEmitter.on(\"task-updated\", (event: TaskSocketEvent) => {\n      const updates = event.payload.changes ? Object.keys(event.payload.changes).join(', ') : 'unknown';\n      toast.message(`📝 ${getShortWallet(event.walletAddress)} updated \"${event.payload.data?.title}\" (${updates})`);\n    });\n\n    spaceEventEmitter.on(\"task-moved\", (event: TaskSocketEvent) => {\n      toast.message(`🔄 ${getShortWallet(event.walletAddress)} moved \"${event.payload.data?.title}\" to new bucket`);\n    });\n\n    spaceEventEmitter.on(\"task-deleted\", (event: TaskSocketEvent) => {\n      console.log('🍞 UNIFIED TOAST: Task deleted event!', event);\n      toast.message(`🗑️ ${getShortWallet(event.walletAddress)} deleted a task`);\n    });\n\n    console.log(\"🍞 SPACE: Unified toast notifications enabled!\");\n  };\n\n  // ===== SPACE ACTIONS =====\n\n  const joinSpace = async (spaceId: string) => {\n    if (!socketCore.connected) {\n      console.warn(\"🚫 Cannot join space - socket not connected\");\n      return false;\n    }\n\n    if (joinedSpaces.value.has(spaceId)) {\n      console.log(`🎯 Already joined space: ${spaceId}`);\n      return true;\n    }\n\n    try {\n      socketCore.emit(SocketEvents.SPACE_JOINED, { spaceId });\n      joinedSpaces.value.add(spaceId);\n\n      // Initialize space data structures\n      if (!spaceCursors.value.has(spaceId)) {\n        spaceCursors.value.set(spaceId, new Map());\n      }\n      if (!spaceParticipants.value.has(spaceId)) {\n        spaceParticipants.value.set(spaceId, []);\n      }\n      if (!spaceDrags.value.has(spaceId)) {\n        spaceDrags.value.set(spaceId, new Map());\n      }\n\n      console.log(`🎯 Joined space: ${spaceId}`);\n      return true;\n    } catch (error) {\n      console.error(\"Error joining space:\", error);\n      return false;\n    }\n  };\n\n  const leaveSpace = async (spaceId: string) => {\n    if (!socketCore.connected) return;\n\n    try {\n      socketCore.emit(SocketEvents.SPACE_LEFT, { spaceId });\n      joinedSpaces.value.delete(spaceId);\n\n      // Clean up space data\n      spaceCursors.value.delete(spaceId);\n      spaceParticipants.value.delete(spaceId);\n      spaceDrags.value.delete(spaceId);\n\n      console.log(`👋 Left space: ${spaceId}`);\n    } catch (error) {\n      console.error(\"Error leaving space:\", error);\n    }\n  };\n\n  // Auto-join user projects (all projects are spaces!)\n  const autoJoinUserProjects = async () => {\n    if (!socketCore.connected) {\n      console.warn(\"🚫 Cannot auto-join projects - socket not connected\");\n      return;\n    }\n\n    try {\n      console.log(\"🎯 SPACE: Auto-joining user projects...\");\n      \n      const response = await api.get('/api/projects');\n      const projectsData = response.data?.projects;\n      \n      if (!projectsData) {\n        console.warn('⚠️ No projects data in response');\n        return;\n      }\n      \n      const ownedProjects = Array.isArray(projectsData.owned) ? projectsData.owned : [];\n      const collaboratedProjects = Array.isArray(projectsData.collaborated) ? projectsData.collaborated : [];\n      const userProjects = [...ownedProjects, ...collaboratedProjects];\n      \n      console.log(`📋 SPACE: Found ${userProjects.length} total projects to join as spaces`);\n      \n      for (const project of userProjects) {\n        await joinSpace(`project:${project.id}`);\n        console.log(`✅ SPACE: Auto-joined project space: ${project.name} (project:${project.id})`);\n        \n        // Small delay to prevent overwhelming the server\n        await new Promise((resolve) => setTimeout(resolve, 100));\n      }\n      \n      console.log(`🎉 SPACE: Successfully auto-joined ${userProjects.length} project spaces with unified toasts!`);\n      \n    } catch (error) {\n      console.error(\"❌ Failed to auto-join user projects:\", error);\n      toast.error(\"Failed to connect to project updates\");\n    }\n  };\n\n  // Cleanup\n  const removeAllSpaceListeners = () => {\n    if (!socketCore.socket) return;\n\n    // Remove all space event listeners using organized categories\n    for (const category of Object.values(SocketEventCategories)) {\n      for (const event of category) {\n        if (event.startsWith('space:')) {\n          socketCore.off(event);\n        }\n      }\n    }\n    \n    console.log(\"🧹 SPACE: Removed all unified space event listeners\");\n  };\n\n  const leaveAllSpaces = async () => {\n    if (!socketCore.connected) return;\n\n    const spaceIds = Array.from(joinedSpaces.value);\n    console.log(`🚪 SPACE: Leaving ${spaceIds.length} spaces`);\n\n    for (const spaceId of spaceIds) {\n      await leaveSpace(spaceId);\n    }\n\n    // Clean up local state\n    joinedSpaces.value.clear();\n    spaceCursors.value.clear();\n    spaceParticipants.value.clear();\n    spaceDrags.value.clear();\n  };\n\n  // Collaborative features\n  const sendCursorMove = (spaceId: string, x: number, y: number) => {\n    if (!socketCore.connected || !joinedSpaces.value.has(spaceId)) {\n      return;\n    }\n\n    socketCore.emit(SocketEvents.SPACE_CURSOR_MOVE, {\n      spaceId,\n      x,\n      y,\n      timestamp: Date.now()\n    });\n  };\n\n  // Compatibility methods for migration from old socket stores\n  const startCleanup = () => {\n    // TODO: Implement periodic cleanup if needed\n    console.log(\"🧹 SPACE: Starting cleanup routines\");\n  };\n\n  const stopCleanup = () => {\n    // TODO: Stop periodic cleanup if needed  \n    console.log(\"🧹 SPACE: Stopping cleanup routines\");\n  };\n\n  onBeforeUnmount(async () => {\n    console.log(\"🧹 SPACE: Store unmounting - cleaning up\");\n    await leaveAllSpaces();\n    removeAllSpaceListeners();\n  });\n\n  return {\n    // State (readonly)\n    joinedSpaces: readonly(joinedSpaces),\n    spaceParticipants: readonly(spaceParticipants),\n    spaceCursors: readonly(spaceCursors),\n    spaceDrags: readonly(spaceDrags),\n\n    // Computed\n    getSpaceParticipants,\n    getSpaceCursors,\n    getSpaceDrags,\n    isTaskBeingDragged,\n\n    // Actions\n    setupSpaceListeners,\n    joinSpace,\n    leaveSpace,\n    autoJoinUserProjects,\n\n    // Collaborative features\n    sendCursorMove,\n    startCleanup,\n    stopCleanup,\n\n    // Event emitter for entity stores to subscribe\n    on: spaceEventEmitter.on.bind(spaceEventEmitter),\n    off: spaceEventEmitter.off.bind(spaceEventEmitter),\n    emit: spaceEventEmitter.emit.bind(spaceEventEmitter),\n  };\n});\n\nif (import.meta.hot) {\n  import.meta.hot.accept(acceptHMRUpdate(useSocketSpace, import.meta.hot));\n}"],"names":["useSocketSpace","defineStore","socketCore","useSocketCore","toast","useToast","spaceEventEmitter","EventEmitter","joinedSpaces","ref","spaceParticipants","spaceCursors","spaceDrags","getSpaceParticipants","computed","spaceId","getSpaceCursors","cursors","getSpaceDrags","drags","isTaskBeingDragged","taskId","drag","spaceListenersSetup","setupSpaceListeners","SocketEvents","data","participants","existing","p","filtered","event","setupToastNotifications","getShortWallet","walletAddress","updates","message","joinSpace","error","leaveSpace","autoJoinUserProjects","projectsData","api","ownedProjects","collaboratedProjects","userProjects","project","resolve","removeAllSpaceListeners","category","SocketEventCategories","leaveAllSpaces","spaceIds","sendCursorMove","x","y","startCleanup","stopCleanup","onBeforeUnmount","readonly"],"mappings":"qHAgDO,MAAMA,EAAiBC,EAAY,eAAgB,IAAM,CAC9D,MAAMC,EAAaC,EAAA,EACbC,EAAQC,EAAA,EAGRC,EAAoB,IAAIC,eAGxBC,EAAeC,EAAiB,IAAI,GAAK,EACzCC,EAAoBD,EAAqC,IAAI,GAAK,EAClEE,EAAeF,EAA2C,IAAI,GAAK,EACnEG,EAAaH,EAAyC,IAAI,GAAK,EAG/DI,EAAuBC,EAAS,IAAOC,GACpCL,EAAkB,MAAM,IAAIK,CAAO,GAAK,CAAA,CAChD,EAEKC,EAAkBF,EAAS,IAAOC,GAAoB,CAC1D,MAAME,EAAUN,EAAa,MAAM,IAAII,CAAO,EAC9C,OAAOE,EAAU,MAAM,KAAKA,EAAQ,OAAA,CAAQ,EAAI,CAAA,CAAC,CAClD,EAEKC,EAAgBJ,EAAS,IAAOC,GAAoB,CACxD,MAAMI,EAAQP,EAAW,MAAM,IAAIG,CAAO,EAC1C,OAAOI,EAAQ,MAAM,KAAKA,EAAM,OAAA,CAAQ,EAAI,CAAA,CAAC,CAC9C,EAEKC,EAAqBN,EAAS,IAAM,CAACC,EAAiBM,IAAmB,CAC7E,MAAMF,EAAQP,EAAW,MAAM,IAAIG,CAAO,EAC1C,GAAI,CAACI,EAAO,MAAO,GAEnB,UAAWG,KAAQH,EAAM,SACvB,GAAIG,EAAK,SAAWD,EAAQ,MAAO,GAErC,MAAO,EAAA,CACR,EAGD,IAAIE,EAAsB,GAG1B,MAAMC,EAAsB,IAAM,CAGhC,GAFA,QAAQ,IAAI,wDAAwD,EAEhED,EAAqB,CACvB,QAAQ,IAAI,wDAAwD,EACpE,MAAA,CAGF,GAAI,CAACrB,EAAW,OAAQ,CACtB,QAAQ,KAAK,wDAAwD,EACrE,MAAA,CAGF,QAAQ,IAAI,iEAAiE,EAC7EqB,EAAsB,GAItBrB,EAAW,GAAGuB,EAAa,aAAeC,GAA2E,CACnH,QAAQ,IAAI,wBAAwBA,EAAK,OAAO,IAAKA,EAAK,iBAAiB,EAEtEhB,EAAkB,MAAM,IAAIgB,EAAK,OAAO,GAC3ChB,EAAkB,MAAM,IAAIgB,EAAK,QAAS,CAAA,CAAE,EAG9C,MAAMC,EAAejB,EAAkB,MAAM,IAAIgB,EAAK,OAAO,EACvDE,EAAWD,EAAa,aAAeE,EAAE,gBAAkBH,EAAK,iBAAiB,EAEnFE,GAAY,EACdD,EAAaC,CAAQ,EAAE,SAAWF,EAAK,UAEvCC,EAAa,KAAK,CAChB,cAAeD,EAAK,kBACpB,SAAUA,EAAK,UACf,SAAUA,EAAK,SAAA,CAChB,EAGHpB,EAAkB,KAAK,oBAAqBoB,CAAI,CAAA,CACjD,EAEDxB,EAAW,GAAGuB,EAAa,WAAaC,GAA2E,CACjH,QAAQ,IAAI,sBAAsBA,EAAK,OAAO,IAAKA,EAAK,iBAAiB,EAGzE,MAAMC,EAAejB,EAAkB,MAAM,IAAIgB,EAAK,OAAO,EAC7D,GAAIC,EAAc,CAChB,MAAMG,EAAWH,EAAa,UAAYE,EAAE,gBAAkBH,EAAK,iBAAiB,EACpFhB,EAAkB,MAAM,IAAIgB,EAAK,QAASI,CAAQ,CAAA,CAIpD,MAAMb,EAAUN,EAAa,MAAM,IAAIe,EAAK,OAAO,EAC/CT,GACFA,EAAQ,OAAOS,EAAK,iBAAiB,EAGvC,MAAMP,EAAQP,EAAW,MAAM,IAAIc,EAAK,OAAO,EAC3CP,GACFA,EAAM,OAAOO,EAAK,iBAAiB,EAGrCpB,EAAkB,KAAK,kBAAmBoB,CAAI,CAAA,CAC/C,EAIDxB,EAAW,GAAGuB,EAAa,kBAAoBC,GAAsE,CAC9Gf,EAAa,MAAM,IAAIe,EAAK,OAAO,GACtCf,EAAa,MAAM,IAAIe,EAAK,QAAS,IAAI,GAAK,EAGhCf,EAAa,MAAM,IAAIe,EAAK,OAAO,EAC3C,IAAIA,EAAK,cAAe,CAC9B,cAAeA,EAAK,cACpB,EAAGA,EAAK,EACR,EAAGA,EAAK,EACR,UAAWA,EAAK,SAAA,CACjB,EAEDpB,EAAkB,KAAK,oBAAqBoB,CAAI,CAAA,CACjD,EAEDxB,EAAW,GAAGuB,EAAa,iBAAmBC,GAAgE,CAC5G,QAAQ,IAAI,uBAAuBA,EAAK,aAAa,IAAKA,EAAK,MAAM,EAEhEd,EAAW,MAAM,IAAIc,EAAK,OAAO,GACpCd,EAAW,MAAM,IAAIc,EAAK,QAAS,IAAI,GAAK,EAGhCd,EAAW,MAAM,IAAIc,EAAK,OAAO,EACzC,IAAIA,EAAK,cAAe,CAC5B,cAAeA,EAAK,cACpB,OAAQA,EAAK,OACb,UAAWA,EAAK,SAAA,CACjB,EAEDpB,EAAkB,KAAK,mBAAoBoB,CAAI,CAAA,CAChD,EAEDxB,EAAW,GAAGuB,EAAa,eAAiBC,GAAgE,CAC1G,QAAQ,IAAI,oBAAoBA,EAAK,aAAa,IAAKA,EAAK,MAAM,EAElE,MAAMP,EAAQP,EAAW,MAAM,IAAIc,EAAK,OAAO,EAC3CP,GACFA,EAAM,OAAOO,EAAK,aAAa,EAGjCpB,EAAkB,KAAK,iBAAkBoB,CAAI,CAAA,CAC9C,EAIDxB,EAAW,GAAGuB,EAAa,qBAAuBM,GAA8B,CAC9E,QAAQ,IAAI,+BAA+BA,EAAM,aAAa,IAAKA,EAAM,QAAQ,QAAQ,EACzFzB,EAAkB,KAAK,kBAAmByB,CAAK,CAAA,CAChD,EAED7B,EAAW,GAAGuB,EAAa,qBAAuBM,GAA8B,CAC9E,QAAQ,IAAI,gCAAgCA,EAAM,aAAa,IAAKA,EAAM,QAAQ,QAAQ,EAC1FzB,EAAkB,KAAK,kBAAmByB,CAAK,CAAA,CAChD,EAED7B,EAAW,GAAGuB,EAAa,qBAAuBM,GAA8B,CAC9E,QAAQ,IAAI,iCAAiCA,EAAM,aAAa,IAAKA,EAAM,QAAQ,QAAQ,EAC3FzB,EAAkB,KAAK,kBAAmByB,CAAK,CAAA,CAChD,EAID7B,EAAW,GAAGuB,EAAa,oBAAsBM,GAA6B,CAC5E,QAAQ,IAAI,+BAA+BA,EAAM,aAAa,IAAKA,EAAM,QAAQ,QAAQ,EACzFzB,EAAkB,KAAK,iBAAkByB,CAAK,CAAA,CAC/C,EAED7B,EAAW,GAAGuB,EAAa,oBAAsBM,GAA6B,CAC5E,QAAQ,IAAI,+BAA+BA,EAAM,aAAa,IAAKA,EAAM,QAAQ,QAAQ,EACzFzB,EAAkB,KAAK,iBAAkByB,CAAK,CAAA,CAC/C,EAED7B,EAAW,GAAGuB,EAAa,oBAAsBM,GAA6B,CAC5E,QAAQ,IAAI,gCAAgCA,EAAM,aAAa,IAAKA,EAAM,QAAQ,QAAQ,EAC1FzB,EAAkB,KAAK,iBAAkByB,CAAK,CAAA,CAC/C,EAID7B,EAAW,GAAGuB,EAAa,kBAAoBM,GAA2B,CACxE,QAAQ,IAAI,6BAA6BA,EAAM,aAAa,IAAKA,EAAM,QAAQ,QAAQ,EACvFzB,EAAkB,KAAK,eAAgByB,CAAK,CAAA,CAC7C,EAED7B,EAAW,GAAGuB,EAAa,kBAAoBM,GAA2B,CACxE,QAAQ,IAAI,6BAA6BA,EAAM,aAAa,IAAKA,EAAM,QAAQ,QAAQ,EACvFzB,EAAkB,KAAK,eAAgByB,CAAK,CAAA,CAC7C,EAED7B,EAAW,GAAGuB,EAAa,gBAAkBM,GAA2B,CACtE,QAAQ,IAAI,2BAA2BA,EAAM,aAAa,IAAKA,EAAM,QAAQ,QAAQ,EACrFzB,EAAkB,KAAK,aAAcyB,CAAK,CAAA,CAC3C,EAED7B,EAAW,GAAGuB,EAAa,kBAAoBM,GAA2B,CACxE,QAAQ,IAAI,8BAA8BA,EAAM,aAAa,IAAKA,EAAM,QAAQ,QAAQ,EACxFzB,EAAkB,KAAK,eAAgByB,CAAK,CAAA,CAC7C,EAID7B,EAAW,GAAGuB,EAAa,mBAAqBM,GAAuB,CACrE,QAAQ,IAAI,6BAA6BA,EAAM,aAAa,EAAE,EAC9DzB,EAAkB,KAAK,eAAgByB,CAAK,CAAA,CAC7C,EAED7B,EAAW,GAAGuB,EAAa,qBAAuBM,GAAuB,CACvE,QAAQ,IAAI,gCAAgCA,EAAM,aAAa,EAAE,EACjEzB,EAAkB,KAAK,kBAAmByB,CAAK,CAAA,CAChD,EAED7B,EAAW,GAAGuB,EAAa,qBAAuBM,GAAuB,CACvE,QAAQ,IAAI,iCAAiCA,EAAM,aAAa,EAAE,EAClEzB,EAAkB,KAAK,kBAAmByB,CAAK,CAAA,CAChD,EAID7B,EAAW,GAAGuB,EAAa,0BAA4BM,GAAuB,CAC5E,QAAQ,IAAI,sCAAsCA,EAAM,aAAa,EAAE,EACvEzB,EAAkB,KAAK,uBAAwByB,CAAK,CAAA,CACrD,EAED,QAAQ,IAAI,0DAA0D,EAGtEC,EAAA,CAAwB,EAIpBA,EAA0B,IAAM,CACpC,QAAQ,IAAI,qDAAqD,EAEjE,MAAMC,EAAkBC,GACfA,EAAgB,GAAGA,EAAc,MAAM,EAAG,CAAC,CAAC,MAAMA,EAAc,MAAM,EAAE,CAAC,GAAK,UAIvF5B,EAAkB,GAAG,kBAAoByB,GAA8B,CACrE3B,EAAM,QAAQ,KAAK6B,EAAeF,EAAM,aAAa,CAAC,qBAAqBA,EAAM,QAAQ,MAAM,IAAI,GAAG,CAAA,CACvG,EAEDzB,EAAkB,GAAG,kBAAoByB,GAA8B,CACrE,MAAMI,EAAUJ,EAAM,QAAQ,QAAU,OAAO,KAAKA,EAAM,QAAQ,OAAO,EAAE,KAAK,IAAI,EAAI,UACxF3B,EAAM,QAAQ,MAAM6B,EAAeF,EAAM,aAAa,CAAC,qBAAqBA,EAAM,QAAQ,MAAM,IAAI,MAAMI,CAAO,GAAG,CAAA,CACrH,EAED7B,EAAkB,GAAG,kBAAoByB,GAA8B,CACrE3B,EAAM,QAAQ,OAAO6B,EAAeF,EAAM,aAAa,CAAC,oBAAoB,CAAA,CAC7E,EAGDzB,EAAkB,GAAG,iBAAmByB,GAA6B,CACnE3B,EAAM,QAAQ,MAAM6B,EAAeF,EAAM,aAAa,CAAC,oBAAoBA,EAAM,QAAQ,MAAM,IAAI,GAAG,CAAA,CACvG,EAEDzB,EAAkB,GAAG,iBAAmByB,GAA6B,CACnE3B,EAAM,QAAQ,MAAM6B,EAAeF,EAAM,aAAa,CAAC,oBAAoBA,EAAM,QAAQ,MAAM,IAAI,GAAG,CAAA,CACvG,EAEDzB,EAAkB,GAAG,iBAAmByB,GAA6B,CACnE3B,EAAM,QAAQ,OAAO6B,EAAeF,EAAM,aAAa,CAAC,mBAAmB,CAAA,CAC5E,EAGDzB,EAAkB,GAAG,eAAiByB,GAA2B,CAC/D,QAAQ,IAAI,wCAAyCA,CAAK,EAC1D,MAAMK,EAAU,MAAMH,EAAeF,EAAM,aAAa,CAAC,kBAAkBA,EAAM,QAAQ,MAAM,KAAK,IACpG,QAAQ,IAAI,qCAAsCK,CAAO,EACzDhC,EAAM,QAAQgC,CAAO,CAAA,CACtB,EAED9B,EAAkB,GAAG,eAAiByB,GAA2B,CAC/D,MAAMI,EAAUJ,EAAM,QAAQ,QAAU,OAAO,KAAKA,EAAM,QAAQ,OAAO,EAAE,KAAK,IAAI,EAAI,UACxF3B,EAAM,QAAQ,MAAM6B,EAAeF,EAAM,aAAa,CAAC,aAAaA,EAAM,QAAQ,MAAM,KAAK,MAAMI,CAAO,GAAG,CAAA,CAC9G,EAED7B,EAAkB,GAAG,aAAeyB,GAA2B,CAC7D3B,EAAM,QAAQ,MAAM6B,EAAeF,EAAM,aAAa,CAAC,WAAWA,EAAM,QAAQ,MAAM,KAAK,iBAAiB,CAAA,CAC7G,EAEDzB,EAAkB,GAAG,eAAiByB,GAA2B,CAC/D,QAAQ,IAAI,wCAAyCA,CAAK,EAC1D3B,EAAM,QAAQ,OAAO6B,EAAeF,EAAM,aAAa,CAAC,iBAAiB,CAAA,CAC1E,EAED,QAAQ,IAAI,gDAAgD,CAAA,EAKxDM,EAAY,MAAOtB,GAAoB,CAC3C,GAAI,CAACb,EAAW,UACd,eAAQ,KAAK,6CAA6C,EACnD,GAGT,GAAIM,EAAa,MAAM,IAAIO,CAAO,EAChC,eAAQ,IAAI,4BAA4BA,CAAO,EAAE,EAC1C,GAGT,GAAI,CACF,OAAAb,EAAW,KAAKuB,EAAa,aAAc,CAAE,QAAAV,EAAS,EACtDP,EAAa,MAAM,IAAIO,CAAO,EAGzBJ,EAAa,MAAM,IAAII,CAAO,GACjCJ,EAAa,MAAM,IAAII,EAAS,IAAI,GAAK,EAEtCL,EAAkB,MAAM,IAAIK,CAAO,GACtCL,EAAkB,MAAM,IAAIK,EAAS,CAAA,CAAE,EAEpCH,EAAW,MAAM,IAAIG,CAAO,GAC/BH,EAAW,MAAM,IAAIG,EAAS,IAAI,GAAK,EAGzC,QAAQ,IAAI,oBAAoBA,CAAO,EAAE,EAClC,EAAA,OACAuB,EAAO,CACd,eAAQ,MAAM,uBAAwBA,CAAK,EACpC,EAAA,CACT,EAGIC,EAAa,MAAOxB,GAAoB,CAC5C,GAAKb,EAAW,UAEhB,GAAI,CACFA,EAAW,KAAKuB,EAAa,WAAY,CAAE,QAAAV,EAAS,EACpDP,EAAa,MAAM,OAAOO,CAAO,EAGjCJ,EAAa,MAAM,OAAOI,CAAO,EACjCL,EAAkB,MAAM,OAAOK,CAAO,EACtCH,EAAW,MAAM,OAAOG,CAAO,EAE/B,QAAQ,IAAI,kBAAkBA,CAAO,EAAE,CAAA,OAChCuB,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CAAA,CAC7C,EAIIE,EAAuB,SAAY,CACvC,GAAI,CAACtC,EAAW,UAAW,CACzB,QAAQ,KAAK,qDAAqD,EAClE,MAAA,CAGF,GAAI,CACF,QAAQ,IAAI,yCAAyC,EAGrD,MAAMuC,GADW,MAAMC,EAAI,IAAI,eAAe,GAChB,MAAM,SAEpC,GAAI,CAACD,EAAc,CACjB,QAAQ,KAAK,iCAAiC,EAC9C,MAAA,CAGF,MAAME,EAAgB,MAAM,QAAQF,EAAa,KAAK,EAAIA,EAAa,MAAQ,CAAA,EACzEG,EAAuB,MAAM,QAAQH,EAAa,YAAY,EAAIA,EAAa,aAAe,CAAA,EAC9FI,EAAe,CAAC,GAAGF,EAAe,GAAGC,CAAoB,EAE/D,QAAQ,IAAI,mBAAmBC,EAAa,MAAM,mCAAmC,EAErF,UAAWC,KAAWD,EACpB,MAAMR,EAAU,WAAWS,EAAQ,EAAE,EAAE,EACvC,QAAQ,IAAI,uCAAuCA,EAAQ,IAAI,aAAaA,EAAQ,EAAE,GAAG,EAGzF,MAAM,IAAI,QAASC,GAAY,WAAWA,EAAS,GAAG,CAAC,EAGzD,QAAQ,IAAI,sCAAsCF,EAAa,MAAM,sCAAsC,CAAA,OAEpGP,EAAO,CACd,QAAQ,MAAM,uCAAwCA,CAAK,EAC3DlC,EAAM,MAAM,sCAAsC,CAAA,CACpD,EAII4C,EAA0B,IAAM,CACpC,GAAK9C,EAAW,OAGhB,WAAW+C,KAAY,OAAO,OAAOC,CAAqB,EACxD,UAAWnB,KAASkB,EACdlB,EAAM,WAAW,QAAQ,GAC3B7B,EAAW,IAAI6B,CAAK,EAK1B,QAAQ,IAAI,qDAAqD,EAAA,EAG7DoB,EAAiB,SAAY,CACjC,GAAI,CAACjD,EAAW,UAAW,OAE3B,MAAMkD,EAAW,MAAM,KAAK5C,EAAa,KAAK,EAC9C,QAAQ,IAAI,qBAAqB4C,EAAS,MAAM,SAAS,EAEzD,UAAWrC,KAAWqC,EACpB,MAAMb,EAAWxB,CAAO,EAI1BP,EAAa,MAAM,MAAA,EACnBG,EAAa,MAAM,MAAA,EACnBD,EAAkB,MAAM,MAAA,EACxBE,EAAW,MAAM,MAAA,CAAM,EAInByC,EAAiB,CAACtC,EAAiBuC,EAAWC,IAAc,CAC5D,CAACrD,EAAW,WAAa,CAACM,EAAa,MAAM,IAAIO,CAAO,GAI5Db,EAAW,KAAKuB,EAAa,kBAAmB,CAC9C,QAAAV,EACA,EAAAuC,EACA,EAAAC,EACA,UAAW,KAAK,IAAA,CAAI,CACrB,CAAA,EAIGC,EAAe,IAAM,CAEzB,QAAQ,IAAI,qCAAqC,CAAA,EAG7CC,EAAc,IAAM,CAExB,QAAQ,IAAI,qCAAqC,CAAA,EAGnD,OAAAC,EAAgB,SAAY,CAC1B,QAAQ,IAAI,0CAA0C,EACtD,MAAMP,EAAA,EACNH,EAAA,CAAwB,CACzB,EAEM,CAEL,aAAcW,EAASnD,CAAY,EACnC,kBAAmBmD,EAASjD,CAAiB,EAC7C,aAAciD,EAAShD,CAAY,EACnC,WAAYgD,EAAS/C,CAAU,EAG/B,qBAAAC,EACA,gBAAAG,EACA,cAAAE,EACA,mBAAAE,EAGA,oBAAAI,EACA,UAAAa,EACA,WAAAE,EACA,qBAAAC,EAGA,eAAAa,EACA,aAAAG,EACA,YAAAC,EAGA,GAAInD,EAAkB,GAAG,KAAKA,CAAiB,EAC/C,IAAKA,EAAkB,IAAI,KAAKA,CAAiB,EACjD,KAAMA,EAAkB,KAAK,KAAKA,CAAiB,CAAA,CAEvD,CAAC","x_google_ignoreList":[0]}