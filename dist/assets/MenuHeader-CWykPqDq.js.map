{"version":3,"file":"MenuHeader-CWykPqDq.js","sources":["../../node_modules/@wearesage/vue/src/composables/utilities/useTypedText.ts","../../node_modules/@wearesage/vue/src/components/common/CloseButton.vue","../../src/components/MenuHeader.vue"],"sourcesContent":["import { ref, onMounted, onBeforeUnmount, type Ref } from \"vue\";\nimport { pause } from \"../../util\";\n\nexport function useTypedText(elementRef: Ref<HTMLElement>, text: string) {\n  const split = ref<string[]>([]);\n  const i = ref(0);\n  const dead = ref(false);\n\n  async function tick() {\n    await pause(40);\n    if (dead.value || !elementRef.value) return;\n    elementRef.value.textContent += split.value[i.value];\n\n    if (i.value < split.value.length - 1) {\n      i.value++;\n      tick();\n    }\n  }\n\n  onMounted(() => {\n    split.value = text\n      .split(\" \")\n      .join(\"&\")\n      .split(\"\")\n      .map((v) => (v === \"&\" ? \" \" : v));\n    tick();\n  });\n\n  onBeforeUnmount(() => {\n    dead.value = true;\n  });\n}\n","<template>\n  <div class=\"close-button\">\n    <IconButton icon=\"close\" @click=\"$emit('close')\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport IconButton from \"./IconButton.vue\";\n\ndefineEmits([\"close\"]);\n</script>\n\n<style lang=\"scss\" scoped>\n.icon-button {\n  background: $pink !important;\n  outline: 0 !important;\n  box-shadow: 0 1px 0 1px $black;\n  border: 1px solid transparent;\n\n  &:hover {\n    background: lighten($black, 30%) !important;\n    border-color: rgba($purple, 0.6);\n  }\n}\n</style>\n","<template>\n  <Row align=\"center\" justify=\"center\" :collapse=\"true\" cascade gap=\".5\">\n    <h2 ref=\"text\"></h2>\n    <slot />\n    <CloseButton @click=\"close\" />\n  </Row>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport { Row, CloseButton, useTypedText } from \"@wearesage/vue\";\n\nconst props = defineProps<{ title: string }>();\nconst text = ref();\nconst $emit = defineEmits([\"close\"]);\nuseTypedText(text, props.title);\n\nfunction close() {\n  $emit(\"close\");\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.row {\n  overflow: visible;\n  @include mobile {\n    @include flex-column(end, end);\n    flex-direction: column-reverse;\n  }\n}\nh2 {\n  font-size: 2.5rem;\n  font-family: \"Major Mono Display\";\n  font-weight: normal;\n  text-transform: uppercase;\n}\n</style>\n"],"names":["useTypedText","elementRef","text","split","ref","i","dead","tick","pause","onMounted","v","onBeforeUnmount","_openBlock","_createElementBlock","_hoisted_1","_createVNode","IconButton","$emit","props","__props","__emit","close","_createBlock","_unref","Row","_createElementVNode","_renderSlot","_ctx","CloseButton"],"mappings":"mNAGO,SAASA,EAAaC,EAA8BC,EAAc,CACvE,MAAMC,EAAQC,EAAc,EAAE,EACxBC,EAAID,EAAI,CAAC,EACTE,EAAOF,EAAI,EAAK,EAEtB,eAAeG,GAAO,CACpB,MAAMC,EAAM,EAAE,EACV,EAAAF,EAAK,OAAS,CAACL,EAAW,SAC9BA,EAAW,MAAM,aAAeE,EAAM,MAAME,EAAE,KAAK,EAE/CA,EAAE,MAAQF,EAAM,MAAM,OAAS,IACjCE,EAAE,QACFE,EAAA,GACF,CAGFE,EAAU,IAAM,CACdN,EAAM,MAAQD,EACX,MAAM,GAAG,EACT,KAAK,GAAG,EACR,MAAM,EAAE,EACR,IAAKQ,GAAOA,IAAM,IAAM,IAAMA,CAAE,EACnCH,EAAA,CAAK,CACN,EAEDI,EAAgB,IAAM,CACpBL,EAAK,MAAQ,EAAA,CACd,CACH,iGC9BEM,EAAA,EAAAC,EAEM,MAFNC,EAEM,CADJC,EAAmDC,EAAA,CAAvC,KAAK,QAAS,uBAAOC,EAAAA,MAAK,OAAA,EAAA,8HCU1C,MAAMC,EAAQC,EACRjB,EAAOE,EAAA,EACPa,EAAQG,EACdpB,EAAaE,EAAMgB,EAAM,KAAK,EAE9B,SAASG,GAAQ,CACfJ,EAAM,OAAO,CAAA,mBAjBbK,EAIMC,EAAAC,CAAA,EAAA,CAJD,MAAM,SAAS,QAAQ,SAAU,SAAU,GAAM,QAAA,GAAQ,IAAI,IAAA,aAChE,IAAoB,CAApBC,EAAoB,KAAA,SAAZ,OAAJ,IAAIvB,CAAA,YACRwB,EAAQC,EAAA,OAAA,UAAA,CAAA,EAAA,OAAA,EAAA,EACRZ,EAA8BQ,EAAAK,CAAA,EAAA,CAAhB,QAAOP,EAAK,CAAA","x_google_ignoreList":[0,1]}