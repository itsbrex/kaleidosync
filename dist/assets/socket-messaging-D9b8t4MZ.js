import{a8 as N,aa as D,r as c,c as l,y as S,al as m}from"./index-xeh6oSzU.js";const x=N("socket-messaging",()=>{const t=D(),a=c([]),n=c([]),i=c([]),u=l(()=>n.value.filter(e=>!e.read)),f=l(()=>u.value.length),d=l(()=>e=>a.value.filter(s=>s.fromWalletAddress===e||s.toWalletAddress===e).sort((s,o)=>s.timestamp-o.timestamp)),g=()=>{if(!t.socket){console.warn("🚫 Cannot setup messaging listeners - socket not connected");return}t.on("user-message:received",e=>{console.log("📬 Received direct message from:",e.fromWalletAddress);const s={id:e.messageId,fromWalletAddress:e.fromWalletAddress,toWalletAddress:"self",message:e.message,messageType:e.messageType,timestamp:e.timestamp,data:e.data};a.value.push(s),typeof window<"u"&&window.dispatchEvent(new CustomEvent("directMessageReceived",{detail:s}))}),t.on("notification:received",e=>{console.log("🔔 Received notification:",e.title);const s={...e,read:!1};n.value.unshift(s),typeof window<"u"&&window.dispatchEvent(new CustomEvent("notificationReceived",{detail:s}))}),t.on("user-message:error",e=>{console.error("❌ Message error:",e.message),i.value.push(e.message),setTimeout(()=>{const s=i.value.indexOf(e.message);s>-1&&i.value.splice(s,1)},5e3)}),console.log("📡 Messaging listeners setup complete")},v=(e,s,o="text",y)=>{if(!t.connected)return console.warn("🚫 Cannot send message - socket not connected"),!1;const r={toWalletAddress:e,message:s,messageType:o,timestamp:Date.now(),data:y||{}};t.emit("user-message:send",r);const A={id:`local_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,fromWalletAddress:"self",toWalletAddress:e,message:s,messageType:o,timestamp:r.timestamp,data:r.data};return a.value.push(A),console.log(`📤 Sent message to ${e.slice(0,8)}...`),!0},p=e=>{const s=n.value.find(o=>o.id===e);s&&(s.read=!0)},w=()=>{n.value.forEach(e=>{e.read=!0})},M=()=>{n.value=[]},k=()=>{a.value=[]},h=()=>{i.value=[]},E=(e=24*60*60*1e3)=>{const s=Date.now()-e;a.value=a.value.filter(o=>o.timestamp>s)},C=(e=7*24*60*60*1e3)=>{const s=Date.now()-e;n.value=n.value.filter(o=>o.timestamp>s)},R=()=>{t.socket&&(t.off("user-message:received"),t.off("notification:received"),t.off("user-message:error"),console.log("🧹 Removed all messaging socket event listeners"))};return S(()=>{console.log("🧹 Messaging store unmounting - cleaning up"),R(),a.value=[],n.value=[],i.value=[]}),{messages:m(a),notifications:m(n),messageErrors:m(i),unreadNotifications:u,unreadNotificationCount:f,getMessagesByUser:d,setupMessagingListeners:g,sendMessage:v,markNotificationRead:p,markAllNotificationsRead:w,clearNotifications:M,clearMessages:k,clearMessageErrors:h,removeOldMessages:E,removeOldNotifications:C}});export{x as useSocketMessaging};
//# sourceMappingURL=socket-messaging-D9b8t4MZ.js.map
