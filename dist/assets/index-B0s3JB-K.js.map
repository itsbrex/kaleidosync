{"version":3,"file":"index-B0s3JB-K.js","sources":["../../node_modules/viem/_esm/errors/typedData.js","../../node_modules/viem/_esm/utils/signature/hashTypedData.js","../../node_modules/viem/_esm/utils/typedData.js","../../node_modules/viem/_esm/constants/strings.js","../../node_modules/viem/_esm/utils/signature/toPrefixedMessage.js","../../node_modules/viem/_esm/utils/signature/hashMessage.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/version.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/utils.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/messageFormatter.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/methods.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/index.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/types/sdk.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/txs/index.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/eth/constants.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/eth/index.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/safe/signatures.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/types/permissions.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/wallet/index.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/decorators/requirePermissions.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/safe/index.js","../../node_modules/@safe-global/safe-apps-sdk/dist/esm/sdk.js"],"sourcesContent":["import { stringify } from '../utils/stringify.js';\nimport { BaseError } from './base.js';\nexport class InvalidDomainError extends BaseError {\n    constructor({ domain }) {\n        super(`Invalid domain \"${stringify(domain)}\".`, {\n            metaMessages: ['Must be a valid EIP-712 domain.'],\n        });\n    }\n}\nexport class InvalidPrimaryTypeError extends BaseError {\n    constructor({ primaryType, types, }) {\n        super(`Invalid primary type \\`${primaryType}\\` must be one of \\`${JSON.stringify(Object.keys(types))}\\`.`, {\n            docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',\n            metaMessages: ['Check that the primary type is a key in `types`.'],\n        });\n    }\n}\nexport class InvalidStructTypeError extends BaseError {\n    constructor({ type }) {\n        super(`Struct type \"${type}\" is invalid.`, {\n            metaMessages: ['Struct type must not be a Solidity type.'],\n            name: 'InvalidStructTypeError',\n        });\n    }\n}\n//# sourceMappingURL=typedData.js.map","// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\nimport { encodeAbiParameters, } from '../abi/encodeAbiParameters.js';\nimport { concat } from '../data/concat.js';\nimport { toHex } from '../encoding/toHex.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { getTypesForEIP712Domain, validateTypedData, } from '../typedData.js';\nexport function hashTypedData(parameters) {\n    const { domain = {}, message, primaryType, } = parameters;\n    const types = {\n        EIP712Domain: getTypesForEIP712Domain({ domain }),\n        ...parameters.types,\n    };\n    // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n    // as we can't statically check this with TypeScript.\n    validateTypedData({\n        domain,\n        message,\n        primaryType,\n        types,\n    });\n    const parts = ['0x1901'];\n    if (domain)\n        parts.push(hashDomain({\n            domain,\n            types: types,\n        }));\n    if (primaryType !== 'EIP712Domain')\n        parts.push(hashStruct({\n            data: message,\n            primaryType,\n            types: types,\n        }));\n    return keccak256(concat(parts));\n}\nexport function hashDomain({ domain, types, }) {\n    return hashStruct({\n        data: domain,\n        primaryType: 'EIP712Domain',\n        types,\n    });\n}\nexport function hashStruct({ data, primaryType, types, }) {\n    const encoded = encodeData({\n        data,\n        primaryType,\n        types,\n    });\n    return keccak256(encoded);\n}\nfunction encodeData({ data, primaryType, types, }) {\n    const encodedTypes = [{ type: 'bytes32' }];\n    const encodedValues = [hashType({ primaryType, types })];\n    for (const field of types[primaryType]) {\n        const [type, value] = encodeField({\n            types,\n            name: field.name,\n            type: field.type,\n            value: data[field.name],\n        });\n        encodedTypes.push(type);\n        encodedValues.push(value);\n    }\n    return encodeAbiParameters(encodedTypes, encodedValues);\n}\nfunction hashType({ primaryType, types, }) {\n    const encodedHashType = toHex(encodeType({ primaryType, types }));\n    return keccak256(encodedHashType);\n}\nexport function encodeType({ primaryType, types, }) {\n    let result = '';\n    const unsortedDeps = findTypeDependencies({ primaryType, types });\n    unsortedDeps.delete(primaryType);\n    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n    for (const type of deps) {\n        result += `${type}(${types[type]\n            .map(({ name, type: t }) => `${t} ${name}`)\n            .join(',')})`;\n    }\n    return result;\n}\nfunction findTypeDependencies({ primaryType: primaryType_, types, }, results = new Set()) {\n    const match = primaryType_.match(/^\\w*/u);\n    const primaryType = match?.[0];\n    if (results.has(primaryType) || types[primaryType] === undefined) {\n        return results;\n    }\n    results.add(primaryType);\n    for (const field of types[primaryType]) {\n        findTypeDependencies({ primaryType: field.type, types }, results);\n    }\n    return results;\n}\nfunction encodeField({ types, name, type, value, }) {\n    if (types[type] !== undefined) {\n        return [\n            { type: 'bytes32' },\n            keccak256(encodeData({ data: value, primaryType: type, types })),\n        ];\n    }\n    if (type === 'bytes') {\n        const prepend = value.length % 2 ? '0' : '';\n        value = `0x${prepend + value.slice(2)}`;\n        return [{ type: 'bytes32' }, keccak256(value)];\n    }\n    if (type === 'string')\n        return [{ type: 'bytes32' }, keccak256(toHex(value))];\n    if (type.lastIndexOf(']') === type.length - 1) {\n        const parsedType = type.slice(0, type.lastIndexOf('['));\n        const typeValuePairs = value.map((item) => encodeField({\n            name,\n            type: parsedType,\n            types,\n            value: item,\n        }));\n        return [\n            { type: 'bytes32' },\n            keccak256(encodeAbiParameters(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v))),\n        ];\n    }\n    return [{ type }, value];\n}\n//# sourceMappingURL=hashTypedData.js.map","import { BytesSizeMismatchError } from '../errors/abi.js';\nimport { InvalidAddressError } from '../errors/address.js';\nimport { InvalidDomainError, InvalidPrimaryTypeError, InvalidStructTypeError, } from '../errors/typedData.js';\nimport { isAddress } from './address/isAddress.js';\nimport { size } from './data/size.js';\nimport { numberToHex } from './encoding/toHex.js';\nimport { bytesRegex, integerRegex } from './regex.js';\nimport { hashDomain, } from './signature/hashTypedData.js';\nimport { stringify } from './stringify.js';\nexport function serializeTypedData(parameters) {\n    const { domain: domain_, message: message_, primaryType, types, } = parameters;\n    const normalizeData = (struct, data_) => {\n        const data = { ...data_ };\n        for (const param of struct) {\n            const { name, type } = param;\n            if (type === 'address')\n                data[name] = data[name].toLowerCase();\n        }\n        return data;\n    };\n    const domain = (() => {\n        if (!types.EIP712Domain)\n            return {};\n        if (!domain_)\n            return {};\n        return normalizeData(types.EIP712Domain, domain_);\n    })();\n    const message = (() => {\n        if (primaryType === 'EIP712Domain')\n            return undefined;\n        return normalizeData(types[primaryType], message_);\n    })();\n    return stringify({ domain, message, primaryType, types });\n}\nexport function validateTypedData(parameters) {\n    const { domain, message, primaryType, types } = parameters;\n    const validateData = (struct, data) => {\n        for (const param of struct) {\n            const { name, type } = param;\n            const value = data[name];\n            const integerMatch = type.match(integerRegex);\n            if (integerMatch &&\n                (typeof value === 'number' || typeof value === 'bigint')) {\n                const [_type, base, size_] = integerMatch;\n                // If number cannot be cast to a sized hex value, it is out of range\n                // and will throw.\n                numberToHex(value, {\n                    signed: base === 'int',\n                    size: Number.parseInt(size_) / 8,\n                });\n            }\n            if (type === 'address' && typeof value === 'string' && !isAddress(value))\n                throw new InvalidAddressError({ address: value });\n            const bytesMatch = type.match(bytesRegex);\n            if (bytesMatch) {\n                const [_type, size_] = bytesMatch;\n                if (size_ && size(value) !== Number.parseInt(size_))\n                    throw new BytesSizeMismatchError({\n                        expectedSize: Number.parseInt(size_),\n                        givenSize: size(value),\n                    });\n            }\n            const struct = types[type];\n            if (struct) {\n                validateReference(type);\n                validateData(struct, value);\n            }\n        }\n    };\n    // Validate domain types.\n    if (types.EIP712Domain && domain) {\n        if (typeof domain !== 'object')\n            throw new InvalidDomainError({ domain });\n        validateData(types.EIP712Domain, domain);\n    }\n    // Validate message types.\n    if (primaryType !== 'EIP712Domain') {\n        if (types[primaryType])\n            validateData(types[primaryType], message);\n        else\n            throw new InvalidPrimaryTypeError({ primaryType, types });\n    }\n}\nexport function getTypesForEIP712Domain({ domain, }) {\n    return [\n        typeof domain?.name === 'string' && { name: 'name', type: 'string' },\n        domain?.version && { name: 'version', type: 'string' },\n        (typeof domain?.chainId === 'number' ||\n            typeof domain?.chainId === 'bigint') && {\n            name: 'chainId',\n            type: 'uint256',\n        },\n        domain?.verifyingContract && {\n            name: 'verifyingContract',\n            type: 'address',\n        },\n        domain?.salt && { name: 'salt', type: 'bytes32' },\n    ].filter(Boolean);\n}\nexport function domainSeparator({ domain }) {\n    return hashDomain({\n        domain,\n        types: {\n            EIP712Domain: getTypesForEIP712Domain({ domain }),\n        },\n    });\n}\n/** @internal */\nfunction validateReference(type) {\n    // Struct type must not be a Solidity type.\n    if (type === 'address' ||\n        type === 'bool' ||\n        type === 'string' ||\n        type.startsWith('bytes') ||\n        type.startsWith('uint') ||\n        type.startsWith('int'))\n        throw new InvalidStructTypeError({ type });\n}\n//# sourceMappingURL=typedData.js.map","export const presignMessagePrefix = '\\x19Ethereum Signed Message:\\n';\n//# sourceMappingURL=strings.js.map","import { presignMessagePrefix } from '../../constants/strings.js';\nimport { concat } from '../data/concat.js';\nimport { size } from '../data/size.js';\nimport { bytesToHex, stringToHex, } from '../encoding/toHex.js';\nexport function toPrefixedMessage(message_) {\n    const message = (() => {\n        if (typeof message_ === 'string')\n            return stringToHex(message_);\n        if (typeof message_.raw === 'string')\n            return message_.raw;\n        return bytesToHex(message_.raw);\n    })();\n    const prefix = stringToHex(`${presignMessagePrefix}${size(message)}`);\n    return concat([prefix, message]);\n}\n//# sourceMappingURL=toPrefixedMessage.js.map","import { keccak256 } from '../hash/keccak256.js';\nimport { toPrefixedMessage } from './toPrefixedMessage.js';\nexport function hashMessage(message, to_) {\n    return keccak256(toPrefixedMessage(message), to_);\n}\n//# sourceMappingURL=hashMessage.js.map","export const getSDKVersion = () => '9.1.0';\n//# sourceMappingURL=version.js.map","// i.e. 0-255 -> '00'-'ff'\nconst dec2hex = (dec) => dec.toString(16).padStart(2, '0');\nconst generateId = (len) => {\n    const arr = new Uint8Array((len || 40) / 2);\n    window.crypto.getRandomValues(arr);\n    return Array.from(arr, dec2hex).join('');\n};\nconst generateRequestId = () => {\n    if (typeof window !== 'undefined') {\n        return generateId(10);\n    }\n    return new Date().getTime().toString(36);\n};\nexport { generateRequestId };\n//# sourceMappingURL=utils.js.map","import { getSDKVersion } from '../version.js';\nimport { generateRequestId } from './utils.js';\nclass MessageFormatter {\n}\nMessageFormatter.makeRequest = (method, params) => {\n    const id = generateRequestId();\n    return {\n        id,\n        method,\n        params,\n        env: {\n            sdkVersion: getSDKVersion(),\n        },\n    };\n};\nMessageFormatter.makeResponse = (id, data, version) => ({\n    id,\n    success: true,\n    version,\n    data,\n});\nMessageFormatter.makeErrorResponse = (id, error, version) => ({\n    id,\n    success: false,\n    error,\n    version,\n});\nexport { MessageFormatter };\n//# sourceMappingURL=messageFormatter.js.map","export var Methods;\n(function (Methods) {\n    Methods[\"sendTransactions\"] = \"sendTransactions\";\n    Methods[\"rpcCall\"] = \"rpcCall\";\n    Methods[\"getChainInfo\"] = \"getChainInfo\";\n    Methods[\"getSafeInfo\"] = \"getSafeInfo\";\n    Methods[\"getTxBySafeTxHash\"] = \"getTxBySafeTxHash\";\n    Methods[\"getSafeBalances\"] = \"getSafeBalances\";\n    Methods[\"signMessage\"] = \"signMessage\";\n    Methods[\"signTypedMessage\"] = \"signTypedMessage\";\n    Methods[\"getEnvironmentInfo\"] = \"getEnvironmentInfo\";\n    Methods[\"getOffChainSignature\"] = \"getOffChainSignature\";\n    Methods[\"requestAddressBook\"] = \"requestAddressBook\";\n    Methods[\"wallet_getPermissions\"] = \"wallet_getPermissions\";\n    Methods[\"wallet_requestPermissions\"] = \"wallet_requestPermissions\";\n})(Methods || (Methods = {}));\nexport var RestrictedMethods;\n(function (RestrictedMethods) {\n    RestrictedMethods[\"requestAddressBook\"] = \"requestAddressBook\";\n})(RestrictedMethods || (RestrictedMethods = {}));\n//# sourceMappingURL=methods.js.map","import { MessageFormatter } from './messageFormatter.js';\nclass PostMessageCommunicator {\n    constructor(allowedOrigins = null, debugMode = false) {\n        this.allowedOrigins = null;\n        this.callbacks = new Map();\n        this.debugMode = false;\n        this.isServer = typeof window === 'undefined';\n        this.isValidMessage = ({ origin, data, source }) => {\n            const emptyOrMalformed = !data;\n            const sentFromParentEl = !this.isServer && source === window.parent;\n            const majorVersionNumber = typeof data.version !== 'undefined' && parseInt(data.version.split('.')[0]);\n            const allowedSDKVersion = typeof majorVersionNumber === 'number' && majorVersionNumber >= 1;\n            let validOrigin = true;\n            if (Array.isArray(this.allowedOrigins)) {\n                validOrigin = this.allowedOrigins.find((regExp) => regExp.test(origin)) !== undefined;\n            }\n            return !emptyOrMalformed && sentFromParentEl && allowedSDKVersion && validOrigin;\n        };\n        this.logIncomingMessage = (msg) => {\n            console.info(`Safe Apps SDK v1: A message was received from origin ${msg.origin}. `, msg.data);\n        };\n        this.onParentMessage = (msg) => {\n            if (this.isValidMessage(msg)) {\n                this.debugMode && this.logIncomingMessage(msg);\n                this.handleIncomingMessage(msg.data);\n            }\n        };\n        this.handleIncomingMessage = (payload) => {\n            const { id } = payload;\n            const cb = this.callbacks.get(id);\n            if (cb) {\n                cb(payload);\n                this.callbacks.delete(id);\n            }\n        };\n        this.send = (method, params) => {\n            const request = MessageFormatter.makeRequest(method, params);\n            if (this.isServer) {\n                throw new Error(\"Window doesn't exist\");\n            }\n            window.parent.postMessage(request, '*');\n            return new Promise((resolve, reject) => {\n                this.callbacks.set(request.id, (response) => {\n                    if (!response.success) {\n                        reject(new Error(response.error));\n                        return;\n                    }\n                    resolve(response);\n                });\n            });\n        };\n        this.allowedOrigins = allowedOrigins;\n        this.debugMode = debugMode;\n        if (!this.isServer) {\n            window.addEventListener('message', this.onParentMessage);\n        }\n    }\n}\nexport default PostMessageCommunicator;\nexport * from './methods.js';\n//# sourceMappingURL=index.js.map","export const isObjectEIP712TypedData = (obj) => {\n    return typeof obj === 'object' && obj != null && 'domain' in obj && 'types' in obj && 'message' in obj;\n};\n//# sourceMappingURL=sdk.js.map","import { Methods } from '../communication/methods.js';\nimport { isObjectEIP712TypedData, } from '../types/index.js';\nclass TXs {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getBySafeTxHash(safeTxHash) {\n        if (!safeTxHash) {\n            throw new Error('Invalid safeTxHash');\n        }\n        const response = await this.communicator.send(Methods.getTxBySafeTxHash, { safeTxHash });\n        return response.data;\n    }\n    async signMessage(message) {\n        const messagePayload = {\n            message,\n        };\n        const response = await this.communicator.send(Methods.signMessage, messagePayload);\n        return response.data;\n    }\n    async signTypedMessage(typedData) {\n        if (!isObjectEIP712TypedData(typedData)) {\n            throw new Error('Invalid typed data');\n        }\n        const response = await this.communicator.send(Methods.signTypedMessage, { typedData });\n        return response.data;\n    }\n    async send({ txs, params }) {\n        if (!txs || !txs.length) {\n            throw new Error('No transactions were passed');\n        }\n        const messagePayload = {\n            txs,\n            params,\n        };\n        const response = await this.communicator.send(Methods.sendTransactions, messagePayload);\n        return response.data;\n    }\n}\nexport { TXs };\n//# sourceMappingURL=index.js.map","export const RPC_CALLS = {\n    eth_call: 'eth_call',\n    eth_gasPrice: 'eth_gasPrice',\n    eth_getLogs: 'eth_getLogs',\n    eth_getBalance: 'eth_getBalance',\n    eth_getCode: 'eth_getCode',\n    eth_getBlockByHash: 'eth_getBlockByHash',\n    eth_getBlockByNumber: 'eth_getBlockByNumber',\n    eth_getStorageAt: 'eth_getStorageAt',\n    eth_getTransactionByHash: 'eth_getTransactionByHash',\n    eth_getTransactionReceipt: 'eth_getTransactionReceipt',\n    eth_getTransactionCount: 'eth_getTransactionCount',\n    eth_estimateGas: 'eth_estimateGas',\n    safe_setSettings: 'safe_setSettings',\n};\n//# sourceMappingURL=constants.js.map","import { RPC_CALLS } from '../eth/constants.js';\nimport { Methods } from '../communication/methods.js';\nconst inputFormatters = {\n    defaultBlockParam: (arg = 'latest') => arg,\n    returnFullTxObjectParam: (arg = false) => arg,\n    blockNumberToHex: (arg) => Number.isInteger(arg) ? `0x${arg.toString(16)}` : arg,\n};\nclass Eth {\n    constructor(communicator) {\n        this.communicator = communicator;\n        this.call = this.buildRequest({\n            call: RPC_CALLS.eth_call,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getBalance = this.buildRequest({\n            call: RPC_CALLS.eth_getBalance,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getCode = this.buildRequest({\n            call: RPC_CALLS.eth_getCode,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getStorageAt = this.buildRequest({\n            call: RPC_CALLS.eth_getStorageAt,\n            formatters: [null, inputFormatters.blockNumberToHex, inputFormatters.defaultBlockParam],\n        });\n        this.getPastLogs = this.buildRequest({\n            call: RPC_CALLS.eth_getLogs,\n        });\n        this.getBlockByHash = this.buildRequest({\n            call: RPC_CALLS.eth_getBlockByHash,\n            formatters: [null, inputFormatters.returnFullTxObjectParam],\n        });\n        this.getBlockByNumber = this.buildRequest({\n            call: RPC_CALLS.eth_getBlockByNumber,\n            formatters: [inputFormatters.blockNumberToHex, inputFormatters.returnFullTxObjectParam],\n        });\n        this.getTransactionByHash = this.buildRequest({\n            call: RPC_CALLS.eth_getTransactionByHash,\n        });\n        this.getTransactionReceipt = this.buildRequest({\n            call: RPC_CALLS.eth_getTransactionReceipt,\n        });\n        this.getTransactionCount = this.buildRequest({\n            call: RPC_CALLS.eth_getTransactionCount,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getGasPrice = this.buildRequest({\n            call: RPC_CALLS.eth_gasPrice,\n        });\n        this.getEstimateGas = (transaction) => this.buildRequest({\n            call: RPC_CALLS.eth_estimateGas,\n        })([transaction]);\n        this.setSafeSettings = this.buildRequest({\n            call: RPC_CALLS.safe_setSettings,\n        });\n    }\n    buildRequest(args) {\n        const { call, formatters } = args;\n        return async (params) => {\n            if (formatters && Array.isArray(params)) {\n                formatters.forEach((formatter, i) => {\n                    if (formatter) {\n                        params[i] = formatter(params[i]);\n                    }\n                });\n            }\n            const payload = {\n                call,\n                params: params || [],\n            };\n            const response = await this.communicator.send(Methods.rpcCall, payload);\n            return response.data;\n        };\n    }\n}\nexport { Eth };\n//# sourceMappingURL=index.js.map","const MAGIC_VALUE = '0x1626ba7e';\nconst MAGIC_VALUE_BYTES = '0x20c13b0b';\nexport { MAGIC_VALUE, MAGIC_VALUE_BYTES };\n//# sourceMappingURL=signatures.js.map","export const PERMISSIONS_REQUEST_REJECTED = 4001;\nexport class PermissionsError extends Error {\n    constructor(message, code, data) {\n        super(message);\n        this.code = code;\n        this.data = data;\n        // Should adjust prototype manually because how TS handles the type extension compilation\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, PermissionsError.prototype);\n    }\n}\n//# sourceMappingURL=permissions.js.map","import { Methods, RestrictedMethods } from '../communication/methods.js';\nimport { PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\nclass Wallet {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getPermissions() {\n        const response = await this.communicator.send(Methods.wallet_getPermissions, undefined);\n        return response.data;\n    }\n    async requestPermissions(permissions) {\n        if (!this.isPermissionRequestValid(permissions)) {\n            throw new PermissionsError('Permissions request is invalid', PERMISSIONS_REQUEST_REJECTED);\n        }\n        try {\n            const response = await this.communicator.send(Methods.wallet_requestPermissions, permissions);\n            return response.data;\n        }\n        catch {\n            throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n        }\n    }\n    isPermissionRequestValid(permissions) {\n        return permissions.every((pr) => {\n            if (typeof pr === 'object') {\n                return Object.keys(pr).every((method) => {\n                    if (Object.values(RestrictedMethods).includes(method)) {\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            return false;\n        });\n    }\n}\nexport { Wallet };\n//# sourceMappingURL=index.js.map","import { Wallet } from '../wallet/index.js';\nimport { PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\nconst hasPermission = (required, permissions) => permissions.some((permission) => permission.parentCapability === required);\nconst requirePermission = () => (_, propertyKey, descriptor) => {\n    const originalMethod = descriptor.value;\n    descriptor.value = async function () {\n        // @ts-expect-error accessing private property from decorator. 'this' context is the class instance\n        const wallet = new Wallet(this.communicator);\n        let currentPermissions = await wallet.getPermissions();\n        if (!hasPermission(propertyKey, currentPermissions)) {\n            currentPermissions = await wallet.requestPermissions([{ [propertyKey]: {} }]);\n        }\n        if (!hasPermission(propertyKey, currentPermissions)) {\n            throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n        }\n        return originalMethod.apply(this);\n    };\n    return descriptor;\n};\nexport default requirePermission;\n//# sourceMappingURL=requirePermissions.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { encodeFunctionData, hashMessage, hashTypedData } from 'viem';\nimport { MAGIC_VALUE_BYTES, MAGIC_VALUE } from './signatures.js';\nimport { Methods } from '../communication/methods.js';\nimport { RPC_CALLS } from '../eth/constants.js';\nimport { isObjectEIP712TypedData, } from '../types/index.js';\nimport requirePermission from '../decorators/requirePermissions.js';\nclass Safe {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getChainInfo() {\n        const response = await this.communicator.send(Methods.getChainInfo, undefined);\n        return response.data;\n    }\n    async getInfo() {\n        const response = await this.communicator.send(Methods.getSafeInfo, undefined);\n        return response.data;\n    }\n    // There is a possibility that this method will change because we may add pagination to the endpoint\n    async experimental_getBalances({ currency = 'usd' } = {}) {\n        const response = await this.communicator.send(Methods.getSafeBalances, {\n            currency,\n        });\n        return response.data;\n    }\n    async check1271Signature(messageHash, signature = '0x') {\n        const safeInfo = await this.getInfo();\n        const encodedIsValidSignatureCall = encodeFunctionData({\n            abi: [\n                {\n                    constant: false,\n                    inputs: [\n                        {\n                            name: '_dataHash',\n                            type: 'bytes32',\n                        },\n                        {\n                            name: '_signature',\n                            type: 'bytes',\n                        },\n                    ],\n                    name: 'isValidSignature',\n                    outputs: [\n                        {\n                            name: '',\n                            type: 'bytes4',\n                        },\n                    ],\n                    payable: false,\n                    stateMutability: 'nonpayable',\n                    type: 'function',\n                },\n            ],\n            functionName: 'isValidSignature',\n            args: [messageHash, signature],\n        });\n        const payload = {\n            call: RPC_CALLS.eth_call,\n            params: [\n                {\n                    to: safeInfo.safeAddress,\n                    data: encodedIsValidSignatureCall,\n                },\n                'latest',\n            ],\n        };\n        try {\n            const response = await this.communicator.send(Methods.rpcCall, payload);\n            return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    async check1271SignatureBytes(messageHash, signature = '0x') {\n        const safeInfo = await this.getInfo();\n        const encodedIsValidSignatureCall = encodeFunctionData({\n            abi: [\n                {\n                    constant: false,\n                    inputs: [\n                        {\n                            name: '_data',\n                            type: 'bytes',\n                        },\n                        {\n                            name: '_signature',\n                            type: 'bytes',\n                        },\n                    ],\n                    name: 'isValidSignature',\n                    outputs: [\n                        {\n                            name: '',\n                            type: 'bytes4',\n                        },\n                    ],\n                    payable: false,\n                    stateMutability: 'nonpayable',\n                    type: 'function',\n                },\n            ],\n            functionName: 'isValidSignature',\n            args: [messageHash, signature],\n        });\n        const payload = {\n            call: RPC_CALLS.eth_call,\n            params: [\n                {\n                    to: safeInfo.safeAddress,\n                    data: encodedIsValidSignatureCall,\n                },\n                'latest',\n            ],\n        };\n        try {\n            const response = await this.communicator.send(Methods.rpcCall, payload);\n            return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE_BYTES;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    calculateMessageHash(message) {\n        return hashMessage(message);\n    }\n    calculateTypedMessageHash(typedMessage) {\n        const chainId = typeof typedMessage.domain.chainId === 'object'\n            ? typedMessage.domain.chainId.toNumber()\n            : Number(typedMessage.domain.chainId);\n        let primaryType = typedMessage.primaryType;\n        if (!primaryType) {\n            const fields = Object.values(typedMessage.types);\n            // We try to infer primaryType (simplified ether's version)\n            const primaryTypes = Object.keys(typedMessage.types).filter((typeName) => fields.every((dataTypes) => dataTypes.every(({ type }) => type.replace('[', '').replace(']', '') !== typeName)));\n            if (primaryTypes.length === 0 || primaryTypes.length > 1)\n                throw new Error('Please specify primaryType');\n            primaryType = primaryTypes[0];\n        }\n        return hashTypedData({\n            message: typedMessage.message,\n            domain: {\n                ...typedMessage.domain,\n                chainId,\n                verifyingContract: typedMessage.domain.verifyingContract,\n                salt: typedMessage.domain.salt,\n            },\n            types: typedMessage.types,\n            primaryType,\n        });\n    }\n    async getOffChainSignature(messageHash) {\n        const response = await this.communicator.send(Methods.getOffChainSignature, messageHash);\n        return response.data;\n    }\n    async isMessageSigned(message, signature = '0x') {\n        let check;\n        if (typeof message === 'string') {\n            check = async () => {\n                const messageHash = this.calculateMessageHash(message);\n                const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n                return messageHashSigned;\n            };\n        }\n        if (isObjectEIP712TypedData(message)) {\n            check = async () => {\n                const messageHash = this.calculateTypedMessageHash(message);\n                const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n                return messageHashSigned;\n            };\n        }\n        if (check) {\n            const isValid = await check();\n            return isValid;\n        }\n        throw new Error('Invalid message type');\n    }\n    async isMessageHashSigned(messageHash, signature = '0x') {\n        const checks = [this.check1271Signature.bind(this), this.check1271SignatureBytes.bind(this)];\n        for (const check of checks) {\n            const isValid = await check(messageHash, signature);\n            if (isValid) {\n                return true;\n            }\n        }\n        return false;\n    }\n    async getEnvironmentInfo() {\n        const response = await this.communicator.send(Methods.getEnvironmentInfo, undefined);\n        return response.data;\n    }\n    async requestAddressBook() {\n        const response = await this.communicator.send(Methods.requestAddressBook, undefined);\n        return response.data;\n    }\n}\n__decorate([\n    requirePermission()\n], Safe.prototype, \"requestAddressBook\", null);\nexport { Safe };\n//# sourceMappingURL=index.js.map","import InterfaceCommunicator from './communication/index.js';\nimport { TXs } from './txs/index.js';\nimport { Eth } from './eth/index.js';\nimport { Safe } from './safe/index.js';\nimport { Wallet } from './wallet/index.js';\nclass SafeAppsSDK {\n    constructor(opts = {}) {\n        const { allowedDomains = null, debug = false } = opts;\n        this.communicator = new InterfaceCommunicator(allowedDomains, debug);\n        this.eth = new Eth(this.communicator);\n        this.txs = new TXs(this.communicator);\n        this.safe = new Safe(this.communicator);\n        this.wallet = new Wallet(this.communicator);\n    }\n}\nexport default SafeAppsSDK;\n//# sourceMappingURL=sdk.js.map"],"names":["InvalidDomainError","BaseError","domain","stringify","InvalidPrimaryTypeError","primaryType","types","InvalidStructTypeError","type","hashTypedData","parameters","message","getTypesForEIP712Domain","validateTypedData","parts","hashDomain","hashStruct","keccak256","concat","data","encoded","encodeData","encodedTypes","encodedValues","hashType","field","value","encodeField","encodeAbiParameters","encodedHashType","toHex","encodeType","result","unsortedDeps","findTypeDependencies","deps","name","t","primaryType_","results","parsedType","typeValuePairs","item","v","validateData","struct","param","integerMatch","integerRegex","_type","base","size_","numberToHex","isAddress","InvalidAddressError","bytesMatch","bytesRegex","size","BytesSizeMismatchError","validateReference","presignMessagePrefix","toPrefixedMessage","message_","stringToHex","bytesToHex","prefix","hashMessage","to_","getSDKVersion","dec2hex","dec","generateId","len","arr","generateRequestId","MessageFormatter","method","params","id","version","error","Methods","RestrictedMethods","PostMessageCommunicator","allowedOrigins","debugMode","origin","source","emptyOrMalformed","sentFromParentEl","majorVersionNumber","allowedSDKVersion","validOrigin","regExp","msg","payload","cb","request","resolve","reject","response","isObjectEIP712TypedData","obj","TXs","communicator","safeTxHash","messagePayload","typedData","txs","RPC_CALLS","inputFormatters","arg","Eth","transaction","args","call","formatters","formatter","i","MAGIC_VALUE","MAGIC_VALUE_BYTES","PERMISSIONS_REQUEST_REJECTED","PermissionsError","code","Wallet","permissions","pr","hasPermission","required","permission","requirePermission","_","propertyKey","descriptor","originalMethod","wallet","currentPermissions","__decorate","decorators","target","key","desc","c","d","Safe","currency","messageHash","signature","safeInfo","encodedIsValidSignatureCall","encodeFunctionData","typedMessage","chainId","fields","primaryTypes","typeName","dataTypes","check","checks","SafeAppsSDK","opts","allowedDomains","debug","InterfaceCommunicator"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]}