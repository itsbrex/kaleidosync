{"version":3,"file":"sha3-DVSzrknm.js","sources":["../../node_modules/@noble/hashes/_u64.js","../../node_modules/@noble/hashes/crypto.js","../../node_modules/@noble/hashes/utils.js","../../node_modules/@noble/hashes/sha3.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBig = exports.shrSL = exports.shrSH = exports.rotrSL = exports.rotrSH = exports.rotrBL = exports.rotrBH = exports.rotr32L = exports.rotr32H = exports.rotlSL = exports.rotlSH = exports.rotlBL = exports.rotlBH = exports.add5L = exports.add5H = exports.add4L = exports.add4H = exports.add3L = exports.add3H = void 0;\nexports.add = add;\nexports.fromBig = fromBig;\nexports.split = split;\n/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n//# sourceMappingURL=_u64.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","\"use strict\";\n/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.Hash = exports.nextTick = exports.swap32IfBE = exports.byteSwapIfBE = exports.swap8IfBE = exports.isLE = void 0;\nexports.isBytes = isBytes;\nexports.anumber = anumber;\nexports.abytes = abytes;\nexports.ahash = ahash;\nexports.aexists = aexists;\nexports.aoutput = aoutput;\nexports.u8 = u8;\nexports.u32 = u32;\nexports.clean = clean;\nexports.createView = createView;\nexports.rotr = rotr;\nexports.rotl = rotl;\nexports.byteSwap = byteSwap;\nexports.byteSwap32 = byteSwap32;\nexports.bytesToHex = bytesToHex;\nexports.hexToBytes = hexToBytes;\nexports.asyncLoop = asyncLoop;\nexports.utf8ToBytes = utf8ToBytes;\nexports.bytesToUtf8 = bytesToUtf8;\nexports.toBytes = toBytes;\nexports.kdfInputToBytes = kdfInputToBytes;\nexports.concatBytes = concatBytes;\nexports.checkOpts = checkOpts;\nexports.createHasher = createHasher;\nexports.createOptHasher = createOptHasher;\nexports.createXOFer = createXOFer;\nexports.randomBytes = randomBytes;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nfunction u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nfunction u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nfunction clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nfunction createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nfunction rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nfunction rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexports.isLE = (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nfunction byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexports.swap8IfBE = exports.isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexports.byteSwapIfBE = exports.swap8IfBE;\n/** In place byte swap for Uint32Array */\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexports.swap32IfBE = exports.isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nfunction bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nfunction kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nclass Hash {\n}\nexports.Hash = Hash;\n/** Wraps hash function, creating an interface on top of it */\nfunction createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nfunction createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nfunction createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructor = createHasher;\nexports.wrapConstructorWithOpts = createOptHasher;\nexports.wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto_1.crypto && typeof crypto_1.crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto_1.crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = void 0;\nexports.keccakP = keccakP;\n/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nconst _u64_ts_1 = require(\"./_u64.js\");\n// prettier-ignore\nconst utils_ts_1 = require(\"./utils.js\");\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst IOTAS = (0, _u64_ts_1.split)(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0, _u64_ts_1.rotlBH)(h, l, s) : (0, _u64_ts_1.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0, _u64_ts_1.rotlBL)(h, l, s) : (0, _u64_ts_1.rotlSL)(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    (0, utils_ts_1.clean)(B);\n}\n/** Keccak sponge function. */\nclass Keccak extends utils_ts_1.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        this.enableXOF = false;\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        // Can be passed from user as dkLen\n        (0, utils_ts_1.anumber)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (!(0 < blockLen && blockLen < 200))\n            throw new Error('only keccak-f1600 function is supported');\n        this.state = new Uint8Array(200);\n        this.state32 = (0, utils_ts_1.u32)(this.state);\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    keccak() {\n        (0, utils_ts_1.swap32IfBE)(this.state32);\n        keccakP(this.state32, this.rounds);\n        (0, utils_ts_1.swap32IfBE)(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0, utils_ts_1.aexists)(this);\n        data = (0, utils_ts_1.toBytes)(data);\n        (0, utils_ts_1.abytes)(data);\n        const { blockLen, state } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0, utils_ts_1.aexists)(this, false);\n        (0, utils_ts_1.abytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0, utils_ts_1.anumber)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0, utils_ts_1.aoutput)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        (0, utils_ts_1.clean)(this.state);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_ts_1.createHasher)(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nexports.sha3_224 = (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexports.sha3_256 = (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexports.sha3_384 = (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexports.sha3_512 = (() => gen(0x06, 72, 512 / 8))();\n/** keccak-224 hash function. */\nexports.keccak_224 = (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexports.keccak_256 = (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexports.keccak_384 = (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexports.keccak_512 = (() => gen(0x01, 72, 512 / 8))();\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_ts_1.createXOFer)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nexports.shake128 = (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexports.shake256 = (() => genShake(0x1f, 136, 256 / 8))();\n//# sourceMappingURL=sha3.js.map"],"names":["_u64","add","fromBig","split","U32_MASK64","_32n","le","lst","len","Ah","Al","i","h","l","toBig","shrSH","_l","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5L","El","add5H","Eh","u64","crypto","exports","isBytes","anumber","abytes","ahash","aexists","aoutput","u8","u32","clean","createView","rotr","rotl","byteSwap","byteSwap32","bytesToHex","hexToBytes","asyncLoop","utf8ToBytes","bytesToUtf8","toBytes","kdfInputToBytes","concatBytes","checkOpts","createHasher","createOptHasher","createXOFer","randomBytes","crypto_1","require$$0","a","n","b","lengths","instance","checkFinished","out","min","arr","arrays","word","shift","u","hasHexBuiltin","hexes","_","bytes","hex","asciis","asciiToBase16","ch","hl","al","array","ai","hi","n1","n2","char","nextTick","iters","tick","cb","ts","diff","str","data","sum","res","pad","defaults","opts","Hash","hashCons","hashC","msg","tmp","bytesLength","sha3","keccakP","_u64_ts_1","utils_ts_1","require$$1","_0n","_1n","_2n","_7n","_256n","_0x71n","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","round","R","x","y","t","j","IOTAS","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","rounds","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","blockLen","suffix","outputLen","enableXOF","state","pos","take","bufferOut","to","gen","genShake"],"mappings":"+CACA,OAAO,eAAeA,EAAS,aAAc,CAAE,MAAO,GAAM,EAC5DA,EAAA,MAAgBA,EAAA,MAAgBA,EAAA,MAAgBA,SAAiBA,EAAA,OAAiBA,EAAA,OAAiBA,EAAA,OAAiBA,UAAkBA,EAAA,QAAkBA,EAAA,OAAiBA,EAAA,OAAiBA,SAAiBA,EAAA,OAAiBA,EAAA,MAAgBA,EAAA,MAAgBA,EAAA,MAAgBA,QAAgBA,EAAA,MAAgBA,EAAA,MAAgB,OAC5TA,EAAA,IAAcC,EACdD,EAAA,QAAkBE,EAClBF,EAAA,MAAgBG,EAMhB,MAAMC,EAA6B,OAAO,GAAK,GAAK,CAAC,EAC/CC,EAAuB,OAAO,EAAE,EACtC,SAASH,EAAQ,EAAGI,EAAK,GAAO,CAC5B,OAAIA,EACO,CAAE,EAAG,OAAO,EAAIF,CAAU,EAAG,EAAG,OAAQ,GAAKC,EAAQD,CAAU,CAAC,EACpE,CAAE,EAAG,OAAQ,GAAKC,EAAQD,CAAU,EAAI,EAAG,EAAG,OAAO,EAAIA,CAAU,EAAI,CAAC,CACnF,CACA,SAASD,EAAMI,EAAKD,EAAK,GAAO,CAC5B,MAAME,EAAMD,EAAI,OAChB,IAAIE,EAAK,IAAI,YAAYD,CAAG,EACxBE,EAAK,IAAI,YAAYF,CAAG,EAC5B,QAASG,EAAI,EAAGA,EAAIH,EAAKG,IAAK,CAC1B,KAAM,CAAE,EAAAC,EAAG,EAAAC,CAAC,EAAKX,EAAQK,EAAII,CAAC,EAAGL,CAAE,EACnC,CAACG,EAAGE,CAAC,EAAGD,EAAGC,CAAC,CAAC,EAAI,CAACC,EAAGC,CAAC,CAC9B,CACI,MAAO,CAACJ,EAAIC,CAAE,CAClB,CACA,MAAMI,EAAQ,CAACF,EAAGC,IAAO,OAAOD,IAAM,CAAC,GAAKP,EAAQ,OAAOQ,IAAM,CAAC,EAClEb,EAAA,MAAgBc,EAEhB,MAAMC,EAAQ,CAACH,EAAGI,EAAIC,IAAML,IAAMK,EAClCjB,EAAA,MAAgBe,EAChB,MAAMG,EAAQ,CAACN,EAAGC,EAAGI,IAAOL,GAAM,GAAKK,EAAOJ,IAAMI,EACpDjB,EAAA,MAAgBkB,EAEhB,MAAMC,EAAS,CAACP,EAAGC,EAAGI,IAAOL,IAAMK,EAAMJ,GAAM,GAAKI,EACpDjB,EAAA,OAAiBmB,EACjB,MAAMC,EAAS,CAACR,EAAGC,EAAGI,IAAOL,GAAM,GAAKK,EAAOJ,IAAMI,EACrDjB,EAAA,OAAiBoB,EAEjB,MAAMC,EAAS,CAACT,EAAGC,EAAGI,IAAOL,GAAM,GAAKK,EAAOJ,IAAOI,EAAI,GAC1DjB,EAAA,OAAiBqB,EACjB,MAAMC,EAAS,CAACV,EAAGC,EAAGI,IAAOL,IAAOK,EAAI,GAAQJ,GAAM,GAAKI,EAC3DjB,EAAA,OAAiBsB,EAEjB,MAAMC,EAAU,CAACC,EAAIX,IAAMA,EAC3Bb,EAAA,QAAkBuB,EAClB,MAAME,EAAU,CAACb,EAAGI,IAAOJ,EAC3BZ,EAAA,QAAkByB,EAElB,MAAMC,EAAS,CAACd,EAAGC,EAAGI,IAAOL,GAAKK,EAAMJ,IAAO,GAAKI,EACpDjB,EAAA,OAAiB0B,EACjB,MAAMC,EAAS,CAACf,EAAGC,EAAGI,IAAOJ,GAAKI,EAAML,IAAO,GAAKK,EACpDjB,EAAA,OAAiB2B,EAEjB,MAAMC,EAAS,CAAChB,EAAGC,EAAGI,IAAOJ,GAAMI,EAAI,GAAQL,IAAO,GAAKK,EAC3DjB,EAAA,OAAiB4B,EACjB,MAAMC,EAAS,CAACjB,EAAGC,EAAGI,IAAOL,GAAMK,EAAI,GAAQJ,IAAO,GAAKI,EAC3DjB,EAAA,OAAiB6B,EAGjB,SAAS5B,EAAIQ,EAAIC,EAAIoB,EAAIC,EAAI,CACzB,MAAMlB,GAAKH,IAAO,IAAMqB,IAAO,GAC/B,MAAO,CAAE,EAAItB,EAAKqB,GAAOjB,EAAI,GAAK,GAAM,GAAM,EAAG,EAAGA,EAAI,CAAC,CAC7D,CAEA,MAAMmB,EAAQ,CAACtB,EAAIqB,EAAIE,KAAQvB,IAAO,IAAMqB,IAAO,IAAME,IAAO,GAChEjC,EAAA,MAAgBgC,EAChB,MAAME,EAAQ,CAACC,EAAK1B,EAAIqB,EAAIM,IAAQ3B,EAAKqB,EAAKM,GAAOD,EAAM,GAAK,GAAM,GAAM,EAC5EnC,EAAA,MAAgBkC,EAChB,MAAMG,EAAQ,CAAC3B,EAAIqB,EAAIE,EAAIK,KAAQ5B,IAAO,IAAMqB,IAAO,IAAME,IAAO,IAAMK,IAAO,GACjFtC,EAAA,MAAgBqC,EAChB,MAAME,EAAQ,CAACJ,EAAK1B,EAAIqB,EAAIM,EAAII,IAAQ/B,EAAKqB,EAAKM,EAAKI,GAAOL,EAAM,GAAK,GAAM,GAAM,EACrFnC,EAAA,MAAgBuC,EAChB,MAAME,EAAQ,CAAC/B,EAAIqB,EAAIE,EAAIK,EAAII,KAAQhC,IAAO,IAAMqB,IAAO,IAAME,IAAO,IAAMK,IAAO,IAAMI,IAAO,GAClG1C,EAAA,MAAgByC,EAChB,MAAME,EAAQ,CAACR,EAAK1B,EAAIqB,EAAIM,EAAII,EAAII,IAAQnC,EAAKqB,EAAKM,EAAKI,EAAKI,GAAOT,EAAM,GAAK,GAAM,GAAM,EAC9FnC,EAAA,MAAgB2C,EAEhB,MAAME,EAAM,CACR,QAAA3C,EAAS,MAAAC,EAAO,MAAAW,EAChB,MAAAC,EAAO,MAAAG,EACP,OAAAC,EAAQ,OAAAC,EAAQ,OAAAC,EAAQ,OAAAC,EACxB,QAAAC,EAAS,QAAAE,EACT,OAAAC,EAAQ,OAAAC,EAAQ,OAAAC,EAAQ,OAAAC,EACxB,IAAA5B,EAAK,MAAA+B,EAAO,MAAAE,EAAO,MAAAG,EAAO,MAAAE,EAAO,MAAAI,EAAO,MAAAF,GAE5C,OAAAzC,EAAA,QAAkB6C,gDCvFlB,OAAO,eAAeC,EAAS,aAAc,CAAE,MAAO,GAAM,EAC5DA,EAAA,OAAiB,OACjBA,EAAA,OAAiB,OAAO,YAAe,UAAY,WAAY,WAAa,WAAW,OAAS,yDCEhG,sEACA,OAAO,eAAcC,EAAU,aAAc,CAAE,MAAO,GAAM,EAC5DA,EAAA,2BAAqCA,EAAA,wBAAkCA,kBAA0BA,EAAA,KAAeA,EAAA,SAAmBA,aAAqBA,EAAA,aAAuBA,EAAA,UAAoBA,EAAA,KAAe,OAClNA,EAAA,QAAkBC,EAClBD,EAAA,QAAkBE,EAClBF,EAAA,OAAiBG,EACjBH,EAAA,MAAgBI,EAChBJ,EAAA,QAAkBK,EAClBL,EAAA,QAAkBM,EAClBN,EAAA,GAAaO,EACbP,EAAA,IAAcQ,EACdR,EAAA,MAAgBS,EAChBT,EAAA,WAAqBU,EACrBV,EAAA,KAAeW,EACfX,EAAA,KAAeY,EACfZ,EAAA,SAAmBa,EACnBb,EAAA,WAAqBc,EACrBd,EAAA,WAAqBe,EACrBf,EAAA,WAAqBgB,EACrBhB,EAAA,UAAoBiB,EACpBjB,EAAA,YAAsBkB,EACtBlB,EAAA,YAAsBmB,EACtBnB,EAAA,QAAkBoB,EAClBpB,EAAA,gBAA0BqB,EAC1BrB,EAAA,YAAsBsB,EACtBtB,EAAA,UAAoBuB,EACpBvB,EAAA,aAAuBwB,EACvBxB,EAAA,gBAA0ByB,EAC1BzB,EAAA,YAAsB0B,EACtB1B,EAAA,YAAsB2B,EAOtB,MAAMC,EAAWC,EAAA,EAEjB,SAAS5B,EAAQ6B,EAAG,CAChB,OAAOA,aAAa,YAAe,YAAY,OAAOA,CAAC,GAAKA,EAAE,YAAY,OAAS,YACvF,CAEA,SAAS5B,EAAQ6B,EAAG,CAChB,GAAI,CAAC,OAAO,cAAcA,CAAC,GAAKA,EAAI,EAChC,MAAM,IAAI,MAAM,kCAAoCA,CAAC,CAC7D,CAEA,SAAS5B,EAAO6B,KAAMC,EAAS,CAC3B,GAAI,CAAChC,EAAQ+B,CAAC,EACV,MAAM,IAAI,MAAM,qBAAqB,EACzC,GAAIC,EAAQ,OAAS,GAAK,CAACA,EAAQ,SAASD,EAAE,MAAM,EAChD,MAAM,IAAI,MAAM,iCAAmCC,EAAU,gBAAkBD,EAAE,MAAM,CAC/F,CAEA,SAAS5B,EAAMvC,EAAG,CACd,GAAI,OAAOA,GAAM,YAAc,OAAOA,EAAE,QAAW,WAC/C,MAAM,IAAI,MAAM,8CAA8C,EAClEqC,EAAQrC,EAAE,SAAS,EACnBqC,EAAQrC,EAAE,QAAQ,CACtB,CAEA,SAASwC,EAAQ6B,EAAUC,EAAgB,GAAM,CAC7C,GAAID,EAAS,UACT,MAAM,IAAI,MAAM,kCAAkC,EACtD,GAAIC,GAAiBD,EAAS,SAC1B,MAAM,IAAI,MAAM,uCAAuC,CAC/D,CAEA,SAAS5B,EAAQ8B,EAAKF,EAAU,CAC5B/B,EAAOiC,CAAG,EACV,MAAMC,EAAMH,EAAS,UACrB,GAAIE,EAAI,OAASC,EACb,MAAM,IAAI,MAAM,yDAA2DA,CAAG,CAEtF,CAEA,SAAS9B,EAAG+B,EAAK,CACb,OAAO,IAAI,WAAWA,EAAI,OAAQA,EAAI,WAAYA,EAAI,UAAU,CACpE,CAEA,SAAS9B,EAAI8B,EAAK,CACd,OAAO,IAAI,YAAYA,EAAI,OAAQA,EAAI,WAAY,KAAK,MAAMA,EAAI,WAAa,CAAC,CAAC,CACrF,CAEA,SAAS7B,KAAS8B,EAAQ,CACtB,QAAS3E,EAAI,EAAGA,EAAI2E,EAAO,OAAQ3E,IAC/B2E,EAAO3E,CAAC,EAAE,KAAK,CAAC,CAExB,CAEA,SAAS8C,EAAW4B,EAAK,CACrB,OAAO,IAAI,SAASA,EAAI,OAAQA,EAAI,WAAYA,EAAI,UAAU,CAClE,CAEA,SAAS3B,EAAK6B,EAAMC,EAAO,CACvB,OAAQD,GAAS,GAAKC,EAAWD,IAASC,CAC9C,CAEA,SAAS7B,EAAK4B,EAAMC,EAAO,CACvB,OAAQD,GAAQC,EAAWD,IAAU,GAAKC,IAAY,CAC1D,CAEAzC,EAAA,KAAsB,IAAI,WAAW,IAAI,YAAY,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE,CAAC,IAAM,GAElF,SAASa,EAAS2B,EAAM,CACpB,OAAUA,GAAQ,GAAM,WAClBA,GAAQ,EAAK,SACbA,IAAS,EAAK,MACdA,IAAS,GAAM,GACzB,CAEAxC,EAAA,UAAoBA,EAAQ,KACrB+B,GAAMA,EACNA,GAAMlB,EAASkB,CAAC,EAEvB/B,EAAA,aAAuBA,EAAQ,UAE/B,SAASc,EAAWwB,EAAK,CACrB,QAAS1E,EAAI,EAAGA,EAAI0E,EAAI,OAAQ1E,IAC5B0E,EAAI1E,CAAC,EAAIiD,EAASyB,EAAI1E,CAAC,CAAC,EAE5B,OAAO0E,CACX,CACAtC,EAAA,WAAqBA,EAAQ,KACtB0C,GAAMA,EACP5B,EAEN,MAAM6B,EAEN,OAAO,WAAW,KAAK,CAAA,CAAE,EAAE,OAAU,YAAc,OAAO,WAAW,SAAY,WAE3EC,EAAwB,MAAM,KAAK,CAAE,OAAQ,GAAG,EAAI,CAACC,EAAGjF,IAAMA,EAAE,SAAS,EAAE,EAAE,SAAS,EAAG,GAAG,CAAC,EAKnG,SAASmD,EAAW+B,EAAO,CAGvB,GAFA3C,EAAO2C,CAAK,EAERH,EACA,OAAOG,EAAM,MAAK,EAEtB,IAAIC,EAAM,GACV,QAASnF,EAAI,EAAGA,EAAIkF,EAAM,OAAQlF,IAC9BmF,GAAOH,EAAME,EAAMlF,CAAC,CAAC,EAEzB,OAAOmF,CACX,CAEA,MAAMC,EAAS,CAAE,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAG,EAC5D,SAASC,EAAcC,EAAI,CACvB,GAAIA,GAAMF,EAAO,IAAME,GAAMF,EAAO,GAChC,OAAOE,EAAKF,EAAO,GACvB,GAAIE,GAAMF,EAAO,GAAKE,GAAMF,EAAO,EAC/B,OAAOE,GAAMF,EAAO,EAAI,IAC5B,GAAIE,GAAMF,EAAO,GAAKE,GAAMF,EAAO,EAC/B,OAAOE,GAAMF,EAAO,EAAI,GAEhC,CAKA,SAAShC,EAAW+B,EAAK,CACrB,GAAI,OAAOA,GAAQ,SACf,MAAM,IAAI,MAAM,4BAA8B,OAAOA,CAAG,EAE5D,GAAIJ,EACA,OAAO,WAAW,QAAQI,CAAG,EACjC,MAAMI,EAAKJ,EAAI,OACTK,EAAKD,EAAK,EAChB,GAAIA,EAAK,EACL,MAAM,IAAI,MAAM,mDAAqDA,CAAE,EAC3E,MAAME,EAAQ,IAAI,WAAWD,CAAE,EAC/B,QAASE,EAAK,EAAGC,EAAK,EAAGD,EAAKF,EAAIE,IAAMC,GAAM,EAAG,CAC7C,MAAMC,EAAKP,EAAcF,EAAI,WAAWQ,CAAE,CAAC,EACrCE,EAAKR,EAAcF,EAAI,WAAWQ,EAAK,CAAC,CAAC,EAC/C,GAAIC,IAAO,QAAaC,IAAO,OAAW,CACtC,MAAMC,EAAOX,EAAIQ,CAAE,EAAIR,EAAIQ,EAAK,CAAC,EACjC,MAAM,IAAI,MAAM,+CAAiDG,EAAO,cAAgBH,CAAE,CACtG,CACQF,EAAMC,CAAE,EAAIE,EAAK,GAAKC,CAC9B,CACI,OAAOJ,CACX,CAMA,MAAMM,EAAW,SAAY,CAAA,EAC7B3D,EAAA,SAAmB2D,EAEnB,eAAe1C,EAAU2C,EAAOC,EAAMC,EAAI,CACtC,IAAIC,EAAK,KAAK,IAAG,EACjB,QAASnG,EAAI,EAAGA,EAAIgG,EAAOhG,IAAK,CAC5BkG,EAAGlG,CAAC,EAEJ,MAAMoG,EAAO,KAAK,IAAG,EAAKD,EACtBC,GAAQ,GAAKA,EAAOH,IAExB,QAAU7D,EAAQ,UAAQ,EAC1B+D,GAAMC,EACd,CACA,CAKA,SAAS9C,EAAY+C,EAAK,CACtB,GAAI,OAAOA,GAAQ,SACf,MAAM,IAAI,MAAM,iBAAiB,EACrC,OAAO,IAAI,WAAW,IAAI,YAAW,EAAG,OAAOA,CAAG,CAAC,CACvD,CAKA,SAAS9C,EAAY2B,EAAO,CACxB,OAAO,IAAI,YAAW,EAAG,OAAOA,CAAK,CACzC,CAMA,SAAS1B,EAAQ8C,EAAM,CACnB,OAAI,OAAOA,GAAS,WAChBA,EAAOhD,EAAYgD,CAAI,GAC3B/D,EAAO+D,CAAI,EACJA,CACX,CAKA,SAAS7C,EAAgB6C,EAAM,CAC3B,OAAI,OAAOA,GAAS,WAChBA,EAAOhD,EAAYgD,CAAI,GAC3B/D,EAAO+D,CAAI,EACJA,CACX,CAEA,SAAS5C,KAAeiB,EAAQ,CAC5B,IAAI4B,EAAM,EACV,QAASvG,EAAI,EAAGA,EAAI2E,EAAO,OAAQ3E,IAAK,CACpC,MAAMkE,EAAIS,EAAO3E,CAAC,EAClBuC,EAAO2B,CAAC,EACRqC,GAAOrC,EAAE,MACjB,CACI,MAAMsC,EAAM,IAAI,WAAWD,CAAG,EAC9B,QAASvG,EAAI,EAAGyG,EAAM,EAAGzG,EAAI2E,EAAO,OAAQ3E,IAAK,CAC7C,MAAMkE,EAAIS,EAAO3E,CAAC,EAClBwG,EAAI,IAAItC,EAAGuC,CAAG,EACdA,GAAOvC,EAAE,MACjB,CACI,OAAOsC,CACX,CACA,SAAS7C,EAAU+C,EAAUC,EAAM,CAC/B,GAAIA,IAAS,QAAa,CAAA,EAAG,SAAS,KAAKA,CAAI,IAAM,kBACjD,MAAM,IAAI,MAAM,uCAAuC,EAE3D,OADe,OAAO,OAAOD,EAAUC,CAAI,CAE/C,CAEA,MAAMC,CAAK,CACX,CACAxE,EAAA,KAAewE,EAEf,SAAShD,EAAaiD,EAAU,CAC5B,MAAMC,EAASC,GAAQF,EAAQ,EAAG,OAAOrD,EAAQuD,CAAG,CAAC,EAAE,OAAM,EACvDC,EAAMH,EAAQ,EACpB,OAAAC,EAAM,UAAYE,EAAI,UACtBF,EAAM,SAAWE,EAAI,SACrBF,EAAM,OAAS,IAAMD,EAAQ,EACtBC,CACX,CACA,SAASjD,EAAgBgD,EAAU,CAC/B,MAAMC,EAAQ,CAACC,EAAKJ,IAASE,EAASF,CAAI,EAAE,OAAOnD,EAAQuD,CAAG,CAAC,EAAE,OAAM,EACjEC,EAAMH,EAAS,EAAE,EACvB,OAAAC,EAAM,UAAYE,EAAI,UACtBF,EAAM,SAAWE,EAAI,SACrBF,EAAM,OAAUH,GAASE,EAASF,CAAI,EAC/BG,CACX,CACA,SAAShD,EAAY+C,EAAU,CAC3B,MAAMC,EAAQ,CAACC,EAAKJ,IAASE,EAASF,CAAI,EAAE,OAAOnD,EAAQuD,CAAG,CAAC,EAAE,OAAM,EACjEC,EAAMH,EAAS,EAAE,EACvB,OAAAC,EAAM,UAAYE,EAAI,UACtBF,EAAM,SAAWE,EAAI,SACrBF,EAAM,OAAUH,GAASE,EAASF,CAAI,EAC/BG,CACX,CACA1E,EAAA,gBAA0BwB,EAC1BxB,EAAA,wBAAkCyB,EAClCzB,EAAA,2BAAqC0B,EAErC,SAASC,EAAYkD,EAAc,GAAI,CACnC,GAAIjD,EAAS,QAAU,OAAOA,EAAS,OAAO,iBAAoB,WAC9D,OAAOA,EAAS,OAAO,gBAAgB,IAAI,WAAWiD,CAAW,CAAC,EAGtE,GAAIjD,EAAS,QAAU,OAAOA,EAAS,OAAO,aAAgB,WAC1D,OAAO,WAAW,KAAKA,EAAS,OAAO,YAAYiD,CAAW,CAAC,EAEnE,MAAM,IAAI,MAAM,wCAAwC,CAC5D,+CCtTA,OAAO,eAAeC,EAAS,aAAc,CAAE,MAAO,GAAM,EAC5DA,EAAA,SAAmBA,WAAmBA,EAAA,WAAqBA,EAAA,WAAqBA,EAAA,WAAqBA,EAAA,WAAqBA,WAAmBA,EAAA,SAAmBA,EAAA,SAAmBA,WAAmBA,EAAA,OAAiB,OACvNA,EAAA,QAAkBC,EAYlB,MAAMC,EAAYnD,EAAA,EAEZoD,EAAaC,GAAA,EAIbC,EAAM,OAAO,CAAC,EACdC,EAAM,OAAO,CAAC,EACdC,EAAM,OAAO,CAAC,EACdC,EAAM,OAAO,CAAC,EACdC,EAAQ,OAAO,GAAG,EAClBC,EAAS,OAAO,GAAI,EACpBC,EAAU,CAAA,EACVC,EAAY,CAAA,EACZC,EAAa,CAAA,EACnB,QAASC,EAAQ,EAAGC,EAAIT,EAAKU,EAAI,EAAGC,EAAI,EAAGH,EAAQ,GAAIA,IAAS,CAE5D,CAACE,EAAGC,CAAC,EAAI,CAACA,GAAI,EAAID,EAAI,EAAIC,GAAK,CAAC,EAChCN,EAAQ,KAAK,GAAK,EAAIM,EAAID,EAAE,EAE5BJ,EAAU,MAAQE,EAAQ,IAAMA,EAAQ,GAAM,EAAK,EAAE,EAErD,IAAII,EAAIb,EACR,QAASc,EAAI,EAAGA,EAAI,EAAGA,IACnBJ,GAAMA,GAAKT,GAASS,GAAKP,GAAOE,GAAWD,EACvCM,EAAIR,IACJW,GAAKZ,IAASA,GAAuB,OAAOa,CAAC,GAAKb,GAE1DO,EAAW,KAAKK,CAAC,CACrB,CACA,MAAME,KAAYlB,EAAU,OAAOW,EAAY,EAAI,EAC7CQ,EAAcD,EAAM,CAAC,EACrBE,EAAcF,EAAM,CAAC,EAErBG,EAAQ,CAACxI,EAAGC,EAAGI,IAAOA,EAAI,MAAS8G,EAAU,QAAQnH,EAAGC,EAAGI,CAAC,KAAQ8G,EAAU,QAAQnH,EAAGC,EAAGI,CAAC,EAC7FoI,EAAQ,CAACzI,EAAGC,EAAGI,IAAOA,EAAI,MAAS8G,EAAU,QAAQnH,EAAGC,EAAGI,CAAC,KAAQ8G,EAAU,QAAQnH,EAAGC,EAAGI,CAAC,EAEnG,SAAS6G,EAAQ7G,EAAGqI,EAAS,GAAI,CAC7B,MAAMC,EAAI,IAAI,YAAY,EAAK,EAE/B,QAASZ,EAAQ,GAAKW,EAAQX,EAAQ,GAAIA,IAAS,CAE/C,QAASE,EAAI,EAAGA,EAAI,GAAIA,IACpBU,EAAEV,CAAC,EAAI5H,EAAE4H,CAAC,EAAI5H,EAAE4H,EAAI,EAAE,EAAI5H,EAAE4H,EAAI,EAAE,EAAI5H,EAAE4H,EAAI,EAAE,EAAI5H,EAAE4H,EAAI,EAAE,EAC9D,QAASA,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC5B,MAAMW,GAAQX,EAAI,GAAK,GACjBY,GAAQZ,EAAI,GAAK,GACjBa,EAAKH,EAAEE,CAAI,EACXE,EAAKJ,EAAEE,EAAO,CAAC,EACfG,EAAKR,EAAMM,EAAIC,EAAI,CAAC,EAAIJ,EAAEC,CAAI,EAC9BK,EAAKR,EAAMK,EAAIC,EAAI,CAAC,EAAIJ,EAAEC,EAAO,CAAC,EACxC,QAASV,EAAI,EAAGA,EAAI,GAAIA,GAAK,GACzB7H,EAAE4H,EAAIC,CAAC,GAAKc,EACZ3I,EAAE4H,EAAIC,EAAI,CAAC,GAAKe,CAEhC,CAEQ,IAAIC,EAAO7I,EAAE,CAAC,EACV8I,EAAO9I,EAAE,CAAC,EACd,QAAS8H,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,MAAMvD,EAAQiD,EAAUM,CAAC,EACnBa,EAAKR,EAAMU,EAAMC,EAAMvE,CAAK,EAC5BqE,EAAKR,EAAMS,EAAMC,EAAMvE,CAAK,EAC5BwE,EAAKxB,EAAQO,CAAC,EACpBe,EAAO7I,EAAE+I,CAAE,EACXD,EAAO9I,EAAE+I,EAAK,CAAC,EACf/I,EAAE+I,CAAE,EAAIJ,EACR3I,EAAE+I,EAAK,CAAC,EAAIH,CACxB,CAEQ,QAASf,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAAI,CAC7B,QAASD,EAAI,EAAGA,EAAI,GAAIA,IACpBU,EAAEV,CAAC,EAAI5H,EAAE6H,EAAID,CAAC,EAClB,QAASA,EAAI,EAAGA,EAAI,GAAIA,IACpB5H,EAAE6H,EAAID,CAAC,GAAK,CAACU,GAAGV,EAAI,GAAK,EAAE,EAAIU,GAAGV,EAAI,GAAK,EAAE,CAC7D,CAEQ5H,EAAE,CAAC,GAAKiI,EAAYP,CAAK,EACzB1H,EAAE,CAAC,GAAKkI,EAAYR,CAAK,CACjC,IACQX,EAAW,OAAOuB,CAAC,CAC3B,CAEA,MAAMU,UAAejC,EAAW,IAAK,CAEjC,YAAYkC,EAAUC,EAAQC,EAAWC,EAAY,GAAOf,EAAS,GAAI,CAgBrE,GAfA,MAAK,EACL,KAAK,IAAM,EACX,KAAK,OAAS,EACd,KAAK,SAAW,GAChB,KAAK,UAAY,GACjB,KAAK,UAAY,GACjB,KAAK,SAAWY,EAChB,KAAK,OAASC,EACd,KAAK,UAAYC,EACjB,KAAK,UAAYC,EACjB,KAAK,OAASf,KAEVtB,EAAW,SAASoC,CAAS,EAG7B,EAAE,EAAIF,GAAYA,EAAW,KAC7B,MAAM,IAAI,MAAM,yCAAyC,EAC7D,KAAK,MAAQ,IAAI,WAAW,GAAG,EAC/B,KAAK,WAAclC,EAAW,KAAK,KAAK,KAAK,CACrD,CACI,OAAQ,CACJ,OAAO,KAAK,WAAU,CAC9B,CACI,QAAS,IACDA,EAAW,YAAY,KAAK,OAAO,EACvCF,EAAQ,KAAK,QAAS,KAAK,MAAM,KAC7BE,EAAW,YAAY,KAAK,OAAO,EACvC,KAAK,OAAS,EACd,KAAK,IAAM,CACnB,CACI,OAAOf,EAAM,IACLe,EAAW,SAAS,IAAI,EAC5Bf,KAAWe,EAAW,SAASf,CAAI,KAC/Be,EAAW,QAAQf,CAAI,EAC3B,KAAM,CAAE,SAAAiD,EAAU,MAAAI,CAAK,EAAK,KACtB9J,EAAMyG,EAAK,OACjB,QAASsD,EAAM,EAAGA,EAAM/J,GAAM,CAC1B,MAAMgK,EAAO,KAAK,IAAIN,EAAW,KAAK,IAAK1J,EAAM+J,CAAG,EACpD,QAAS5J,EAAI,EAAGA,EAAI6J,EAAM7J,IACtB2J,EAAM,KAAK,KAAK,GAAKrD,EAAKsD,GAAK,EAC/B,KAAK,MAAQL,GACb,KAAK,OAAM,CAC3B,CACQ,OAAO,IACf,CACI,QAAS,CACL,GAAI,KAAK,SACL,OACJ,KAAK,SAAW,GAChB,KAAM,CAAE,MAAAI,EAAO,OAAAH,EAAQ,IAAAI,EAAK,SAAAL,CAAQ,EAAK,KAEzCI,EAAMC,CAAG,GAAKJ,GACTA,EAAS,OAAU,GAAKI,IAAQL,EAAW,GAC5C,KAAK,OAAM,EACfI,EAAMJ,EAAW,CAAC,GAAK,IACvB,KAAK,OAAM,CACnB,CACI,UAAU/E,EAAK,IACP6C,EAAW,SAAS,KAAM,EAAK,KAC/BA,EAAW,QAAQ7C,CAAG,EAC1B,KAAK,OAAM,EACX,MAAMsF,EAAY,KAAK,MACjB,CAAE,SAAAP,CAAQ,EAAK,KACrB,QAASK,EAAM,EAAG/J,EAAM2E,EAAI,OAAQoF,EAAM/J,GAAM,CACxC,KAAK,QAAU0J,GACf,KAAK,OAAM,EACf,MAAMM,EAAO,KAAK,IAAIN,EAAW,KAAK,OAAQ1J,EAAM+J,CAAG,EACvDpF,EAAI,IAAIsF,EAAU,SAAS,KAAK,OAAQ,KAAK,OAASD,CAAI,EAAGD,CAAG,EAChE,KAAK,QAAUC,EACfD,GAAOC,CACnB,CACQ,OAAOrF,CACf,CACI,QAAQA,EAAK,CAET,GAAI,CAAC,KAAK,UACN,MAAM,IAAI,MAAM,uCAAuC,EAC3D,OAAO,KAAK,UAAUA,CAAG,CACjC,CACI,IAAIU,EAAO,CACP,SAAImC,EAAW,SAASnC,CAAK,EACtB,KAAK,QAAQ,IAAI,WAAWA,CAAK,CAAC,CACjD,CACI,WAAWV,EAAK,CAEZ,MADI6C,EAAW,SAAS7C,EAAK,IAAI,EAC7B,KAAK,SACL,MAAM,IAAI,MAAM,6BAA6B,EACjD,YAAK,UAAUA,CAAG,EAClB,KAAK,QAAO,EACLA,CACf,CACI,QAAS,CACL,OAAO,KAAK,WAAW,IAAI,WAAW,KAAK,SAAS,CAAC,CAC7D,CACI,SAAU,CACN,KAAK,UAAY,MACb6C,EAAW,OAAO,KAAK,KAAK,CACxC,CACI,WAAW0C,EAAI,CACX,KAAM,CAAE,SAAAR,EAAU,OAAAC,EAAQ,UAAAC,EAAW,OAAAd,EAAQ,UAAAe,CAAS,EAAK,KAC3D,OAAAK,IAAOA,EAAK,IAAIT,EAAOC,EAAUC,EAAQC,EAAWC,EAAWf,CAAM,GACrEoB,EAAG,QAAQ,IAAI,KAAK,OAAO,EAC3BA,EAAG,IAAM,KAAK,IACdA,EAAG,OAAS,KAAK,OACjBA,EAAG,SAAW,KAAK,SACnBA,EAAG,OAASpB,EAEZoB,EAAG,OAASP,EACZO,EAAG,UAAYN,EACfM,EAAG,UAAYL,EACfK,EAAG,UAAY,KAAK,UACbA,CACf,CACA,CACA7C,EAAA,OAAiBoC,EACjB,MAAMU,EAAM,CAACR,EAAQD,EAAUE,OAAkBpC,EAAW,cAAc,IAAM,IAAIiC,EAAOC,EAAUC,EAAQC,CAAS,CAAC,EAEvHvC,EAAA,SAA0B8C,EAAI,EAAM,IAAK,IAAM,CAAC,EAEhD9C,EAAA,SAA0B8C,EAAI,EAAM,IAAK,IAAM,CAAC,EAEhD9C,EAAA,SAA0B8C,EAAI,EAAM,IAAK,IAAM,CAAC,EAEhD9C,EAAA,SAA0B8C,EAAI,EAAM,GAAI,IAAM,CAAC,EAE/C9C,EAAA,WAA4B8C,EAAI,EAAM,IAAK,IAAM,CAAC,EAElD9C,EAAA,WAA4B8C,EAAI,EAAM,IAAK,IAAM,CAAC,EAElD9C,EAAA,WAA4B8C,EAAI,EAAM,IAAK,IAAM,CAAC,EAElD9C,EAAA,WAA4B8C,EAAI,EAAM,GAAI,IAAM,CAAC,EACjD,MAAMC,EAAW,CAACT,EAAQD,EAAUE,OAAkBpC,EAAW,aAAa,CAACV,EAAO,CAAA,IAAO,IAAI2C,EAAOC,EAAUC,EAAQ7C,EAAK,QAAU,OAAY8C,EAAY9C,EAAK,MAAO,EAAI,CAAC,EAElL,OAAAO,EAAA,SAA0B+C,EAAS,GAAM,IAAK,IAAM,CAAC,EAErD/C,EAAA,SAA0B+C,EAAS,GAAM,IAAK,IAAM,CAAC","x_google_ignoreList":[0,1,2,3]}